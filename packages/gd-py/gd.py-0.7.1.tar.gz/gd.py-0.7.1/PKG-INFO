Metadata-Version: 2.1
Name: gd.py
Version: 0.7.1
Summary: A Geometry Dash API wrapper for Python
Home-page: https://github.com/NeKitDS/gd.py
Author: NeKitDS
Author-email: gdpy13@gmail.com
License: MIT
Project-URL: Documentation, https://gdpy.readthedocs.io/en/latest
Project-URL: Issue tracker, https://github.com/NeKitDS/gd.py/issues
Description: gd.py
        =====
        
        .. image:: https://img.shields.io/pypi/v/gd.py.svg
            :target: https://pypi.python.org/pypi/gd.py
            :alt: PyPI Library Version
        
        .. image:: https://img.shields.io/pypi/pyversions/gd.py.svg
            :target: https://pypi.python.org/pypi/gd.py
            :alt: Required Python Versions
        
        .. image:: https://readthedocs.org/projects/gdpy/badge/?version=latest
            :target: https://gdpy.readthedocs.io/en/latest/?badge=latest
            :alt: Documentation Status
        
        gd.py is a library that provides its users ability to interact with servers of Geometry Dash.
        
        Key Features
        ------------
        
        - Modern Pythonic API
        - High coverage of the supported Geometry Dash API
        - Using ``async`` and ``await`` syntax
        
        Installing
        ----------
        
        **Python 3.5.3 or higher is required**
        
        To install the library, you can just run the following command:
        
        .. code:: sh
        
            # Linux/OS X
            python3 -m pip install -U gd.py
        
            # Windows
            py -3 -m pip install -U gd.py
        
        To install the developer version, run these commands:
        
        .. code:: sh
        
            $ git clone https://github.com/NeKitDS/gd.py
            $ cd gd.py
            $ python3 -m pip install -U .
        
        Quick example
        -------------
        
        .. code:: python
        
            import gd
        
            client = gd.Client()
            
            async def test():
                song = await client.get_song(633206)
                print(song.name)
        
            gd.run(test())
        
            # OUTPUT: Random Song 01
        
        You can find more examples in examples directory.
        
        Links
        -----
        
        - `Documentation <https://gdpy.readthedocs.io/en/latest/index.html>`_
        - `Official Discord Server <https://discord.gg/KjehjaC>`_
        - `Geometry Dash Discord Server <https://discord.gg/xkgrP29>`_
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Requires-Python: >=3.5.3
Description-Content-Type: text/x-rst
Provides-Extra: docs
