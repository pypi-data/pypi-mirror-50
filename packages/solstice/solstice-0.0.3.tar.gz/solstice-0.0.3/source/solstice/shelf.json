{
  "main":
  [
    {
      "icon": "setproject.png",
      "command": "import artellapipe; artellapipe.solstice.update_project();",
      "annotation": "Auto Setup Solstice Project",
      "label": "Set Project",
      "dcc": ["maya"]
    },
    {
      "icon": "artella.png",
      "command": "import artellapipe; artellapipe.solstice.open_artella_project_url()",
      "annotation": "Solstice Artella Project",
      "label": "Artella Project",
      "dcc": ["maya", "houdini", "nuke"]
    },
    {
      "icon": "",
      "command": "",
      "annotation": "separator",
      "label": ""
    },
    {
      "icon": "assetviewer.png",
      "command": "from solstice.pipeline.tools.assetslibrary import assetslibrary; assetslibrary.run();",
      "annotation": "Solstice Asset Library",
      "label": "Assets Viewer",
      "dcc": ["maya", "houdini"]
    },
    {
      "icon": "pipeline.png",
      "command": "from solstice.pipeline.tools.assetsmanager import assetsmanager; assetsmanager.run();",
      "annotation": "Solstice Assets Manager",
      "label": "Assets Manager",
      "dcc": ["maya", "houdini"]
    },
    {
      "icon": "artellamanager.png",
      "command": "import artellapipe; from artellapipe.tools.artellamanager import artellamanager; artellamanager.run(artellapipe.solstice, 'all');",
      "annotation": "Solstice Artella Manager",
      "label": "Artella Manager",
      "dcc": ["maya"]
    },
    {
      "icon": "artella_upload.png",
      "command": "import artellapipe; from artellapipe.tools.artellauploader import artellauploader;artellauploader.run(artellapipe.solstice);",
      "annotation": "Artella Upload Batcher",
      "label": "Artella Uploader",
      "dcc": ["maya"]
    },
    {
      "icon": "tagger.png",
      "command": "from solstice.pipeline.tools.tagger import tagger; tagger.run();",
      "annotation": "Solstice Tagger",
      "label": "Tagger",
      "dcc": ["maya"]
    },
    {
      "icon": "outline.png",
      "command": "from solstice.pipeline.tools.outliner import outliner; outliner.run();",
      "annotation": "Solstice Outliner Tool",
      "label": "Outliner",
      "dcc": ["maya"]
    },
    {
    "icon": "",
    "command": "",
    "annotation": "separator",
    "label": ""
    },
    {
        "icon": "solstice_save.png",
        "command": "import artellapipe; artellapipe.solstice.save_scene(notify=True);",
        "annotation": "Save, remove invalid nodes and clean student license from file",
        "label": "Save",
        "dcc": ["maya", "houdini"]
    },
    {
        "icon": "lock_file.png",
        "command": "import artellapipe; artellapipe.solstice.lock_file(notify=True);",
        "annotation": "Locks current file in Artella server",
        "label": "Lock",
        "dcc": ["maya", "houdini"]
    },
    {
        "icon": "unlock_file.png",
        "command": "import artellapipe; artellapipe.solstice.unlock_file(notify=True);",
        "annotation": "Unlocks current file in Artella server",
        "label": "Unlock",
        "dcc": ["maya", "houdini"]
    },
    {
        "icon": "upload_wip.png",
        "command": "import artellapipe; artellapipe.solstice.upload_working_version(notify=True);",
        "annotation": "Upload new working version of the current file",
        "label": "Upload WIP",
        "dcc": ["maya", "houdini"]
    }
  ],
  "layout":
  [
    {
      "icon": "alembic.png",
      "command": "import artellapipe; from artellapipe.tools.alembicmanager import alembicmanager; alembicmanager.run(artellapipe.solstice);",
      "annotation": "Solstice Alembic Manager",
      "label": "Alembic Manager",
      "dcc": ["maya", "houdini"]
    }
  ],
  "fx":
  [
    {
      "icon": "alembic.png",
      "command": "import artellapipe; from artellapipe.tools.alembicmanager import alembicmanager; alembicmanager.run(artellapipe.solstice);",
      "annotation": "Solstice Alembic Manager",
      "label": "Alembic Manager",
      "dcc": ["maya", "houdini"]
    }
  ],
  "groom":
  [
    {
      "icon": "alembic.png",
      "command": "import artellapipe; from artellapipe.tools.alembicmanager import alembicmanager; alembicmanager.run(artellapipe.solstice);",
      "annotation": "Solstice Alembic Manager",
      "label": "Alembic Manager",
      "dcc": ["maya", "houdini"]
    },
    {
      "icon": "xgen_manager.png",
      "command": "from solstice.pipeline.tools.xgenmanager import xgenmanager; xgenmanager.run();",
      "annotation": "Solstice Xgen Manager",
      "label": "XGen Manager",
      "dcc": ["maya"]
    }
  ]
}