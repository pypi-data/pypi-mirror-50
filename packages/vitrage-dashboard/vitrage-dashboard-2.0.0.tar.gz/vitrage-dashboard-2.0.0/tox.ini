[tox]
minversion = 2.3.2
envlist = py27,py37,pep8,npm
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv =
   VIRTUAL_ENV={envdir}
   PYTHONUNBUFFERED = 1
deps =
   -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
   -r{toxinidir}/test-requirements.txt
   -r{toxinidir}/requirements.txt
commands = {envpython} {toxinidir}/manage.py test vitrage_dashboard {posargs} --exclude-tag integration {posargs}

[testenv:integration]
# Run integration tests only
passenv = AVCONV_INSTALLED
setenv =
  PYTHONHASHSEED=0
  INTEGRATION_TESTS=1
  SELENIUM_HEADLESS=1
  HORIZON_INTEGRATION_TESTS_CONFIG_FILE=vitrage_dashboard/dashboard/tests/integration/horizon.conf
basepython = python3
commands = {envpython} {toxinidir}/manage.py test vitrage_dashboard --tag integration {posargs}


[testenv:pep8]
basepython = python3
whitelist_externals =
  bash
  find
commands =
  flake8
  bash {toxinidir}/tools/find_executables.sh

[testenv:npm]
basepython = python3
passenv =
  HOME
  DISPLAY
commands =
  nodeenv -p
  npm install
  npm run {posargs:test}
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:docs]
basepython = python3
commands = python setup.py build_sphinx

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html
