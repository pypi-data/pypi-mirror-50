# Testing broken map files (some just give warnings)
-
  input:
    args:
      - "check"
      - "nameless.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Invalid Release identifier"
-
  input:
    args:
      - "check"
      - "duplicated.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "Duplicated Release identifier"
    exceptions:
-
  input:
    args:
      - "check"
      - "opening.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Missing '{'"
-
  input:
    args:
      - "check"
      - "double_release.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Missing '{'"
-
  input:
    args:
      - "check"
      - "invalid_element.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Invalid identifier"
-
  input:
    args:
      - "check"
      - "missing_semicolon.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Missing ';' or ':' after 'global'"
-
  input:
    args:
      - "check"
      - "missing_semicolon2.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Missing ';' or ':' after 'other_symbol'"
-
  input:
    args:
      - "check"
      - "missing_semicolon3.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Missing ';' or ':' after 'other_symbol'"
-
  input:
    args:
      - "check"
      - "missing_visibility.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "Missing visibility scope before"
      - "Symbols considered in 'global:'"
    exceptions:
-
  input:
    args:
      - "check"
      - "missing_global.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "Missing visibility scope before"
      - "Symbols considered in 'global:'"
    exceptions:
-
  input:
    args:
      - "check"
      - "invalid_previous.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Invalid identifier"
-
  input:
    args:
      - "check"
      - "missing_previous_closer.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Missing ';'"
-
  input:
    args:
      - "check"
      - "double_previous.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Unexpected character"
-
  input:
    args:
      - "check"
      - "non_existing_previous.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Release 'LIBTC5_8_0_0' not found"
-
  input:
    args:
      - "check"
      - "duplicated_dependency.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "Duplicated Release identifier 'LIBTC5_9_0_0'"
    exceptions:
      - "defined more than 1 release 'LIBTC5_9_0_0'"
-
  input:
    args:
      - "check"
      - "circular_dependency.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
    exceptions:
      - "Circular dependency detected!"
-
  input:
    args:
      - "check"
      - "wildcard_warnings.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "NOTBASE_1_1_0 should not contain the local wildcard because it is \
        not the base version (it refers to version BASE_1_0_0 as its \
        predecessor)"
      - "GLOBAL_WILDCARD_1_2_0 contains the '*' wildcard in global scope. \
        It is probably exporting symbols it should not."
      - "SCOPES_1_3_0 contains unknown scope named scope (different from \
        'global' and 'local')"
      - "The '*' wildcard was found in more than one place:"
      - "    NOTBASE_1_1_0: in 'local'"
      - "    BASE_1_0_0: in 'local'"
      - "    GLOBAL_WILDCARD_1_2_0: in 'global'"
      - "    OTHER_BASE_1_0_0: in 'local'"
      - "More than one release seem to be the base version (contain the \
        local wildcard and do not have a predecessor version):"
      - "   BASE_1_0_0"
      - "   OTHER_BASE_1_0_0"
    exceptions:
-
  input:
    args:
      - "check"
      - "baseless.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "The '*' wildcard was not found"
      - "No base version release found"
    exceptions:
-
  input:
    args:
      - "check"
      - "only_visibility.map"
    stdin:
  output:
    file:
    stdout:
    warnings:
      - "The '*' wildcard was not found"
      - "No base version release found"
    exceptions:
