from pathlib import Path
import site

def kickstart_name():
    return 'userconfigure'

def kickstart_module():
    return __import__(kickstart_name())

def kickstart_filename():
    if site.ENABLE_USER_SITE:
        d = site.getusersitepackages()
    else:
        d = site.getsitepackages()[0]
    return Path(d)/('{}.py').format(kickstart_name())

def configure_configure_name():
    """This name is used as configuration key for prasticus.configure"""
    return "configure_prasticus_configure"

def create_configuration_file(dir):
    config_filename = dir/("{}.py").format(configure_configure_name())
    if dir.is_dir() and not config_filename.exists():
        content = """\
# user defined configuration of module prasticus.configure
def iconfigure(module):
    if False: yield
"""
        config_filename.write_text(content)

def write_kickstart_file(dst, root_dir):
    template = """\
# AUTOGENERATED FILE - DO NOT EDIT
# {name} (see prasticus.configure)
root_dir = {root_dir}
"""
    dst.write_text(template.format(name=dst.name, root_dir=repr(str(root_dir))))


def get_root_dir():
    try:
        mod = kickstart_module()
    except ImportError:
        mod = None
    return getattr(mod, 'root_dir', None)
    
def set_root_dir(
        dir,
        create=True,
        create_config=True,
        kickstart_filename=kickstart_filename):
    dir = Path(dir)
    if create and not dir.is_dir():
        dir.mkdir(parents=True)
    # this raises an error if the directory does not exist
    dir = dir.resolve()
    
    if create_config:
        create_configuration_file(dir)
    write_kickstart_file(kickstart_filename(), dir)
