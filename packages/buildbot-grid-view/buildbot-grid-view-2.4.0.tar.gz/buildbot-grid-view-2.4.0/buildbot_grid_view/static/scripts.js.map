{"version":3,"sources":["webpack://buildbot-grid-view/webpack/universalModuleDefinition","webpack://buildbot-grid-view/webpack/bootstrap","webpack://buildbot-grid-view/./src/module/main.module.js","webpack://buildbot-grid-view/external \"angular-animate\"","webpack://buildbot-grid-view/external \"guanlecoja-ui\"","webpack://buildbot-grid-view/external \"buildbot-data-js\"","webpack://buildbot-grid-view/./src/module/grid.tpl.jade","webpack://buildbot-grid-view/./node_modules/pug-runtime/index.js","webpack://buildbot-grid-view/./src/module/grid.controller.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","angular","config","GridState","constructor","$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider","addGroup","caption","icon","order","state","controller","controllerAs","template","url","reloadOnSearch","data","group","addSettingsGroup","items","type","defaultValue","default_value","locals","pug_html","pug_has_own_property","pug_classes","val","escaping","Array","isArray","className","classString","padding","escapeEnabled","length","pug_escape","pug_classes_array","pug_classes_object","pug_style","out","style","pug_attr","escaped","terse","toJSON","JSON","stringify","indexOf","replace","merge","pug_merge","a","b","arguments","attrs","valA","concat","valB","classes","attr","obj","pug_match_html","_html","html","regexResult","exec","lastIndex","escape","result","index","charCodeAt","substring","rethrow","pug_rethrow","err","filename","lineno","str","Error","window","message","readFileSync","ex","context","lines","split","start","Math","max","end","min","slice","map","line","curr","join","path","Grid","$scope","$stateParams","$state","resultsService","dataService","bbSettingsService","onChange","changeBranch","changeResult","toggleTag","resetTags","refresh","isBuilderDisplayed","isTagToggled","_","mixin","open","closeOnDestroy","branch","tags","tag","results","resultsTexts","push","code","text","settings","getSettingsGroup","revisionLimit","changeFetchLimit","buildFetchLimit","fullChanges","leftToRight","buildsets","getBuildsets","limit","changes","getChanges","builders","getBuilders","buildrequests","getBuildrequests","builds","getBuilds","change","dataReady","_i","_arr","collection","$resolved","dataFetched","_i2","_arr2","bset","req","builder","branches","changesBySSID","_i3","_Array$from","from","sourcestamp","ssid","_i4","_Array$from2","last","sourcestamps","bsid","changeid","_i5","_Object$keys","keys","cid","sort","result1","br","requestsByBSID","_i6","_Array$from3","buildsetid","buildsByReqID","_i7","_Array$from4","build","buildrequestid","_i8","_Array$from5","buildersById","_i9","_Array$from6","_i11","_Object$keys3","requests","_i12","_Array$from7","isNaN","parseInt","splice","builderid","result2","_i10","_Object$keys2","undefined","params","transitionTo","current","notify","_i13","_Array$from8"],"mappings":"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","file":"scripts.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular-animate\"), require(\"guanlecoja-ui\"), require(\"buildbot-data-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"buildbot-grid-view\", [\"angular-animate\", \"guanlecoja-ui\", \"buildbot-data-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"buildbot-grid-view\"] = factory(require(\"angular-animate\"), require(\"guanlecoja-ui\"), require(\"buildbot-data-js\"));\n\telse\n\t\troot[\"buildbot-grid-view\"] = factory(root[\"angular-animate\"], root[\"guanlecoja-ui\"], root[\"buildbot-data-js\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// This file is part of Buildbot.  Buildbot is free software: you can\n// redistribute it and/or modify it under the terms of the GNU General Public\n// License as published by the Free Software Foundation, version 2.\n//\n// This program is distributed in the hope that it will be useful, but WITHOUT\n// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n// details.\n//\n// You should have received a copy of the GNU General Public License along with\n// this program; if not, write to the Free Software Foundation, Inc., 51\n// Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n// Copyright Buildbot Team Members\n\nimport 'angular-animate';\nimport 'guanlecoja-ui';\nimport 'buildbot-data-js';\n\nclass GridState {\n    constructor($stateProvider, glMenuServiceProvider, bbSettingsServiceProvider) {\n        // Menu configuration\n        glMenuServiceProvider.addGroup({\n            name: 'grid',\n            caption: 'Grid View',\n            icon: 'cubes',\n            order: 4\n        });\n\n        // Register URL routing\n        $stateProvider\n            .state({\n                name: 'grid',\n                controller: 'gridController',\n                controllerAs: 'C',\n                template: require('./grid.tpl.jade'),\n                url: '/grid?branch&tag&result',\n                reloadOnSearch: false,\n                data: {\n                    group: 'grid',\n                    caption: 'Grid View'\n                }\n            });\n\n        bbSettingsServiceProvider.addSettingsGroup({\n            name: 'Grid',\n            caption: 'Grid related settings',\n            items: [{\n                    type: 'bool',\n                    name: 'fullChanges',\n                    caption: 'Show avatar and time ago in change details',\n                    defaultValue: false\n                }\n                , {\n                    type: 'bool',\n                    name: 'leftToRight',\n                    caption: 'Show most recent changes on the right',\n                    defaultValue: false\n                }\n                , {\n                    type: 'integer',\n                    name: 'revisionLimit',\n                    caption: 'Maximum number of revisions to display',\n                    default_value: 5\n                }\n                , {\n                    type: 'integer',\n                    name: 'changeFetchLimit',\n                    caption: 'Maximum number of changes to fetch',\n                    default_value: 100\n                }\n                , {\n                    type: 'integer',\n                    name: 'buildFetchLimit',\n                    caption: 'Maximum number of builds to fetch',\n                    default_value: 1000\n                }\n            ]\n        });\n    }\n}\n\n\nangular.module('grid_view', [\n    'ui.router', 'ui.bootstrap', 'ngAnimate', 'guanlecoja.ui', 'bbData'])\n.config(['$stateProvider', 'glMenuServiceProvider', 'bbSettingsServiceProvider', GridState]);\n\nrequire('./grid.controller.js');\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","var pug = require(\"!../../node_modules/pug-runtime/index.js\");\n\nfunction template(locals) {var pug_html = \"\", pug_mixins = {}, pug_interp;pug_html = pug_html + \"\\u003Cdiv class=\\\"container grid\\\"\\u003E\\u003Cdiv class=\\\"load-indicator\\\" ng-hide=\\\"C.dataFetched()\\\"\\u003E\\u003Cdiv class=\\\"spinner\\\"\\u003E\\u003Ci class=\\\"fa fa-circle-o-notch fa-spin fa-2x\\\"\\u003E\\u003C\\u002Fi\\u003E\\u003Cp\\u003Eloading\\u003C\\u002Fp\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cp ng-show=\\\"C.dataFetched() &amp;&amp; C.changes.length == 0\\\"\\u003ENo changes. Grid View needs a changesource to be setup, and\\u003Ca href=\\\"#\\u002Fchanges\\\"\\u003E changes\\u003C\\u002Fa\\u003E to be in the system.\\u003C\\u002Fp\\u003E\\u003Cdiv class=\\\"form-inline\\\" ng-show=\\\"C.dataReady()\\\"\\u003E\\u003Cdiv class=\\\"form-group\\\"\\u003E\\u003Clabel\\u003EBranch\\u003C\\u002Flabel\\u003E\\u003Cselect class=\\\"form-control\\\" ng-model=\\\"C.branch\\\" ng-change=\\\"C.changeBranch(C.branch)\\\" ng-options=\\\"br for br in branches | orderBy\\\"\\u003E\\u003Coption value=\\\"\\\"\\u003E(all)\\u003C\\u002Foption\\u003E\\u003C\\u002Fselect\\u003E\\u003C\\u002Fdiv\\u003E\\u003Cdiv class=\\\"form-group\\\"\\u003E\\u003Clabel\\u003EResults\\u003C\\u002Flabel\\u003E\\u003Cselect class=\\\"form-control\\\" ng-model=\\\"C.result\\\" ng-change=\\\"C.changeResult(C.result)\\\" ng-options=\\\"r.code as r.text for r in C.results\\\"\\u003E\\u003Coption value=\\\"\\\"\\u003E(all)\\u003C\\u002Foption\\u003E\\u003C\\u002Fselect\\u003E\\u003C\\u002Fdiv\\u003E\\u003C\\u002Fdiv\\u003E\\u003Ctable class=\\\"table table-condensed table-striped table-hover\\\" ng-show=\\\"C.dataReady()\\\"\\u003E\\u003Cthead\\u003E\\u003Ctr\\u003E\\u003Cth\\u003EBuilder\\u003C\\u002Fth\\u003E\\u003Cth\\u003E\\u003Cspan ng-show=\\\"C.tags.length == 0\\\"\\u003ETags\\u003C\\u002Fspan\\u003E\\u003Cspan ng-show=\\\"C.tags.length &lt; 5\\\" ng-repeat=\\\"tag in C.tags\\\"\\u003E\\u003Cspan class=\\\"builder-tag label clickable label-success\\\" ng-click=\\\"C.toggleTag(tag)\\\"\\u003E{{ tag }}\\u003C\\u002Fspan\\u003E\\u003C\\u002Fspan\\u003E\\u003Cspan ng-show=\\\"C.tags.length &gt;= 5\\\"\\u003E\\u003Cspan class=\\\"label label-success\\\"\\u003E{{ C.tags.length }} tags\\u003C\\u002Fspan\\u003E\\u003C\\u002Fspan\\u003E\\u003Cspan ng-show=\\\"C.tags.length &gt; 0\\\"\\u003E\\u003Cspan class=\\\"label label-danger clickable\\\" ng-click=\\\"C.resetTags()\\\" uib-tooltip=\\\"Reset tags filter\\\"\\u003Ex\\u003C\\u002Fspan\\u003E\\u003C\\u002Fspan\\u003E\\u003C\\u002Fth\\u003E\\u003Cth class=\\\"change\\\" ng-repeat=\\\"ch in changes track by ch.changeid\\\"\\u003E\\u003Cchangedetails change=\\\"ch\\\" compact=\\\"!C.fullChanges\\\"\\u003E\\u003C\\u002Fchangedetails\\u003E\\u003C\\u002Fth\\u003E\\u003C\\u002Ftr\\u003E\\u003C\\u002Fthead\\u003E\\u003Ctbody\\u003E\\u003Ctr ng-repeat=\\\"b in builders | orderBy: 'name'\\\"\\u003E\\u003Cth\\u003E\\u003Ca ui-sref=\\\"builder({builder: b.builderid})\\\"\\u003E{{ b.name }}\\u003C\\u002Fa\\u003E\\u003C\\u002Fth\\u003E\\u003Ctd\\u003E\\u003Cspan ng-repeat=\\\"tag in b.tags\\\"\\u003E\\u003Cspan class=\\\"builder-tag label clickable\\\" ng-click=\\\"C.toggleTag(tag)\\\" ng-class=\\\"C.isTagToggled(tag) ? 'label-success': 'label-default'\\\"\\u003E{{ tag }}\\u003C\\u002Fspan\\u003E\\u003C\\u002Fspan\\u003E\\u003C\\u002Ftd\\u003E\\u003Ctd ng-repeat=\\\"ch in changes track by ch.changeid\\\"\\u003E\\u003Ca ng-repeat=\\\"build in b.builds[ch.changeid] | orderBy: 'buildid'\\\" ui-sref=\\\"build({builder: b.builderid, build: build.number})\\\"\\u003E\\u003Cspan class=\\\"badge-status\\\" ng-class=\\\"results2class(build, 'pulse')\\\"\\u003E{{ build.number }}\\u003C\\u002Fspan\\u003E\\u003C\\u002Fa\\u003E\\u003C\\u002Ftd\\u003E\\u003C\\u002Ftr\\u003E\\u003C\\u002Ftbody\\u003E\\u003C\\u002Ftable\\u003E\\u003C\\u002Fdiv\\u003E\";;return pug_html;};\nmodule.exports = template;","'use strict';\n\nvar pug_has_own_property = Object.prototype.hasOwnProperty;\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = pug_merge;\nfunction pug_merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = pug_merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n\n  for (var key in b) {\n    if (key === 'class') {\n      var valA = a[key] || [];\n      a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);\n    } else if (key === 'style') {\n      var valA = pug_style(a[key]);\n      valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;\n      var valB = pug_style(b[key]);\n      valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;\n      a[key] = valA + valB;\n    } else {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Process array, object, or string as a string of classes delimited by a space.\n *\n * If `val` is an array, all members of it and its subarrays are counted as\n * classes. If `escaping` is an array, then whether or not the item in `val` is\n * escaped depends on the corresponding item in `escaping`. If `escaping` is\n * not an array, no escaping is done.\n *\n * If `val` is an object, all the keys whose value is truthy are counted as\n * classes. No escaping is done.\n *\n * If `val` is a string, it is counted as a class. No escaping is done.\n *\n * @param {(Array.<string>|Object.<string, boolean>|string)} val\n * @param {?Array.<string>} escaping\n * @return {String}\n */\nexports.classes = pug_classes;\nfunction pug_classes_array(val, escaping) {\n  var classString = '', className, padding = '', escapeEnabled = Array.isArray(escaping);\n  for (var i = 0; i < val.length; i++) {\n    className = pug_classes(val[i]);\n    if (!className) continue;\n    escapeEnabled && escaping[i] && (className = pug_escape(className));\n    classString = classString + padding + className;\n    padding = ' ';\n  }\n  return classString;\n}\nfunction pug_classes_object(val) {\n  var classString = '', padding = '';\n  for (var key in val) {\n    if (key && val[key] && pug_has_own_property.call(val, key)) {\n      classString = classString + padding + key;\n      padding = ' ';\n    }\n  }\n  return classString;\n}\nfunction pug_classes(val, escaping) {\n  if (Array.isArray(val)) {\n    return pug_classes_array(val, escaping);\n  } else if (val && typeof val === 'object') {\n    return pug_classes_object(val);\n  } else {\n    return val || '';\n  }\n}\n\n/**\n * Convert object or string to a string of CSS styles delimited by a semicolon.\n *\n * @param {(Object.<string, string>|string)} val\n * @return {String}\n */\n\nexports.style = pug_style;\nfunction pug_style(val) {\n  if (!val) return '';\n  if (typeof val === 'object') {\n    var out = '';\n    for (var style in val) {\n      /* istanbul ignore else */\n      if (pug_has_own_property.call(val, style)) {\n        out = out + style + ':' + val[style] + ';';\n      }\n    }\n    return out;\n  } else {\n    return val + '';\n  }\n};\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = pug_attr;\nfunction pug_attr(key, val, escaped, terse) {\n  if (val === false || val == null || !val && (key === 'class' || key === 'style')) {\n    return '';\n  }\n  if (val === true) {\n    return ' ' + (terse ? key : key + '=\"' + key + '\"');\n  }\n  var type = typeof val;\n  if ((type === 'object' || type === 'function') && typeof val.toJSON === 'function') {\n    val = val.toJSON();\n  }\n  if (typeof val !== 'string') {\n    val = JSON.stringify(val);\n    if (!escaped && val.indexOf('\"') !== -1) {\n      return ' ' + key + '=\\'' + val.replace(/'/g, '&#39;') + '\\'';\n    }\n  }\n  if (escaped) val = pug_escape(val);\n  return ' ' + key + '=\"' + val + '\"';\n};\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} terse whether to use HTML5 terse boolean attributes\n * @return {String}\n */\nexports.attrs = pug_attrs;\nfunction pug_attrs(obj, terse){\n  var attrs = '';\n\n  for (var key in obj) {\n    if (pug_has_own_property.call(obj, key)) {\n      var val = obj[key];\n\n      if ('class' === key) {\n        val = pug_classes(val);\n        attrs = pug_attr(key, val, false, terse) + attrs;\n        continue;\n      }\n      if ('style' === key) {\n        val = pug_style(val);\n      }\n      attrs += pug_attr(key, val, false, terse);\n    }\n  }\n\n  return attrs;\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nvar pug_match_html = /[\"&<>]/;\nexports.escape = pug_escape;\nfunction pug_escape(_html){\n  var html = '' + _html;\n  var regexResult = pug_match_html.exec(html);\n  if (!regexResult) return _html;\n\n  var result = '';\n  var i, lastIndex, escape;\n  for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {\n    switch (html.charCodeAt(i)) {\n      case 34: escape = '&quot;'; break;\n      case 38: escape = '&amp;'; break;\n      case 60: escape = '&lt;'; break;\n      case 62: escape = '&gt;'; break;\n      default: continue;\n    }\n    if (lastIndex !== i) result += html.substring(lastIndex, i);\n    lastIndex = i + 1;\n    result += escape;\n  }\n  if (lastIndex !== i) return result + html.substring(lastIndex, i);\n  else return result;\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the pug in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @param {String} str original source\n * @api private\n */\n\nexports.rethrow = pug_rethrow;\nfunction pug_rethrow(err, filename, lineno, str){\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str = str || require('fs').readFileSync(filename, 'utf8')\n  } catch (ex) {\n    pug_rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Pug') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n","/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS203: Remove `|| {}` from converted for-own loops\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n// This file is part of Buildbot.  Buildbot is free software: you can\n// redistribute it and/or modify it under the terms of the GNU General Public\n// License as published by the Free Software Foundation, version 2.\n//\n// This program is distributed in the hope that it will be useful, but WITHOUT\n// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n// FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n// details.\n//\n// You should have received a copy of the GNU General Public License along with\n// this program; if not, write to the Free Software Foundation, Inc., 51\n// Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n//\n// Copyright Buildbot Team Members\n\nclass Grid {\n    constructor($scope, $stateParams, $state, resultsService, dataService, bbSettingsService) {\n        this.onChange = this.onChange.bind(this);\n        this.changeBranch = this.changeBranch.bind(this);\n        this.changeResult = this.changeResult.bind(this);\n        this.toggleTag = this.toggleTag.bind(this);\n        this.resetTags = this.resetTags.bind(this);\n        this.refresh = this.refresh.bind(this);\n        this.isBuilderDisplayed = this.isBuilderDisplayed.bind(this);\n        this.isTagToggled = this.isTagToggled.bind(this);\n        this.$scope = $scope;\n        this.$stateParams = $stateParams;\n        this.$state = $state;\n        _.mixin(this.$scope, resultsService);\n        this.data = dataService.open().closeOnDestroy(this.$scope);\n\n        this.branch = this.$stateParams.branch;\n        this.tags = this.$stateParams.tag != null ? this.$stateParams.tag : [];\n        if (!angular.isArray(this.tags)) {\n            this.tags = [this.tags];\n        }\n        this.result = this.$stateParams.result;\n        // XXX: Angular ngOptions tag only works with string values. Force\n        // convert the result code to string.\n        this.results = ((() => {\n            const result = [];\n            for (let c in resultsService.resultsTexts) {\n                const t = resultsService.resultsTexts[c];\n                result.push({code: c + '', text: t});\n            }\n            return result;\n        })());\n\n        const settings = bbSettingsService.getSettingsGroup('Grid');\n        this.revisionLimit = settings.revisionLimit.value;\n        this.changeFetchLimit = settings.changeFetchLimit.value;\n        this.buildFetchLimit = settings.buildFetchLimit.value;\n        this.fullChanges = settings.fullChanges.value;\n        this.leftToRight = settings.leftToRight.value;\n\n        this.buildsets = this.data.getBuildsets({\n            limit: this.buildFetchLimit,\n            order: '-bsid'\n        });\n        this.changes = this.data.getChanges({\n            limit: this.changeFetchLimit,\n            order: '-changeid'\n        });\n        this.builders = this.data.getBuilders();\n        this.buildrequests = this.data.getBuildrequests({\n            limit: this.buildFetchLimit,\n            order: '-buildrequestid'\n        });\n        this.builds = this.data.getBuilds({\n            limit: this.buildFetchLimit,\n            order: '-buildrequestid'\n        });\n\n        this.buildsets.onChange = (this.changes.onChange = (this.builders.onChange =\n            (this.buildrequests.change = (this.builds.onChange = this.onChange))));\n    }\n\n    dataReady() {\n        for (let collection of [this.buildsets, this.changes, this.builders, this.buildrequests, this.builds]) {\n            if (!(collection.$resolved && (collection.length > 0))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    dataFetched() {\n        for (let collection of [this.buildsets, this.changes, this.builders, this.buildrequests, this.builds]) {\n            if (!collection.$resolved) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    onChange() {\n        let bset, c, req;\n        let change, i, builder;\n        if (!this.dataReady()) {\n            return;\n        }\n\n        let changes = {};\n        const branches = {};\n\n        // map changes by source stamp id\n        const changesBySSID = {};\n        for (c of Array.from(this.changes)) {\n            changesBySSID[c.sourcestamp.ssid] = c;\n            c.buildsets = {};\n        }  // there can be multiple buildsets by change\n\n        // associate buildsets to each change and remember existing branches\n        for (bset of Array.from(this.buildsets)) {\n            change = changesBySSID[_.last(bset.sourcestamps).ssid];\n            if (change == null) {\n                continue;\n            }\n\n            change.buildsets[bset.bsid] = bset;\n            if (change.branch == null) { change.branch = 'master'; }\n            branches[change.branch] = true;\n\n            if (this.branch && (change.branch !== this.branch)) {\n                continue;\n            }\n\n            changes[change.changeid] = change;\n        }\n\n        // only keep the @revisionLimit most recent changes for display\n        changes = ((() => {\n            const result = [];\n            for (let cid of Object.keys(changes || {})) {\n                change = changes[cid];\n                result.push(change);\n            }\n            return result;\n        })());\n        if (this.leftToRight) {\n            changes.sort((a, b) => a.changeid - b.changeid);\n            if (changes.length > this.revisionLimit) {\n                changes = changes.slice(changes.length - this.revisionLimit);\n            }\n        } else {\n            changes.sort((a, b) => b.changeid - a.changeid);\n            if (changes.length > this.revisionLimit) {\n                changes = changes.slice(0, this.revisionLimit);\n            }\n        }\n        this.$scope.changes = changes;\n\n        this.$scope.branches = ((() => {\n            const result1 = [];\n            for (let br in branches) {\n                result1.push(br);\n            }\n            return result1;\n        })());\n\n        const requestsByBSID = {};\n        for (req of Array.from(this.buildrequests)) {\n            (requestsByBSID[req.buildsetid] != null ? requestsByBSID[req.buildsetid] : (requestsByBSID[req.buildsetid] = [])).push(req);\n        }\n        const buildsByReqID = {};\n        for (let build of Array.from(this.builds)) {\n            // There may be multiple builds for a given request\n            // (for example when a worker connection is lost).\n            (buildsByReqID[build.buildrequestid] != null ? buildsByReqID[build.buildrequestid] : (buildsByReqID[build.buildrequestid] = [])).push(build);\n        }\n\n        for (builder of Array.from(this.builders)) {\n            builder.builds = {};\n        }\n\n        const buildersById = {};\n        // find builds for the selected changes and associate them to builders\n        for (c of Array.from(this.$scope.changes)) {\n            for (let bsid of Object.keys(c.buildsets || {})) {\n                bset = c.buildsets[bsid];\n                const requests = requestsByBSID[bsid];\n                if (requests == null) {\n                    continue;\n                }\n                for (req of Array.from(requests)) {\n                    const builds = buildsByReqID[req.buildrequestid] != null ? buildsByReqID[req.buildrequestid] : [];\n                    if ((this.result != null) && (this.result !== '') && !isNaN(this.result)) {\n                        i = 0;\n                        while (i < builds.length) {\n                            if (parseInt(builds[i].results) !== parseInt(this.result)) {\n                                builds.splice(i, 1);\n                            } else {\n                                i += 1;\n                            }\n                        }\n                    }\n                    if (!(builds.length > 0)) {\n                        continue;\n                    }\n                    builder = this.builders.get(builds[0].builderid);\n                    if (!this.isBuilderDisplayed(builder)) {\n                        continue;\n                    }\n                    buildersById[builder.builderid] = builder;\n                    builder.builds[c.changeid] = builds;\n                }\n            }\n        }\n\n        return this.$scope.builders = ((() => {\n            const result2 = [];\n            for (i of Object.keys(buildersById || {})) {\n                builder = buildersById[i];\n                result2.push(builder);\n            }\n            return result2;\n        })());\n    }\n\n    changeBranch(branch) {\n        this.branch = branch;\n        return this.refresh();\n    }\n\n    changeResult(result) {\n        this.result = result;\n        return this.refresh();\n    }\n\n    toggleTag(tag) {\n        const i = this.tags.indexOf(tag);\n        if (i < 0) {\n            this.tags.push(tag);\n        } else {\n            this.tags.splice(i, 1);\n        }\n        return this.refresh();\n    }\n\n    resetTags() {\n        this.tags = [];\n        return this.refresh();\n    }\n\n    refresh() {\n        this.$stateParams.branch = this.branch;\n        if (this.tags.length === 0) {\n            this.$stateParams.tag = undefined;\n        } else {\n            this.$stateParams.tag = this.tags;\n        }\n        this.$stateParams.result = this.result;\n\n        const params = {\n            branch: this.$stateParams.branch,\n            tag: this.$stateParams.tag,\n            result: this.$stateParams.result\n        };\n\n        // change URL without reloading page\n        this.$state.transitionTo(this.$state.current, params, {notify: false});\n        return this.onChange();\n    }\n\n    isBuilderDisplayed(builder) {\n        for (let tag of Array.from(this.tags)) {\n            if (builder.tags.indexOf(tag) < 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    isTagToggled(tag) {\n        return this.tags.indexOf(tag) >= 0;\n    }\n}\n\n\nangular.module('grid_view')\n.controller('gridController', ['$scope', '$stateParams', '$state', 'resultsService', 'dataService', 'bbSettingsService', Grid]);\n"],"sourceRoot":""}