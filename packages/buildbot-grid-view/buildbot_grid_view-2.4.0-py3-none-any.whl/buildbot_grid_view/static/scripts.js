!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("angular-animate"),require("guanlecoja-ui"),require("buildbot-data-js")):"function"==typeof define&&define.amd?define("buildbot-grid-view",["angular-animate","guanlecoja-ui","buildbot-data-js"],e):"object"==typeof exports?exports["buildbot-grid-view"]=e(require("angular-animate"),require("guanlecoja-ui"),require("buildbot-data-js")):t["buildbot-grid-view"]=e(t["angular-animate"],t["guanlecoja-ui"],t["buildbot-data-js"])}("undefined"!=typeof self?self:this,function(t,e,s){return function(t){var e={};function s(i){if(e[i])return e[i].exports;var a=e[i]={i:i,l:!1,exports:{}};return t[i].call(a.exports,a,a.exports,s),a.l=!0,a.exports}return s.m=t,s.c=e,s.d=function(t,e,i){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)s.d(i,a,function(e){return t[e]}.bind(null,a));return i},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);s(1),s(2),s(3);angular.module("grid_view",["ui.router","ui.bootstrap","ngAnimate","guanlecoja.ui","bbData"]).config(["$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider",class GridState{constructor(t,e,i){e.addGroup({name:"grid",caption:"Grid View",icon:"cubes",order:4}),t.state({name:"grid",controller:"gridController",controllerAs:"C",template:s(4),url:"/grid?branch&tag&result",reloadOnSearch:!1,data:{group:"grid",caption:"Grid View"}}),i.addSettingsGroup({name:"Grid",caption:"Grid related settings",items:[{type:"bool",name:"fullChanges",caption:"Show avatar and time ago in change details",defaultValue:!1},{type:"bool",name:"leftToRight",caption:"Show most recent changes on the right",defaultValue:!1},{type:"integer",name:"revisionLimit",caption:"Maximum number of revisions to display",default_value:5},{type:"integer",name:"changeFetchLimit",caption:"Maximum number of changes to fetch",default_value:100},{type:"integer",name:"buildFetchLimit",caption:"Maximum number of builds to fetch",default_value:1e3}]})}}]),s(7)},function(e,s){e.exports=t},function(t,s){t.exports=e},function(t,e){t.exports=s},function(t,e,s){s(5);t.exports=function(t){var e="";return e+='<div class="container grid"><div class="load-indicator" ng-hide="C.dataFetched()"><div class="spinner"><i class="fa fa-circle-o-notch fa-spin fa-2x"></i><p>loading</p></div></div><p ng-show="C.dataFetched() &amp;&amp; C.changes.length == 0">No changes. Grid View needs a changesource to be setup, and<a href="#/changes"> changes</a> to be in the system.</p><div class="form-inline" ng-show="C.dataReady()"><div class="form-group"><label>Branch</label><select class="form-control" ng-model="C.branch" ng-change="C.changeBranch(C.branch)" ng-options="br for br in branches | orderBy"><option value="">(all)</option></select></div><div class="form-group"><label>Results</label><select class="form-control" ng-model="C.result" ng-change="C.changeResult(C.result)" ng-options="r.code as r.text for r in C.results"><option value="">(all)</option></select></div></div><table class="table table-condensed table-striped table-hover" ng-show="C.dataReady()"><thead><tr><th>Builder</th><th><span ng-show="C.tags.length == 0">Tags</span><span ng-show="C.tags.length &lt; 5" ng-repeat="tag in C.tags"><span class="builder-tag label clickable label-success" ng-click="C.toggleTag(tag)">{{ tag }}</span></span><span ng-show="C.tags.length &gt;= 5"><span class="label label-success">{{ C.tags.length }} tags</span></span><span ng-show="C.tags.length &gt; 0"><span class="label label-danger clickable" ng-click="C.resetTags()" uib-tooltip="Reset tags filter">x</span></span></th><th class="change" ng-repeat="ch in changes track by ch.changeid"><changedetails change="ch" compact="!C.fullChanges"></changedetails></th></tr></thead><tbody><tr ng-repeat="b in builders | orderBy: \'name\'"><th><a ui-sref="builder({builder: b.builderid})">{{ b.name }}</a></th><td><span ng-repeat="tag in b.tags"><span class="builder-tag label clickable" ng-click="C.toggleTag(tag)" ng-class="C.isTagToggled(tag) ? \'label-success\': \'label-default\'">{{ tag }}</span></span></td><td ng-repeat="ch in changes track by ch.changeid"><a ng-repeat="build in b.builds[ch.changeid] | orderBy: \'buildid\'" ui-sref="build({builder: b.builderid, build: build.number})"><span class="badge-status" ng-class="results2class(build, \'pulse\')">{{ build.number }}</span></a></td></tr></tbody></table></div>'}},function(t,e,s){"use strict";var i=Object.prototype.hasOwnProperty;function a(t,e){return Array.isArray(t)?function(t,e){for(var s,i="",r="",n=Array.isArray(e),l=0;l<t.length;l++)(s=a(t[l]))&&(n&&e[l]&&(s=u(s)),i=i+r+s,r=" ");return i}(t,e):t&&"object"==typeof t?function(t){var e="",s="";for(var a in t)a&&t[a]&&i.call(t,a)&&(e=e+s+a,s=" ");return e}(t):t||""}function r(t){if(!t)return"";if("object"==typeof t){var e="";for(var s in t)i.call(t,s)&&(e=e+s+":"+t[s]+";");return e}return t+""}function n(t,e,s,i){if(!1===e||null==e||!e&&("class"===t||"style"===t))return"";if(!0===e)return" "+(i?t:t+'="'+t+'"');var a=typeof e;return"object"!==a&&"function"!==a||"function"!=typeof e.toJSON||(e=e.toJSON()),"string"==typeof e||(e=JSON.stringify(e),s||-1===e.indexOf('"'))?(s&&(e=u(e))," "+t+'="'+e+'"'):" "+t+"='"+e.replace(/'/g,"&#39;")+"'"}e.merge=function t(e,s){if(1===arguments.length){for(var i=e[0],a=1;a<e.length;a++)i=t(i,e[a]);return i}for(var n in s)if("class"===n){var l=e[n]||[];e[n]=(Array.isArray(l)?l:[l]).concat(s[n]||[])}else if("style"===n){var l=r(e[n]);l=l&&";"!==l[l.length-1]?l+";":l;var u=r(s[n]);u=u&&";"!==u[u.length-1]?u+";":u,e[n]=l+u}else e[n]=s[n];return e},e.classes=a,e.style=r,e.attr=n,e.attrs=function(t,e){var s="";for(var l in t)if(i.call(t,l)){var u=t[l];if("class"===l){u=a(u),s=n(l,u,!1,e)+s;continue}"style"===l&&(u=r(u)),s+=n(l,u,!1,e)}return s};var l=/["&<>]/;function u(t){var e=""+t,s=l.exec(e);if(!s)return t;var i,a,r,n="";for(i=s.index,a=0;i<e.length;i++){switch(e.charCodeAt(i)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}a!==i&&(n+=e.substring(a,i)),a=i+1,n+=r}return a!==i?n+e.substring(a,i):n}e.escape=u,e.rethrow=function t(e,i,a,r){if(!(e instanceof Error))throw e;if(!("undefined"==typeof window&&i||r))throw e.message+=" on line "+a,e;try{r=r||s(6).readFileSync(i,"utf8")}catch(s){t(e,null,a)}var n=3,l=r.split("\n"),u=Math.max(a-n,0),h=Math.min(l.length,a+n);var n=l.slice(u,h).map(function(t,e){var s=e+u+1;return(s==a?"  > ":"    ")+s+"| "+t}).join("\n");e.path=i;e.message=(i||"Pug")+":"+a+"\n"+n+"\n\n"+e.message;throw e}},function(t,e){},function(t,e){angular.module("grid_view").controller("gridController",["$scope","$stateParams","$state","resultsService","dataService","bbSettingsService",class Grid{constructor(t,e,s,i,a,r){this.onChange=this.onChange.bind(this),this.changeBranch=this.changeBranch.bind(this),this.changeResult=this.changeResult.bind(this),this.toggleTag=this.toggleTag.bind(this),this.resetTags=this.resetTags.bind(this),this.refresh=this.refresh.bind(this),this.isBuilderDisplayed=this.isBuilderDisplayed.bind(this),this.isTagToggled=this.isTagToggled.bind(this),this.$scope=t,this.$stateParams=e,this.$state=s,_.mixin(this.$scope,i),this.data=a.open().closeOnDestroy(this.$scope),this.branch=this.$stateParams.branch,this.tags=null!=this.$stateParams.tag?this.$stateParams.tag:[],angular.isArray(this.tags)||(this.tags=[this.tags]),this.result=this.$stateParams.result,this.results=(()=>{var t=[];for(var e in i.resultsTexts){var s=i.resultsTexts[e];t.push({code:e+"",text:s})}return t})();var n=r.getSettingsGroup("Grid");this.revisionLimit=n.revisionLimit.value,this.changeFetchLimit=n.changeFetchLimit.value,this.buildFetchLimit=n.buildFetchLimit.value,this.fullChanges=n.fullChanges.value,this.leftToRight=n.leftToRight.value,this.buildsets=this.data.getBuildsets({limit:this.buildFetchLimit,order:"-bsid"}),this.changes=this.data.getChanges({limit:this.changeFetchLimit,order:"-changeid"}),this.builders=this.data.getBuilders(),this.buildrequests=this.data.getBuildrequests({limit:this.buildFetchLimit,order:"-buildrequestid"}),this.builds=this.data.getBuilds({limit:this.buildFetchLimit,order:"-buildrequestid"}),this.buildsets.onChange=this.changes.onChange=this.builders.onChange=this.buildrequests.change=this.builds.onChange=this.onChange}dataReady(){for(var t=0,e=[this.buildsets,this.changes,this.builders,this.buildrequests,this.builds];t<e.length;t++){var s=e[t];if(!(s.$resolved&&s.length>0))return!1}return!0}dataFetched(){for(var t=0,e=[this.buildsets,this.changes,this.builders,this.buildrequests,this.builds];t<e.length;t++)if(!e[t].$resolved)return!1;return!0}onChange(){var t,e,s,i,a,r;if(this.dataReady()){for(var n={},l={},u={},h=0,o=Array.from(this.changes);h<o.length;h++)u[(e=o[h]).sourcestamp.ssid]=e,e.buildsets={};for(var c=0,d=Array.from(this.buildsets);c<d.length;c++)t=d[c],null!=(i=u[_.last(t.sourcestamps).ssid])&&(i.buildsets[t.bsid]=t,null==i.branch&&(i.branch="master"),l[i.branch]=!0,this.branch&&i.branch!==this.branch||(n[i.changeid]=i));n=(()=>{for(var t=[],e=0,s=Object.keys(n||{});e<s.length;e++){var a=s[e];i=n[a],t.push(i)}return t})(),this.leftToRight?(n.sort((t,e)=>t.changeid-e.changeid),n.length>this.revisionLimit&&(n=n.slice(n.length-this.revisionLimit))):(n.sort((t,e)=>e.changeid-t.changeid),n.length>this.revisionLimit&&(n=n.slice(0,this.revisionLimit))),this.$scope.changes=n,this.$scope.branches=(()=>{var t=[];for(var e in l)t.push(e);return t})();for(var g={},b=0,f=Array.from(this.buildrequests);b<f.length;b++)(null!=g[(s=f[b]).buildsetid]?g[s.buildsetid]:g[s.buildsetid]=[]).push(s);for(var p={},v=0,m=Array.from(this.builds);v<m.length;v++){var y=m[v];(null!=p[y.buildrequestid]?p[y.buildrequestid]:p[y.buildrequestid]=[]).push(y)}for(var C=0,x=Array.from(this.builders);C<x.length;C++)(r=x[C]).builds={};for(var $={},j=0,T=Array.from(this.$scope.changes);j<T.length;j++){e=T[j];for(var w=0,P=Object.keys(e.buildsets||{});w<P.length;w++){var S=P[w];t=e.buildsets[S];var O=g[S];if(null!=O)for(var q=0,A=Array.from(O);q<A.length;q++){var B=null!=p[(s=A[q]).buildrequestid]?p[s.buildrequestid]:[];if(null!=this.result&&""!==this.result&&!isNaN(this.result))for(a=0;a<B.length;)parseInt(B[a].results)!==parseInt(this.result)?B.splice(a,1):a+=1;B.length>0&&(r=this.builders.get(B[0].builderid),this.isBuilderDisplayed(r)&&($[r.builderid]=r,r.builds[e.changeid]=B))}}}return this.$scope.builders=(()=>{for(var t=[],e=0,s=Object.keys($||{});e<s.length;e++)a=s[e],r=$[a],t.push(r);return t})()}}changeBranch(t){return this.branch=t,this.refresh()}changeResult(t){return this.result=t,this.refresh()}toggleTag(t){var e=this.tags.indexOf(t);return e<0?this.tags.push(t):this.tags.splice(e,1),this.refresh()}resetTags(){return this.tags=[],this.refresh()}refresh(){this.$stateParams.branch=this.branch,0===this.tags.length?this.$stateParams.tag=void 0:this.$stateParams.tag=this.tags,this.$stateParams.result=this.result;var t={branch:this.$stateParams.branch,tag:this.$stateParams.tag,result:this.$stateParams.result};return this.$state.transitionTo(this.$state.current,t,{notify:!1}),this.onChange()}isBuilderDisplayed(t){for(var e=0,s=Array.from(this.tags);e<s.length;e++){var i=s[e];if(t.tags.indexOf(i)<0)return!1}return!0}isTagToggled(t){return this.tags.indexOf(t)>=0}}])}])});
//# sourceMappingURL=scripts.js.map