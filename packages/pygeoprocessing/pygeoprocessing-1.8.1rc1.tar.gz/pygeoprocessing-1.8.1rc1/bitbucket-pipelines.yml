pipelines:
  custom:
    appveyor:
      - step:
          # NOTE: this step should not normally be needed if hooks are running
          # as expected with appveyor.  It's added here in case we need to retrigger
          # an appveyor build after-the-fact.
          name: "Retrigger AppVeyor"
          image: debian:9.7
          script:
            - apt-get update && apt-get install -y curl mercurial
            - |
              curl --fail --header "Authorization: Bearer $APPVEYOR_API_KEY" \
                --header "Content-Type: application/json" \
                --data "{'accountName': '$APPVEYOR_ACC_NAME',
                         'projectSlug': '$APPVEYOR_PROJ_SLUG',
                         'branch': '$(hg branch)',
                         'commitID': '$(hg log -r . -T \"{node}\")'}" \
                "https://ci.appveyor.com/api/builds"
            - echo "Build history at "
            - echo "    https://ci.appveyor.com/project/$APPVEYOR_ACC_NAME/$APPVEYOR_PROJ_SLUG/history"
  default:
    - parallel:
      - step:
          name: "Tests: python 3.6 on linux"
          image: natcap/py36-spatial-build:743e6fa5d57d9d84770414b69aab518490f24008
          caches:
              - pip
          script:
              - pip install setuptools_scm cython tox
              - tox -e py36 --sitepackages
      - step:
          name: "Tests: python 3.7 on linux"
          image: natcap/py37-spatial-build:5daac5b1d630949a2b81d1d0f8b017789a3bdeab
          caches:
              - pip
          script:
              - pip install setuptools_scm cython tox
              - tox -e py37 --sitepackages
