Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> list
Rule 1     list -> list ANDNOT list
Rule 2     list -> list AND list
Rule 3     list -> list OR list
Rule 4     list -> list LT freq
Rule 5     list -> list RT freq
Rule 6     feature -> WORD WORD
Rule 7     feature -> feature WORD
Rule 8     list -> feature
Rule 9     list -> WORD
Rule 10    list -> LPAR list RPAR
Rule 11    freq -> FLOAT

Terminals, with rules where they appear

AND                  : 2
ANDNOT               : 1
FLOAT                : 11
LPAR                 : 10
LT                   : 4
OR                   : 3
RPAR                 : 10
RT                   : 5
WORD                 : 6 6 7 9
error                : 

Nonterminals, with rules where they appear

feature              : 7 8
freq                 : 4 5
list                 : 1 1 2 2 3 3 4 5 10 0

Parsing method: LALR

state 0

    (0) S' -> . list
    (1) list -> . list ANDNOT list
    (2) list -> . list AND list
    (3) list -> . list OR list
    (4) list -> . list LT freq
    (5) list -> . list RT freq
    (8) list -> . feature
    (9) list -> . WORD
    (10) list -> . LPAR list RPAR
    (6) feature -> . WORD WORD
    (7) feature -> . feature WORD

    WORD            shift and go to state 3
    LPAR            shift and go to state 4

    list                           shift and go to state 1
    feature                        shift and go to state 2

state 1

    (0) S' -> list .
    (1) list -> list . ANDNOT list
    (2) list -> list . AND list
    (3) list -> list . OR list
    (4) list -> list . LT freq
    (5) list -> list . RT freq

    ANDNOT          shift and go to state 5
    AND             shift and go to state 6
    OR              shift and go to state 7
    LT              shift and go to state 8
    RT              shift and go to state 9


state 2

    (8) list -> feature .
    (7) feature -> feature . WORD

    ANDNOT          reduce using rule 8 (list -> feature .)
    AND             reduce using rule 8 (list -> feature .)
    OR              reduce using rule 8 (list -> feature .)
    LT              reduce using rule 8 (list -> feature .)
    RT              reduce using rule 8 (list -> feature .)
    $end            reduce using rule 8 (list -> feature .)
    RPAR            reduce using rule 8 (list -> feature .)
    WORD            shift and go to state 10


state 3

    (9) list -> WORD .
    (6) feature -> WORD . WORD

    ANDNOT          reduce using rule 9 (list -> WORD .)
    AND             reduce using rule 9 (list -> WORD .)
    OR              reduce using rule 9 (list -> WORD .)
    LT              reduce using rule 9 (list -> WORD .)
    RT              reduce using rule 9 (list -> WORD .)
    $end            reduce using rule 9 (list -> WORD .)
    RPAR            reduce using rule 9 (list -> WORD .)
    WORD            shift and go to state 11


state 4

    (10) list -> LPAR . list RPAR
    (1) list -> . list ANDNOT list
    (2) list -> . list AND list
    (3) list -> . list OR list
    (4) list -> . list LT freq
    (5) list -> . list RT freq
    (8) list -> . feature
    (9) list -> . WORD
    (10) list -> . LPAR list RPAR
    (6) feature -> . WORD WORD
    (7) feature -> . feature WORD

    WORD            shift and go to state 3
    LPAR            shift and go to state 4

    list                           shift and go to state 12
    feature                        shift and go to state 2

state 5

    (1) list -> list ANDNOT . list
    (1) list -> . list ANDNOT list
    (2) list -> . list AND list
    (3) list -> . list OR list
    (4) list -> . list LT freq
    (5) list -> . list RT freq
    (8) list -> . feature
    (9) list -> . WORD
    (10) list -> . LPAR list RPAR
    (6) feature -> . WORD WORD
    (7) feature -> . feature WORD

    WORD            shift and go to state 3
    LPAR            shift and go to state 4

    list                           shift and go to state 13
    feature                        shift and go to state 2

state 6

    (2) list -> list AND . list
    (1) list -> . list ANDNOT list
    (2) list -> . list AND list
    (3) list -> . list OR list
    (4) list -> . list LT freq
    (5) list -> . list RT freq
    (8) list -> . feature
    (9) list -> . WORD
    (10) list -> . LPAR list RPAR
    (6) feature -> . WORD WORD
    (7) feature -> . feature WORD

    WORD            shift and go to state 3
    LPAR            shift and go to state 4

    list                           shift and go to state 14
    feature                        shift and go to state 2

state 7

    (3) list -> list OR . list
    (1) list -> . list ANDNOT list
    (2) list -> . list AND list
    (3) list -> . list OR list
    (4) list -> . list LT freq
    (5) list -> . list RT freq
    (8) list -> . feature
    (9) list -> . WORD
    (10) list -> . LPAR list RPAR
    (6) feature -> . WORD WORD
    (7) feature -> . feature WORD

    WORD            shift and go to state 3
    LPAR            shift and go to state 4

    list                           shift and go to state 15
    feature                        shift and go to state 2

state 8

    (4) list -> list LT . freq
    (11) freq -> . FLOAT

    FLOAT           shift and go to state 17

    freq                           shift and go to state 16

state 9

    (5) list -> list RT . freq
    (11) freq -> . FLOAT

    FLOAT           shift and go to state 17

    freq                           shift and go to state 18

state 10

    (7) feature -> feature WORD .

    WORD            reduce using rule 7 (feature -> feature WORD .)
    ANDNOT          reduce using rule 7 (feature -> feature WORD .)
    AND             reduce using rule 7 (feature -> feature WORD .)
    OR              reduce using rule 7 (feature -> feature WORD .)
    LT              reduce using rule 7 (feature -> feature WORD .)
    RT              reduce using rule 7 (feature -> feature WORD .)
    $end            reduce using rule 7 (feature -> feature WORD .)
    RPAR            reduce using rule 7 (feature -> feature WORD .)


state 11

    (6) feature -> WORD WORD .

    WORD            reduce using rule 6 (feature -> WORD WORD .)
    ANDNOT          reduce using rule 6 (feature -> WORD WORD .)
    AND             reduce using rule 6 (feature -> WORD WORD .)
    OR              reduce using rule 6 (feature -> WORD WORD .)
    LT              reduce using rule 6 (feature -> WORD WORD .)
    RT              reduce using rule 6 (feature -> WORD WORD .)
    $end            reduce using rule 6 (feature -> WORD WORD .)
    RPAR            reduce using rule 6 (feature -> WORD WORD .)


state 12

    (10) list -> LPAR list . RPAR
    (1) list -> list . ANDNOT list
    (2) list -> list . AND list
    (3) list -> list . OR list
    (4) list -> list . LT freq
    (5) list -> list . RT freq

    RPAR            shift and go to state 19
    ANDNOT          shift and go to state 5
    AND             shift and go to state 6
    OR              shift and go to state 7
    LT              shift and go to state 8
    RT              shift and go to state 9


state 13

    (1) list -> list ANDNOT list .
    (1) list -> list . ANDNOT list
    (2) list -> list . AND list
    (3) list -> list . OR list
    (4) list -> list . LT freq
    (5) list -> list . RT freq

  ! shift/reduce conflict for ANDNOT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
    $end            reduce using rule 1 (list -> list ANDNOT list .)
    RPAR            reduce using rule 1 (list -> list ANDNOT list .)
    ANDNOT          shift and go to state 5
    AND             shift and go to state 6
    OR              shift and go to state 7
    LT              shift and go to state 8
    RT              shift and go to state 9

  ! ANDNOT          [ reduce using rule 1 (list -> list ANDNOT list .) ]
  ! AND             [ reduce using rule 1 (list -> list ANDNOT list .) ]
  ! OR              [ reduce using rule 1 (list -> list ANDNOT list .) ]
  ! LT              [ reduce using rule 1 (list -> list ANDNOT list .) ]
  ! RT              [ reduce using rule 1 (list -> list ANDNOT list .) ]


state 14

    (2) list -> list AND list .
    (1) list -> list . ANDNOT list
    (2) list -> list . AND list
    (3) list -> list . OR list
    (4) list -> list . LT freq
    (5) list -> list . RT freq

  ! shift/reduce conflict for ANDNOT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
    $end            reduce using rule 2 (list -> list AND list .)
    RPAR            reduce using rule 2 (list -> list AND list .)
    ANDNOT          shift and go to state 5
    AND             shift and go to state 6
    OR              shift and go to state 7
    LT              shift and go to state 8
    RT              shift and go to state 9

  ! ANDNOT          [ reduce using rule 2 (list -> list AND list .) ]
  ! AND             [ reduce using rule 2 (list -> list AND list .) ]
  ! OR              [ reduce using rule 2 (list -> list AND list .) ]
  ! LT              [ reduce using rule 2 (list -> list AND list .) ]
  ! RT              [ reduce using rule 2 (list -> list AND list .) ]


state 15

    (3) list -> list OR list .
    (1) list -> list . ANDNOT list
    (2) list -> list . AND list
    (3) list -> list . OR list
    (4) list -> list . LT freq
    (5) list -> list . RT freq

  ! shift/reduce conflict for ANDNOT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
    $end            reduce using rule 3 (list -> list OR list .)
    RPAR            reduce using rule 3 (list -> list OR list .)
    ANDNOT          shift and go to state 5
    AND             shift and go to state 6
    OR              shift and go to state 7
    LT              shift and go to state 8
    RT              shift and go to state 9

  ! ANDNOT          [ reduce using rule 3 (list -> list OR list .) ]
  ! AND             [ reduce using rule 3 (list -> list OR list .) ]
  ! OR              [ reduce using rule 3 (list -> list OR list .) ]
  ! LT              [ reduce using rule 3 (list -> list OR list .) ]
  ! RT              [ reduce using rule 3 (list -> list OR list .) ]


state 16

    (4) list -> list LT freq .

    ANDNOT          reduce using rule 4 (list -> list LT freq .)
    AND             reduce using rule 4 (list -> list LT freq .)
    OR              reduce using rule 4 (list -> list LT freq .)
    LT              reduce using rule 4 (list -> list LT freq .)
    RT              reduce using rule 4 (list -> list LT freq .)
    $end            reduce using rule 4 (list -> list LT freq .)
    RPAR            reduce using rule 4 (list -> list LT freq .)


state 17

    (11) freq -> FLOAT .

    ANDNOT          reduce using rule 11 (freq -> FLOAT .)
    AND             reduce using rule 11 (freq -> FLOAT .)
    OR              reduce using rule 11 (freq -> FLOAT .)
    LT              reduce using rule 11 (freq -> FLOAT .)
    RT              reduce using rule 11 (freq -> FLOAT .)
    $end            reduce using rule 11 (freq -> FLOAT .)
    RPAR            reduce using rule 11 (freq -> FLOAT .)


state 18

    (5) list -> list RT freq .

    ANDNOT          reduce using rule 5 (list -> list RT freq .)
    AND             reduce using rule 5 (list -> list RT freq .)
    OR              reduce using rule 5 (list -> list RT freq .)
    LT              reduce using rule 5 (list -> list RT freq .)
    RT              reduce using rule 5 (list -> list RT freq .)
    $end            reduce using rule 5 (list -> list RT freq .)
    RPAR            reduce using rule 5 (list -> list RT freq .)


state 19

    (10) list -> LPAR list RPAR .

    ANDNOT          reduce using rule 10 (list -> LPAR list RPAR .)
    AND             reduce using rule 10 (list -> LPAR list RPAR .)
    OR              reduce using rule 10 (list -> LPAR list RPAR .)
    LT              reduce using rule 10 (list -> LPAR list RPAR .)
    RT              reduce using rule 10 (list -> LPAR list RPAR .)
    $end            reduce using rule 10 (list -> LPAR list RPAR .)
    RPAR            reduce using rule 10 (list -> LPAR list RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ANDNOT in state 13 resolved as shift
WARNING: shift/reduce conflict for AND in state 13 resolved as shift
WARNING: shift/reduce conflict for OR in state 13 resolved as shift
WARNING: shift/reduce conflict for LT in state 13 resolved as shift
WARNING: shift/reduce conflict for RT in state 13 resolved as shift
WARNING: shift/reduce conflict for ANDNOT in state 14 resolved as shift
WARNING: shift/reduce conflict for AND in state 14 resolved as shift
WARNING: shift/reduce conflict for OR in state 14 resolved as shift
WARNING: shift/reduce conflict for LT in state 14 resolved as shift
WARNING: shift/reduce conflict for RT in state 14 resolved as shift
WARNING: shift/reduce conflict for ANDNOT in state 15 resolved as shift
WARNING: shift/reduce conflict for AND in state 15 resolved as shift
WARNING: shift/reduce conflict for OR in state 15 resolved as shift
WARNING: shift/reduce conflict for LT in state 15 resolved as shift
WARNING: shift/reduce conflict for RT in state 15 resolved as shift
