from pystubit.board import *import umailimport urequestsimport timeimport sysimport jsonimport socketimport ioimport machinedef __nwled_on():    nwpin = machine.Pin(12, machine.Pin.OUT)    nwpin.value(1)def __nwled_off():    nwpin = machine.Pin(12, machine.Pin.OUT)    nwpin.value(0)"""WIFI"""wifi = Nonewifi_ap = Nonewifi_info = {    'ssid': '',    'pwd': ''}# WiFi configurationdef wifi_config(ssid, pwd):    global wifi, wifi_info    wifi_info['ssid'] = ssid    wifi_info['pwd'] = pwd# WiFi connectiondef wifi_connect(trytime = None):    global wifi, wifi_info    # Connect to WiFi router    wifi = CreateWLAN()    wifi.active(True)    if trytime == None:        if not wifi.connect(wifi_info['ssid'], wifi_info['pwd']):            __nwled_off()            return False    else:        count = 0        while trytime > count:            if not wifi.connect(wifi_info['ssid'], wifi_info['pwd']):                count += 1            else:                break        if count < trytime:            __nwled_on()            return True        else:            __nwled_off()            return False    __nwled_on()    return True# WiFi disconnectiondef wifi_disconnect():    global wifi    if wifi is not None:        wifi.disconnect()        wifi.active(False)        __nwled_off()def wifi_ifconfig():    global wifi    if wifi is not None:        return wifi.ifconfig()def wifi_create_ap():    global wifi_ap, wifi_info    # Connect to WiFi router    wifi_ap = CreateWLAN(mode='AP')    wifi_ap.active(True)    wifi_ap.config(essid=wifi_info['ssid'],                   authmode=3,                   password=wifi_info['pwd'])"""Send Mail"""smtp_info = {    'host':'smtp.gmail.com',    'port':587,    'ssl': False,    'username':'',  # GMail login name    'password':''  # GMail login password}# SMTP configurationdef smtp_config(*, host=None, port=None,                ssl=None, username=None, password=None):    global smtp_info    # curl.options(verbose=True)    if host is not None:        if type(host) != str:            raise TypeError('host must be string')        smtp_info['host'] = host    if port is not None:        if type(port) != int:            raise TypeError('port must be integer')        smtp_info['port'] = port    if ssl is not None:        if type(ssl) != bool:            raise TypeError('ssl must be boolean')        smtp_info['ssl'] = ssl    if username is not None:        if type(username) != str:            raise TypeError('username must be string')        smtp_info['username'] = username    if password is not None:        if type(password) != str:            raise TypeError('password must be string')        smtp_info['password'] = passworddef sendmail(to, title, message):    global smtp_info    smtp = umail.SMTP(smtp_info['host'],                      smtp_info['port'],                      smtp_info['ssl'],                      smtp_info['username'],                      smtp_info['password'])    smtp.to(to)    smtp.write("From: " + smtp_info['username'] + "\n")    smtp.write("To: " + to + "\n")    smtp.write("Subject: " + title + "\n")    smtp.write(message + "\n")    smtp.send()    smtp.quit()"""HTTP"""def get_request(url, param=None):    if param != None:        query = ''        for k, v in param.items():            query += k + '=' + str(v) + '&'        query = query[:-1]        req = url+'?'+query    else:        req = url    return urequests.get(req)    """Terminal In/Out Function API"""def analog_read(pin):  if pin is 'P0':    return p0.read_analog(mv=False)def digital_write(pin, on):  if pin is 'P13':    return p13.write_digital(on)  def celsius(pin):  if pin is 'P0':    temp=analog_read(pin)    temp=(((temp/4095)*3.3)-0.5)/0.01    return temp