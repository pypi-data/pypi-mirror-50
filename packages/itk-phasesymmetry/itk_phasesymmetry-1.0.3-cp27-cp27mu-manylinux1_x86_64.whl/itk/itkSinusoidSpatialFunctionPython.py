# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSinusoidSpatialFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSinusoidSpatialFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkSinusoidSpatialFunctionPython
            return _itkSinusoidSpatialFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSinusoidSpatialFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSinusoidSpatialFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSinusoidSpatialFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialFunctionPython
import itkPointPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import pyBasePython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkFunctionBasePython
import ITKCommonBasePython
import itkCovariantVectorPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkArrayPython
import itkContinuousIndexPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkImagePython
import itkImageRegionPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
class itkSinusoidSpatialFunctionF2PD2(itkSpatialFunctionPython.itkSpatialFunctionF2PD2):
    """Proxy of C++ itkSinusoidSpatialFunctionF2PD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itk::SmartPointer< itk::SinusoidSpatialFunction< float,2,itk::Point< double,2 > > >"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkSinusoidSpatialFunctionF2PD2 self) -> itk::SmartPointer< itk::SinusoidSpatialFunction< float,2,itk::Point< double,2 > > >"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_Clone(self)


    def SetPhaseOffset(self, _arg):
        """SetPhaseOffset(itkSinusoidSpatialFunctionF2PD2 self, double const _arg)"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_SetPhaseOffset(self, _arg)


    def GetPhaseOffset(self):
        """GetPhaseOffset(itkSinusoidSpatialFunctionF2PD2 self) -> double"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_GetPhaseOffset(self)


    def SetFrequency(self, _arg):
        """SetFrequency(itkSinusoidSpatialFunctionF2PD2 self, itkFixedArrayD2 _arg)"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_SetFrequency(self, _arg)


    def GetFrequency(self):
        """GetFrequency(itkSinusoidSpatialFunctionF2PD2 self) -> itkFixedArrayD2"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_GetFrequency(self)

itkSinusoidSpatialFunctionF2PD2.Clone = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_Clone, None, itkSinusoidSpatialFunctionF2PD2)
itkSinusoidSpatialFunctionF2PD2.SetPhaseOffset = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_SetPhaseOffset, None, itkSinusoidSpatialFunctionF2PD2)
itkSinusoidSpatialFunctionF2PD2.GetPhaseOffset = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_GetPhaseOffset, None, itkSinusoidSpatialFunctionF2PD2)
itkSinusoidSpatialFunctionF2PD2.SetFrequency = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_SetFrequency, None, itkSinusoidSpatialFunctionF2PD2)
itkSinusoidSpatialFunctionF2PD2.GetFrequency = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_GetFrequency, None, itkSinusoidSpatialFunctionF2PD2)
itkSinusoidSpatialFunctionF2PD2_swigregister = _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2_swigregister
itkSinusoidSpatialFunctionF2PD2_swigregister(itkSinusoidSpatialFunctionF2PD2)

def itkSinusoidSpatialFunctionF2PD2___New_orig__():
    """itkSinusoidSpatialFunctionF2PD2___New_orig__() -> itk::SmartPointer< itk::SinusoidSpatialFunction< float,2,itk::Point< double,2 > > >"""
    return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF2PD2___New_orig__()

class itkSinusoidSpatialFunctionF3PD3(itkSpatialFunctionPython.itkSpatialFunctionF3PD3):
    """Proxy of C++ itkSinusoidSpatialFunctionF3PD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itk::SmartPointer< itk::SinusoidSpatialFunction< float,3,itk::Point< double,3 > > >"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkSinusoidSpatialFunctionF3PD3 self) -> itk::SmartPointer< itk::SinusoidSpatialFunction< float,3,itk::Point< double,3 > > >"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_Clone(self)


    def SetPhaseOffset(self, _arg):
        """SetPhaseOffset(itkSinusoidSpatialFunctionF3PD3 self, double const _arg)"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_SetPhaseOffset(self, _arg)


    def GetPhaseOffset(self):
        """GetPhaseOffset(itkSinusoidSpatialFunctionF3PD3 self) -> double"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_GetPhaseOffset(self)


    def SetFrequency(self, _arg):
        """SetFrequency(itkSinusoidSpatialFunctionF3PD3 self, itkFixedArrayD3 _arg)"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_SetFrequency(self, _arg)


    def GetFrequency(self):
        """GetFrequency(itkSinusoidSpatialFunctionF3PD3 self) -> itkFixedArrayD3"""
        return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_GetFrequency(self)

itkSinusoidSpatialFunctionF3PD3.Clone = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_Clone, None, itkSinusoidSpatialFunctionF3PD3)
itkSinusoidSpatialFunctionF3PD3.SetPhaseOffset = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_SetPhaseOffset, None, itkSinusoidSpatialFunctionF3PD3)
itkSinusoidSpatialFunctionF3PD3.GetPhaseOffset = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_GetPhaseOffset, None, itkSinusoidSpatialFunctionF3PD3)
itkSinusoidSpatialFunctionF3PD3.SetFrequency = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_SetFrequency, None, itkSinusoidSpatialFunctionF3PD3)
itkSinusoidSpatialFunctionF3PD3.GetFrequency = new_instancemethod(_itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_GetFrequency, None, itkSinusoidSpatialFunctionF3PD3)
itkSinusoidSpatialFunctionF3PD3_swigregister = _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3_swigregister
itkSinusoidSpatialFunctionF3PD3_swigregister(itkSinusoidSpatialFunctionF3PD3)

def itkSinusoidSpatialFunctionF3PD3___New_orig__():
    """itkSinusoidSpatialFunctionF3PD3___New_orig__() -> itk::SmartPointer< itk::SinusoidSpatialFunction< float,3,itk::Point< double,3 > > >"""
    return _itkSinusoidSpatialFunctionPython.itkSinusoidSpatialFunctionF3PD3___New_orig__()



