# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSteerableFilterFreqImageSourcePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSteerableFilterFreqImageSourcePython', [dirname(__file__)])
        except ImportError:
            import _itkSteerableFilterFreqImageSourcePython
            return _itkSteerableFilterFreqImageSourcePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSteerableFilterFreqImageSourcePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSteerableFilterFreqImageSourcePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSteerableFilterFreqImageSourcePython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSizePython
import pyBasePython
import itkImageSourcePython
import itkImageRegionPython
import ITKCommonBasePython
import itkIndexPython
import itkOffsetPython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import stdcomplexPython
import itkImagePython
import itkVectorPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkFixedArrayPython
import itkPointPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBPixelPython

def itkSteerableFilterFreqImageSourceIF3_New():
  return itkSteerableFilterFreqImageSourceIF3.New()


def itkSteerableFilterFreqImageSourceIF2_New():
  return itkSteerableFilterFreqImageSourceIF2.New()

class itkSteerableFilterFreqImageSourceIF2(itkImageSourcePython.itkImageSourceIF2):
    """Proxy of C++ itkSteerableFilterFreqImageSourceIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSteerableFilterFreqImageSourceIF2_Pointer":
        """__New_orig__() -> itkSteerableFilterFreqImageSourceIF2_Pointer"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSteerableFilterFreqImageSourceIF2_Pointer":
        """Clone(itkSteerableFilterFreqImageSourceIF2 self) -> itkSteerableFilterFreqImageSourceIF2_Pointer"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkSteerableFilterFreqImageSourceIF2 self, unsigned long const * values)
        SetSize(itkSteerableFilterFreqImageSourceIF2 self, itkSize2 values)
        """
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetSize(self, *args)


    def GetSize(self) -> "unsigned long const *":
        """GetSize(itkSteerableFilterFreqImageSourceIF2 self) -> unsigned long const *"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSteerableFilterFreqImageSourceIF2 self, itkVectorD2 _arg)
        SetSpacing(itkSteerableFilterFreqImageSourceIF2 self, float const * values)
        SetSpacing(itkSteerableFilterFreqImageSourceIF2 self, double const * values)
        """
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetSpacing(self, *args)


    def GetSpacing(self) -> "itkVectorD2 const &":
        """GetSpacing(itkSteerableFilterFreqImageSourceIF2 self) -> itkVectorD2"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSteerableFilterFreqImageSourceIF2 self, itkPointD2 _arg)
        SetOrigin(itkSteerableFilterFreqImageSourceIF2 self, float const * values)
        SetOrigin(itkSteerableFilterFreqImageSourceIF2 self, double const * values)
        """
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetOrigin(self, *args)


    def GetOrigin(self) -> "itkPointD2 const &":
        """GetOrigin(itkSteerableFilterFreqImageSourceIF2 self) -> itkPointD2"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD22') -> "void":
        """SetDirection(itkSteerableFilterFreqImageSourceIF2 self, itkMatrixD22 _arg)"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD22 const &":
        """GetDirection(itkSteerableFilterFreqImageSourceIF2 self) -> itkMatrixD22"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetDirection(self)


    def SetOrientation(self, _arg: 'itkFixedArrayD2') -> "void":
        """SetOrientation(itkSteerableFilterFreqImageSourceIF2 self, itkFixedArrayD2 _arg)"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetOrientation(self, _arg)


    def GetOrientation(self) -> "itkFixedArrayD2 const &":
        """GetOrientation(itkSteerableFilterFreqImageSourceIF2 self) -> itkFixedArrayD2"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetOrientation(self)


    def SetAngularBandwidth(self, _arg: 'double const') -> "void":
        """SetAngularBandwidth(itkSteerableFilterFreqImageSourceIF2 self, double const _arg)"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetAngularBandwidth(self, _arg)


    def GetAngularBandwidth(self) -> "double const &":
        """GetAngularBandwidth(itkSteerableFilterFreqImageSourceIF2 self) -> double const &"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetAngularBandwidth(self)

    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceIF2

    def cast(obj: 'itkLightObject') -> "itkSteerableFilterFreqImageSourceIF2 *":
        """cast(itkLightObject obj) -> itkSteerableFilterFreqImageSourceIF2"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceIF2

        Create a new object of the class itkSteerableFilterFreqImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSteerableFilterFreqImageSourceIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSteerableFilterFreqImageSourceIF2.Clone = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_Clone, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.SetSize = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetSize, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.GetSize = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetSize, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.SetSpacing = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetSpacing, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.GetSpacing = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetSpacing, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.SetOrigin = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetOrigin, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.GetOrigin = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetOrigin, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.SetDirection = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetDirection, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.GetDirection = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetDirection, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.SetOrientation = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetOrientation, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.GetOrientation = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetOrientation, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.SetAngularBandwidth = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_SetAngularBandwidth, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2.GetAngularBandwidth = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_GetAngularBandwidth, None, itkSteerableFilterFreqImageSourceIF2)
itkSteerableFilterFreqImageSourceIF2_swigregister = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_swigregister
itkSteerableFilterFreqImageSourceIF2_swigregister(itkSteerableFilterFreqImageSourceIF2)

def itkSteerableFilterFreqImageSourceIF2___New_orig__() -> "itkSteerableFilterFreqImageSourceIF2_Pointer":
    """itkSteerableFilterFreqImageSourceIF2___New_orig__() -> itkSteerableFilterFreqImageSourceIF2_Pointer"""
    return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2___New_orig__()

def itkSteerableFilterFreqImageSourceIF2_cast(obj: 'itkLightObject') -> "itkSteerableFilterFreqImageSourceIF2 *":
    """itkSteerableFilterFreqImageSourceIF2_cast(itkLightObject obj) -> itkSteerableFilterFreqImageSourceIF2"""
    return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF2_cast(obj)

class itkSteerableFilterFreqImageSourceIF3(itkImageSourcePython.itkImageSourceIF3):
    """Proxy of C++ itkSteerableFilterFreqImageSourceIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkSteerableFilterFreqImageSourceIF3_Pointer":
        """__New_orig__() -> itkSteerableFilterFreqImageSourceIF3_Pointer"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkSteerableFilterFreqImageSourceIF3_Pointer":
        """Clone(itkSteerableFilterFreqImageSourceIF3 self) -> itkSteerableFilterFreqImageSourceIF3_Pointer"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_Clone(self)


    def SetSize(self, *args) -> "void":
        """
        SetSize(itkSteerableFilterFreqImageSourceIF3 self, unsigned long const * values)
        SetSize(itkSteerableFilterFreqImageSourceIF3 self, itkSize3 values)
        """
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetSize(self, *args)


    def GetSize(self) -> "unsigned long const *":
        """GetSize(itkSteerableFilterFreqImageSourceIF3 self) -> unsigned long const *"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetSize(self)


    def SetSpacing(self, *args) -> "void":
        """
        SetSpacing(itkSteerableFilterFreqImageSourceIF3 self, itkVectorD3 _arg)
        SetSpacing(itkSteerableFilterFreqImageSourceIF3 self, float const * values)
        SetSpacing(itkSteerableFilterFreqImageSourceIF3 self, double const * values)
        """
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetSpacing(self, *args)


    def GetSpacing(self) -> "itkVectorD3 const &":
        """GetSpacing(itkSteerableFilterFreqImageSourceIF3 self) -> itkVectorD3"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetSpacing(self)


    def SetOrigin(self, *args) -> "void":
        """
        SetOrigin(itkSteerableFilterFreqImageSourceIF3 self, itkPointD3 _arg)
        SetOrigin(itkSteerableFilterFreqImageSourceIF3 self, float const * values)
        SetOrigin(itkSteerableFilterFreqImageSourceIF3 self, double const * values)
        """
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetOrigin(self, *args)


    def GetOrigin(self) -> "itkPointD3 const &":
        """GetOrigin(itkSteerableFilterFreqImageSourceIF3 self) -> itkPointD3"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetOrigin(self)


    def SetDirection(self, _arg: 'itkMatrixD33') -> "void":
        """SetDirection(itkSteerableFilterFreqImageSourceIF3 self, itkMatrixD33 _arg)"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetDirection(self, _arg)


    def GetDirection(self) -> "itkMatrixD33 const &":
        """GetDirection(itkSteerableFilterFreqImageSourceIF3 self) -> itkMatrixD33"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetDirection(self)


    def SetOrientation(self, _arg: 'itkFixedArrayD3') -> "void":
        """SetOrientation(itkSteerableFilterFreqImageSourceIF3 self, itkFixedArrayD3 _arg)"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetOrientation(self, _arg)


    def GetOrientation(self) -> "itkFixedArrayD3 const &":
        """GetOrientation(itkSteerableFilterFreqImageSourceIF3 self) -> itkFixedArrayD3"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetOrientation(self)


    def SetAngularBandwidth(self, _arg: 'double const') -> "void":
        """SetAngularBandwidth(itkSteerableFilterFreqImageSourceIF3 self, double const _arg)"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetAngularBandwidth(self, _arg)


    def GetAngularBandwidth(self) -> "double const &":
        """GetAngularBandwidth(itkSteerableFilterFreqImageSourceIF3 self) -> double const &"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetAngularBandwidth(self)

    __swig_destroy__ = _itkSteerableFilterFreqImageSourcePython.delete_itkSteerableFilterFreqImageSourceIF3

    def cast(obj: 'itkLightObject') -> "itkSteerableFilterFreqImageSourceIF3 *":
        """cast(itkLightObject obj) -> itkSteerableFilterFreqImageSourceIF3"""
        return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSteerableFilterFreqImageSourceIF3

        Create a new object of the class itkSteerableFilterFreqImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSteerableFilterFreqImageSourceIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSteerableFilterFreqImageSourceIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSteerableFilterFreqImageSourceIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSteerableFilterFreqImageSourceIF3.Clone = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_Clone, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.SetSize = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetSize, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.GetSize = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetSize, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.SetSpacing = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetSpacing, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.GetSpacing = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetSpacing, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.SetOrigin = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetOrigin, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.GetOrigin = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetOrigin, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.SetDirection = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetDirection, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.GetDirection = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetDirection, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.SetOrientation = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetOrientation, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.GetOrientation = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetOrientation, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.SetAngularBandwidth = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_SetAngularBandwidth, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3.GetAngularBandwidth = new_instancemethod(_itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_GetAngularBandwidth, None, itkSteerableFilterFreqImageSourceIF3)
itkSteerableFilterFreqImageSourceIF3_swigregister = _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_swigregister
itkSteerableFilterFreqImageSourceIF3_swigregister(itkSteerableFilterFreqImageSourceIF3)

def itkSteerableFilterFreqImageSourceIF3___New_orig__() -> "itkSteerableFilterFreqImageSourceIF3_Pointer":
    """itkSteerableFilterFreqImageSourceIF3___New_orig__() -> itkSteerableFilterFreqImageSourceIF3_Pointer"""
    return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3___New_orig__()

def itkSteerableFilterFreqImageSourceIF3_cast(obj: 'itkLightObject') -> "itkSteerableFilterFreqImageSourceIF3 *":
    """itkSteerableFilterFreqImageSourceIF3_cast(itkLightObject obj) -> itkSteerableFilterFreqImageSourceIF3"""
    return _itkSteerableFilterFreqImageSourcePython.itkSteerableFilterFreqImageSourceIF3_cast(obj)


def steerable_filter_freq_image_source(*args, **kwargs):
    """Procedural interface for SteerableFilterFreqImageSource"""
    import itk
    instance = itk.SteerableFilterFreqImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def steerable_filter_freq_image_source_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SteerableFilterFreqImageSource, itkTemplate.itkTemplate):
        steerable_filter_freq_image_source.__doc__ = itk.SteerableFilterFreqImageSource.values()[0].__doc__
    else:
        steerable_filter_freq_image_source.__doc__ = itk.SteerableFilterFreqImageSource.__doc__




