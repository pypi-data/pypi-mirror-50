IDENTIFIER_LEN_LIMIT = 1 << 32

enum = iter(range(256))
TOKEN_EOF = next(enum)
TOKEN_EOL = next(enum)
TOKEN_SPACE = next(enum)
TOKEN_NUMERIC = next(enum)
TOKEN_COMMENT = next(enum)
TOKEN_L_S_PAREN = next(enum)
TOKEN_R_S_PAREN = next(enum)
TOKEN_L_M_PAREN = next(enum)
TOKEN_R_M_PAREN = next(enum)
TOKEN_L_L_PAREN = next(enum)
TOKEN_R_L_PAREN = next(enum)
TOKEN_ADD = next(enum)
TOKEN_SUB = next(enum)
TOKEN_MUL = next(enum)
TOKEN_DIV = next(enum)
TOKEN_GT = next(enum)
TOKEN_LT = next(enum)
TOKEN_EQUAL = next(enum)
TOKEN_COMMA = next(enum)
TOKEN_COLON = next(enum)
TOKEN_SEMICOLON = next(enum)
TOKEN_IDENTIFIER = next(enum)
TOKEN_DEF = next(enum)
TOKEN_IF = next(enum)
TOKEN_ELSE = next(enum)
TOKEN_LET = next(enum)
TOKEN_PTR = next(enum)
TOKEN_FOR = next(enum)

KEYWORDS_EOL = '\n'
KEYWORDS_SPACE = ' '
KEYWORDS_COMMENT = '#'
KEYWORDS_L_S_PAREN = '('
KEYWORDS_R_S_PAREN = ')'
KEYWORDS_L_M_PAREN = '['
KEYWORDS_R_M_PAREN = ']'
KEYWORDS_L_L_PAREN = '{'
KEYWORDS_R_L_PAREN = '}'
KEYWORDS_ADD = '+'
KEYWORDS_SUB = '-'
KEYWORDS_MUL = '*'
KEYWORDS_DIV = '/'
KEYWORDS_GT = '>'
KEYWORDS_LT = '<'
KEYWORDS_EQUAL = '='
KEYWORDS_COMMA = ','
KEYWORDS_COLON = ':'
KEYWORDS_SEMICOLON = ';'
KEYWORDS_DEF = 'def'
KEYWORDS_IF = 'if'
KEYWORDS_ELSE = 'or'
KEYWORDS_LET = 'let'
KEYWORDS_PTR = 'ptr'
KEYWORDS_FOR = 'for'
