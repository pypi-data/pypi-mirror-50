Metadata-Version: 1.1
Name: flask-logmanager
Version: 0.2.11
Summary: Flask LogManager module
Home-page: https://github.com/fraoustin/flask-logmanager.git
Author: Frédéric Aoustin
Author-email: fraoustin@gmail.com
License: UNKNOWN
Description: Flask-logmanager
        ================
        
        Manage level log of your flask application
        
        Generate one logger by rule and add REST api for manager each logger
        
        
        Installation
        ------------
        
        ::
        
            pip install flask-logmanager
                
        Or
        
        ::
        
            git clone https://github.com/fraoustin/flask-logmanager.git
            cd flask-logmanager
            python setup.py install
        
        Usage
        -----
        
        ::
        
            from flask import Flask, request, current_app
            from flask_logmanager import LogManager
        
            app = Flask(__name__)
            app.register_blueprint(LogManager(url_prefix="/api", ui_testing=True))
        
        
            @app.route("/testone")
            def testOne():
                current_app.logger.error("error from testOne")
                current_app.logger.info("info from testOne")
                current_app.logger.debug("debug from testOne")
                return "Hello testOne!"
        
            @app.route("/testtwo")
            def testTwo():
                current_app.logger.error("error from testTwo")
                current_app.logger.info("info from testTwo")
                current_app.logger.debug("debug from testTwo")
                return "Hello testOne!"
        
        
            if __name__ == "__main__":
                app.run(port=8080)   #TODO
        
        
        You can change level log of /testone on http://127.0.0.1:8080/api/ui
        
        
        .. image:: https://github.com/fraoustin/flask-logmanager/blob/master/test/ui.png
            :alt: ui
            :align: center
        
        If you want change level in your application
        
        ::
        
            from flask_logmanager import get_logger_by_rule
            import logging
        
            get_logger_by_rule('/testone').setLevel(logging.DEBUG)
        
        
        
        Feature
        =======
        
        # add management login: user and group
        # test with connexion application
        
        V. 0.2.10
        =========
        
        - hotfix url for ui
        
        V. 0.2.9
        ========
        
        - hotfix requirement
        
        V. 0.2.7
        ========
        
        - add param url_prefix
        
        V. 0.2.6
        ========
        
        - add level default 
        
        V. 0.2.5
        ========
        
        - add property endpoints for flask-bluelogin
        
        V. 0.2.4
        ========
        
        - hotfix for base_model
        
        V. 0.2.3
        ========
        
        - hotfix for error 405 on set logger
        
        V. 0.2.2
        ========
        
        - hotfix for dynamic host and port in swagger.yaml
        
        V. 0.2.0
        ========
        
        - change manage current_app.logger
        - change swagger-ui (default swagger.yaml)
        - decorator to_json
        - concentrate call logging on __init__
        
        V. 0.1.0
        ========
        
        - init
        
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Environment :: Web Environment
