Id,Preface,Original
,DO NOT EDIT,THIS FILE WAS AUTOGENERATED BY MAKE
1,[DEBUG] (data_specification.c: 48): ,SDRAM data begins at address: %08x
2,[ERROR] (data_specification.c: 66): ,Magic number is incorrect: %08x
3,[ERROR] (data_specification.c: 71): ,Version number is incorrect: %08x
4,[INFO] (data_specification.c: 78): ,magic = %08x, version = %d.%d
5,[INFO] (profiler.c: 31): ,Reading profile setup from 0x%08x
6,[INFO] (profiler.c: 37): ,Initialising profiler with storage for %u samples starting at 0x%08x
7,[INFO] (profiler.c: 51): ,Profiler wrote %u bytes to 0x%08x
8,[DEBUG] (recording.c: 126): ,dropping packet with sequence no: %d
9,[DEBUG] (recording.c: 141): ,channel %d, updating read pointer by %d bytes, from 0x%08x
10,[DEBUG] (recording.c: 147): ,channel %d, read wrap around
11,[DEBUG] (recording.c: 164): ,dropping packet with sequence no: %d
12,[DEBUG] (recording.c: 167): ,Sequence %d acked
13,[DEBUG] (recording.c: 177): ,received packet of type %d
14,[DEBUG] (recording.c: 180): ,recording - parsing a command packet
15,[DEBUG] (recording.c: 183): ,command: HOST_DATA_READ
16,[DEBUG] (recording.c: 188): ,command: HOST_DATA_READ_ACK
17,[DEBUG] (recording.c: 193): ,unhandled command ID %d
18,[DEBUG] (recording.c: 198): ,leaving packet handler
19,[DEBUG] (recording.c: 265): ,t = %u, channel = %u, start = 0x%08x, read = 0x%08x,write = 0x%08x, end = 0x%08x, operation == read = %u, len = %u
20,[DEBUG] (recording.c: 274): ,Packet fits in final space of %u
21,[DEBUG] (recording.c: 282): ,Not enough space in final area (%u bytes)
22,[DEBUG] (recording.c: 286): ,Copying first %d bytes to final space of %u
23,[DEBUG] (recording.c: 295): ,Copying remaining %u bytes
24,[DEBUG] (recording.c: 307): ,Not enough space in middle (%u bytes)
25,[DEBUG] (recording.c: 311): ,Packet fits in middle space of %u
26,[DEBUG] (recording.c: 316): ,reached end
27,[DEBUG] (recording.c: 318): ,Buffer already full
28,[DEBUG] (recording.c: 324): ,channel %u, write wrap around
29,[ERROR] (recording.c: 391): ,Unknown channel state - channel: %d, start pointer: %d, end pointer: %d, read_pointer: %d, write_pointer: %d, last operation==READ: %d
30,[DEBUG] (recording.c: 403): ,Sending request with sequence %d
31,[DEBUG] (recording.c: 419): ,Freeing message
32,[DEBUG] (recording.c: 421): ,Done freeing message
33,[INFO] (recording.c: 439): ,WARNING: recording channel %u out of space
34,[DEBUG] (recording.c: 471): ,Storing channel %d state info starting at 0x%08x
35,[DEBUG] (recording.c: 483): ,Finalising recording channels
36,[INFO] (recording.c: 504): ,\tFinalising channel %u - dropped information whilebuffering - state info stored in SDRAM
37,[INFO] (recording.c: 507): ,\tFinalising channel %u - state info stored in SDRAM
38,[ERROR] (recording.c: 510): ,could not close channel %u.
39,[INFO] (recording.c: 512): ,closed channel %u.
40,[INFO] (recording.c: 563): ,Recording %d regions, using output tag %d, size before trigger %d, time between triggers %d
41,[ERROR] (recording.c: 569): ,Not enough space to allocate recording addresses
42,[ERROR] (recording.c: 574): ,Not enough space to allocate region sizes
43,[ERROR] (recording.c: 597): ,Could not allocate recording region %u of %u bytes
44,[ERROR] (recording.c: 611): ,Not enough space to create recording channels
45,[DEBUG] (recording.c: 614): ,Allocated recording channels to 0x%08x
46,[DEBUG] (recording.c: 643): ,region size %d
47,[DEBUG] (recording.c: 648): ,%d is size of buffer state in words
48,[INFO] (recording.c: 665): ,Recording channel %u configured to use %u byte memory block starting at 0x%08x
49,[INFO] (recording.c: 677): ,Recording channel %u left uninitialised
50,[DEBUG] (recording.c: 688): ,Sending buffering trigger message
51,[INFO] (simulation.c: 77): ,Starting basic provenance gathering
52,[INFO] (simulation.c: 80): ,running other provenance gathering
53,[INFO] (simulation.c: 143): ,Received exit signal. Program complete.
54,[INFO] (simulation.c: 150): ,Calling pre-exit function
55,[INFO] (simulation.c: 153): ,Exiting
56,[INFO] (simulation.c: 159): ,Setting the runtime of this model to %d starting at %d
57,[INFO] (simulation.c: 161): ,Setting the flag of infinite run for this model to %d
58,[INFO] (simulation.c: 171): ,Calling pre-resume function
59,[INFO] (simulation.c: 175): ,Resuming
60,[INFO] (simulation.c: 188): ,Forced provenance gathering
61,[INFO] (simulation.c: 195): ,Calling pre-exit function
62,[ERROR] (simulation.c: 218): ,received packet with unknown command code %d
63,[ERROR] (simulation.c: 238): ,Cannot allocate SDP callback on port %d as its already been allocated.
64,[ERROR] (simulation.c: 260): ,Cannot handle tag value above %d, please reduce the tag value accordingly.
65,[ERROR] (simulation.c: 268): ,Cannot allocate DMA transfer callback on tag %d as its already been allocated.
66,[ERROR] (simulation.c: 292): ,Unexpected magic number 0x%08x instead of 0x%08x at 0x%08x
67,[ERROR] (simulation.c: 299): ,The SDP callback priority should be set to a number greater than or equal to -1.  It is currently set to %d
7001,[ERROR] (munich_protocol.h: 537): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7002,[ERROR] (munich_protocol.h: 553): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7003,[ERROR] (munich_protocol.h: 568): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7004,[ERROR] (munich_protocol.h: 584): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7005,[ERROR] (munich_protocol.h: 600): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7006,[ERROR] (munich_protocol.h: 615): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7007,[ERROR] (munich_protocol.h: 630): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7008,[ERROR] (munich_protocol.h: 645): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7009,[ERROR] (munich_protocol.h: 660): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7010,[ERROR] (munich_protocol.h: 675): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7011,[ERROR] (munich_protocol.h: 690): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7012,[ERROR] (munich_protocol.h: 705): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7013,[ERROR] (munich_protocol.h: 720): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7014,[ERROR] (munich_protocol.h: 736): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7015,[ERROR] (munich_protocol.h: 752): ,The mode you configured is not the pushbot, and so this message is invalid for mode %d
7016,[ERROR] (munich_protocol.h: 799): ,The no of pixels is not supported in this protocol.
7017,[ERROR] (munich_protocol.h: 830): ,Unknown size of timestamp in bytes: %d\n
7018,[WARNING] (munich_protocol.h: 842): ,The current SpyNNaker models do not support the reception of packets with payloads, therefore you will need to add a adaptor model between the device and spynnaker models.
7019,[ERROR] (munich_protocol.h: 848): ,If you are using payloads to store events, you cannot have time stamps at all.
7020,[DEBUG] (out_spikes.c: 50): ,Out spike size is %u words, allowing %u spike sources
7021,[ERROR] (out_spikes.c: 54): ,Out of DTCM when allocating out_spikes
7022,[DEBUG] (out_spikes.c: 91): ,out_spikes:\n
7023,[DEBUG] (out_spikes.c: 94): ,-----------\n
7024,[DEBUG] (out_spikes.c: 96): ,-----------\n
7025,[DEBUG] (out_spikes.c: 102): ,-----------\n
7026,[DEBUG] (out_spikes.c: 106): ,%08x\n
7027,[DEBUG] (out_spikes.c: 108): ,-----------\n
7028,[DEBUG] (delay_extension.c: 103): ,read_parameters: starting
7029,[DEBUG] (delay_extension.c: 111): ,\t key = 0x%08x, incoming key = 0x%08x, incoming mask = 0x%08x,incoming key mask = 0x%08x
7030,[DEBUG] (delay_extension.c: 129): ,\t parrot neurons = %u, neuron bit field words = %u, num delay stages = %u, num delay slots = %u (pot = %u), num delay slots mask = %08x
7031,[DEBUG] (delay_extension.c: 132): ,\t random back off = %u, time_between_spikes = %u
7032,[DEBUG] (delay_extension.c: 141): ,\t delay stage %u
7033,[DEBUG] (delay_extension.c: 155): ,\t\t delay stage config word %u = %08x
7034,[DEBUG] (delay_extension.c: 168): ,read_parameters: completed successfully
7035,[DEBUG] (delay_extension.c: 173): ,writing other provenance data
7036,[DEBUG] (delay_extension.c: 183): ,finished other provenance data
7037,[INFO] (delay_extension.c: 187): ,initialise: started
7038,[INFO] (delay_extension.c: 215): ,initialise: completed successfully
7039,[DEBUG] (delay_extension.c: 224): ,Received spike %x
7040,[DEBUG] (delay_extension.c: 246): ,Current time slot %u
7041,[DEBUG] (delay_extension.c: 261): ,Incrementing counter %u = %u\n
7042,[DEBUG] (delay_extension.c: 264): ,Invalid neuron ID %u
7043,[DEBUG] (delay_extension.c: 267): ,Invalid spike key 0x%08x
7044,[DEBUG] (delay_extension.c: 283): ,Timer tick %u
7045,[DEBUG] (delay_extension.c: 293): ,Delay extension finished at time %u, %u received spikes, %u processed spikes, %u sent spikes, %u added spikes
7046,[DEBUG] (delay_extension.c: 295): ,Delayed %u times
7047,[DEBUG] (delay_extension.c: 321): ,%u: Checking time slot %u for delay stage %u
7048,[DEBUG] (delay_extension.c: 335): ,Neuron %u sending %u spikes after delaystage %u with key %x
7049,[ERROR] (delay_extension.c: 365): ,Error in initialisation - exiting!
7050,[DEBUG] (delay_extension.c: 378): ,Timer period %u
7051,[DEBUG] (c_main.c: 111): ,Recording flags = 0x%08x
7052,[DEBUG] (c_main.c: 116): ,writing other provenance data
7053,[DEBUG] (c_main.c: 126): ,finished other provenance data
7054,[DEBUG] (c_main.c: 135): ,Initialise: started
7055,[DEBUG] (c_main.c: 224): ,Initialise: finished
7056,[ERROR] (c_main.c: 238): ,failed to reload the neuron parameters.
7057,[DEBUG] (c_main.c: 260): ,Timer tick %u \n
7058,[DEBUG] (c_main.c: 268): ,Completed a run
7059,[DEBUG] (c_main.c: 281): ,updating recording regions
7060,[DEBUG] (c_main.c: 290): ,Rewire tries = %d
7061,[DEBUG] (c_main.c: 315): ,Sending user event for new spike
7062,[DEBUG] (c_main.c: 319): ,Could not trigger user event\n
7063,[DEBUG] (c_main.c: 350): ,setting timer tick callback for %d microseconds
7064,[DEBUG] (neuron.c: 146): ,loading parameters
7065,[DEBUG] (neuron.c: 174): ,neuron_reloading_neuron_parameters: starting
7066,[DEBUG] (neuron.c: 188): ,neuron_initialise: starting
7067,[DEBUG] (neuron.c: 194): ,\t back off = %u, time between spikes %u
7068,[DEBUG] (neuron.c: 204): ,\tThis model is not expecting to transmit as it has no key
7069,[DEBUG] (neuron.c: 206): ,\tThis model is expected to transmit with key = %08x
7070,[DEBUG] (neuron.c: 221): ,\t n_neurons = %u, spike buffer size = %u
7071,[ERROR] (neuron.c: 238): ,Could not allocate space for spike_recording_indexes
7072,[ERROR] (neuron.c: 243): ,Could not allocate space for var_recording_rate
7073,[ERROR] (neuron.c: 248): ,Could not allocate space for var_recording_count
7074,[ERROR] (neuron.c: 253): ,Could not allocate space for var_recording_increment
7075,[ERROR] (neuron.c: 258): ,Could not allocate space for var_recording_indexes
7076,[ERROR] (neuron.c: 263): ,Could not allocate space for var_recording_size
7077,[ERROR] (neuron.c: 269): ,Could not allocate space for var_recording_values
7078,[ERROR] (neuron.c: 278): ,Could not allocate space for var_recording_values[%d]
7079,[DEBUG] (neuron.c: 350): ,neuron %u spiked at time %u
7080,[DEBUG] (neuron.c: 374): ,the neuron %d has been determined to not spike
7081,[DEBUG] (spike_processing.c: 157): ,Writing back %u bytes of plastic region to %08x
7082,[DEBUG] (spike_processing.c: 170): ,Received spike %x at %d, DMA Busy = %d
7083,[DEBUG] (spike_processing.c: 177): ,Sending user event for new spike
7084,[DEBUG] (spike_processing.c: 181): ,Could not trigger user event\n
7085,[DEBUG] (spike_processing.c: 185): ,Could not add spike
7086,[DEBUG] (spike_processing.c: 200): ,DMA transfer complete at time %u with tag %u
7087,[ERROR] (spike_processing.c: 222): ,Error processing spike 0x%.8x for address 0x%.8x (local=0x%.8x)
7088,[ERROR] (spike_processing.c: 227): ,%u: 0x%.8x
7089,[ERROR] (spike_processing.c: 247): ,Could not initialise DMA buffers
7090,[DEBUG] (spike_processing.c: 251): ,DMA buffer %u allocated at 0x%08x
7091,[DEBUG] (synapses.c: 69): ,Synaptic row, at address %08x Num plastic words:%u\n
7092,[DEBUG] (synapses.c: 73): ,----------------------------------------\n
7093,[DEBUG] (synapses.c: 83): ,Fixed region %u fixed synapses (%u plastic control words):\n
7094,[DEBUG] (synapses.c: 91): ,%08x [%3d: (w: %5u (=
7095,[DEBUG] (synapses.c: 99): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
7096,[DEBUG] (synapses.c: 104): ,----------------------------------------\n
7097,[DEBUG] (synapses.c: 112): ,----------------------------------------\n
7098,[DEBUG] (synapses.c: 134): , 
7099,[DEBUG] (synapses.c: 153): ,Inputs\n
7100,[DEBUG] (synapses.c: 222): ,synapses_initialise: starting
7101,[ERROR] (synapses.c: 230): ,Not enough memory to allocate ring buffer
7102,[DEBUG] (synapses.c: 242): ,Direct matrix malloc size is %d
7103,[ERROR] (synapses.c: 247): ,Not enough memory to allocate direct matrix
7104,[DEBUG] (synapses.c: 251): ,Copying %u bytes of direct synapses to 0x%08x
7105,[DEBUG] (synapses.c: 257): ,synapses_initialise: completed successfully
7106,[ERROR] (synapses.c: 282): ,Could not allocate %u entries for ring buffers
7107,[ERROR] (neuron_impl_semd.h: 62): ,Unable to allocate neuron array - Out of DTCM
7108,[ERROR] (neuron_impl_semd.h: 70): ,Unable to allocate input type array - Out of DTCM
7109,[ERROR] (neuron_impl_semd.h: 77): ,Unable to allocate threshold type array - Out of DTCM
7110,[ERROR] (neuron_impl_semd.h: 86): ,Unable to allocate synapse parameters array - Out of DTCM
7111,[DEBUG] (neuron_impl_semd.h: 105): ,writing parameters, next is %u, n_neurons is %u 
7112,[DEBUG] (neuron_impl_semd.h: 107): ,writing neuron local parameters
7113,[DEBUG] (neuron_impl_semd.h: 111): ,writing input type parameters
7114,[DEBUG] (neuron_impl_semd.h: 116): ,writing threshold type parameters
7115,[DEBUG] (neuron_impl_semd.h: 121): ,writing synapse parameters
7116,[DEBUG] (neuron_impl_semd.h: 209): ,writing parameters
7117,[DEBUG] (neuron_impl_semd.h: 211): ,writing neuron local parameters
7118,[DEBUG] (neuron_impl_semd.h: 216): ,writing input type parameters
7119,[DEBUG] (neuron_impl_semd.h: 221): ,writing threshold type parameters
7120,[DEBUG] (neuron_impl_semd.h: 226): ,writing synapse parameters
7121,[DEBUG] (neuron_impl_semd.h: 241): ,-------------------------------------\n
7122,[DEBUG] (neuron_impl_semd.h: 248): ,%3u: %12.6k (= 
7123,[DEBUG] (neuron_impl_semd.h: 250): ,)\n
7124,[DEBUG] (neuron_impl_semd.h: 253): ,-------------------------------------\n
7125,[DEBUG] (neuron_impl_semd.h: 258): ,-------------------------------------\n
7126,[DEBUG] (neuron_impl_semd.h: 262): ,-------------------------------------\n
7127,[ERROR] (neuron_impl_standard.h: 75): ,Unable to allocate global neuron parameters- Out of DTCM
7128,[ERROR] (neuron_impl_standard.h: 84): ,Unable to allocate neuron array - Out of DTCM
7129,[ERROR] (neuron_impl_standard.h: 93): ,Unable to allocate input type array - Out of DTCM
7130,[ERROR] (neuron_impl_standard.h: 104): ,Unable to allocate additional input array - Out of DTCM
7131,[ERROR] (neuron_impl_standard.h: 114): ,Unable to allocate threshold type array - Out of DTCM
7132,[ERROR] (neuron_impl_standard.h: 125): ,Unable to allocate synapse parameters array - Out of DTCM
7133,[DEBUG] (neuron_impl_standard.h: 150): ,reading parameters, next is %u, n_neurons is %u 
7134,[DEBUG] (neuron_impl_standard.h: 153): ,writing neuron global parameters
7135,[DEBUG] (neuron_impl_standard.h: 160): ,reading neuron local parameters
7136,[DEBUG] (neuron_impl_standard.h: 167): ,reading input type parameters
7137,[DEBUG] (neuron_impl_standard.h: 174): ,reading threshold type parameters
7138,[DEBUG] (neuron_impl_standard.h: 181): ,reading synapse parameters
7139,[DEBUG] (neuron_impl_standard.h: 188): ,reading additional input type parameters
7140,[DEBUG] (neuron_impl_standard.h: 197): ,-------------------------------------\n
7141,[DEBUG] (neuron_impl_standard.h: 201): ,-------------------------------------\n
7142,[DEBUG] (neuron_impl_standard.h: 293): ,writing parameters
7143,[DEBUG] (neuron_impl_standard.h: 301): ,writing neuron global parameters
7144,[DEBUG] (neuron_impl_standard.h: 308): ,writing neuron local parameters
7145,[DEBUG] (neuron_impl_standard.h: 315): ,writing input type parameters
7146,[DEBUG] (neuron_impl_standard.h: 322): ,writing threshold type parameters
7147,[DEBUG] (neuron_impl_standard.h: 329): ,writing synapse parameters
7148,[DEBUG] (neuron_impl_standard.h: 336): ,writing additional input type parameters
7149,[DEBUG] (neuron_impl_standard.h: 353): ,-------------------------------------\n
7150,[DEBUG] (neuron_impl_standard.h: 360): ,%3u: %12.6k (= 
7151,[DEBUG] (neuron_impl_standard.h: 362): ,)\n
7152,[DEBUG] (neuron_impl_standard.h: 365): ,-------------------------------------\n
7153,[DEBUG] (neuron_impl_standard.h: 370): ,-------------------------------------\n
7154,[DEBUG] (neuron_impl_standard.h: 374): ,-------------------------------------\n
7155,[DEBUG] (neuron_model_izh_impl.c: 39): , sv1 %9.4k  V %9.4k --- sv2 %9.4k  U %9.4k\n
7156,[DEBUG] (neuron_model_izh_impl.c: 127): ,V = %11.4k 
7157,[DEBUG] (neuron_model_izh_impl.c: 128): ,U = %11.4k 
7158,[DEBUG] (neuron_model_izh_impl.c: 132): ,A = %11.4k 
7159,[DEBUG] (neuron_model_izh_impl.c: 133): ,B = %11.4k 
7160,[DEBUG] (neuron_model_izh_impl.c: 134): ,C = %11.4k 
7161,[DEBUG] (neuron_model_izh_impl.c: 135): ,D = %11.4k 
7162,[DEBUG] (neuron_model_izh_impl.c: 137): ,I = %11.4k \n
7163,[DEBUG] (neuron_model_lif_impl.c: 41): ,Exc 1: %12.6k, Exc 2: %12.6k
7164,[DEBUG] (neuron_model_lif_impl.c: 42): ,Inh 1: %12.6k, Inh 2: %12.6k
7165,[DEBUG] (neuron_model_lif_impl.c: 81): ,V membrane    = %11.4k mv
7166,[DEBUG] (neuron_model_lif_impl.c: 85): ,V reset       = %11.4k mv
7167,[DEBUG] (neuron_model_lif_impl.c: 86): ,V rest        = %11.4k mv
7168,[DEBUG] (neuron_model_lif_impl.c: 88): ,I offset      = %11.4k nA
7169,[DEBUG] (neuron_model_lif_impl.c: 89): ,R membrane    = %11.4k Mohm
7170,[DEBUG] (neuron_model_lif_impl.c: 91): ,exp(-ms/(RC)) = %11.4k [.]
7171,[DEBUG] (neuron_model_lif_impl.c: 93): ,T refract     = %u timesteps
7172,[ERROR] (synapse_dynamics_static_impl.c: 57): ,There should be no plastic synapses!
7173,[ERROR] (post_events.h: 61): ,Unable to allocate global STDP structures - Out of DTCM: Try reducing the number of neurons per core to fix this problem 
7174,[DEBUG] (post_events.h: 199): ,		##  printing entire post event history  ##
7175,[DEBUG] (post_events.h: 202): ,post event: %u, time: %u, trace: %u
7176,[DEBUG] (post_events.h: 209): ,		##  printing post window  ##
7177,[DEBUG] (post_events.h: 218): ,post spike: %u, time: %u, trace: %u
7178,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 105): ,\tPerforming deferred synapse update at time:%u
7179,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 108): ,\t\tbegin_time:%u, end_time:%u - prev_time:%u, num_events:%u
7180,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 119): ,\t\tApplying post-synaptic event at delayed time:%u\n
7181,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 133): ,\t\tApplying pre-synaptic event at time:%u last post time:%u\n
7182,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 183): ,Plastic region %u synapses\n
7183,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 199): ,%08x [%3d: (w: %5u (=
7184,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 206): ,nA) d: %2u, %s, n = %3u)] - {%08x %08x}\n
7185,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 292): ,Adding pre-synaptic event to trace at time:%u
7186,[DEBUG] (synapse_dynamics_stdp_mad_impl.c: 354): ,Adding post-synaptic event to trace at time:%u
7187,[INFO] (timing_nearest_pair_impl.c: 31): ,timing_initialise: starting
7188,[INFO] (timing_nearest_pair_impl.c: 32): ,\tSTDP nearest-pair rule
7189,[INFO] (timing_nearest_pair_impl.c: 41): ,timing_initialise: completed successfully
7190,[DEBUG] (timing_nearest_pair_impl.h: 77): ,\tdelta_time=%u\n
7191,[DEBUG] (timing_nearest_pair_impl.h: 90): ,\tdelta_time=%u\n
7192,[DEBUG] (timing_nearest_pair_impl.h: 111): ,\t\t\ttime_since_last_post=%u, decayed_o1=%d\n
7193,[DEBUG] (timing_nearest_pair_impl.h: 138): ,\t\t\ttime_since_last_pret=%u, decayed_r1=%d\n
7194,[DEBUG] (timing_nearest_pair_impl.h: 140): ,\t\t\ttime_since_last_post=%u, decayed_r1=%d\n
7195,[DEBUG] (timing_nearest_pair_impl.h: 143): ,\t\t\tSetting trace to zero as not first pre-post pairing
7196,[DEBUG] (timing_pair_impl.c: 31): ,timing_initialise: starting
7197,[DEBUG] (timing_pair_impl.c: 32): ,\tSTDP pair rule
7198,[DEBUG] (timing_pair_impl.c: 41): ,timing_initialise: completed successfully
7199,[DEBUG] (timing_pair_impl.h: 83): ,\tdelta_time=%d, o1=%d\n
7200,[DEBUG] (timing_pair_impl.h: 103): ,\tdelta_time=%u, r1=%d\n
7201,[DEBUG] (timing_pair_impl.h: 126): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
7202,[DEBUG] (timing_pair_impl.h: 151): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
7203,[INFO] (timing_pfister_triplet_impl.c: 33): ,timing_initialise: starting
7204,[INFO] (timing_pfister_triplet_impl.c: 34): ,\tSTDP triplet rule
7205,[INFO] (timing_pfister_triplet_impl.c: 47): ,timing_initialise: completed successfully
7206,[DEBUG] (timing_pfister_triplet_impl.h: 110): ,\tdelta_time=%d, o1=%d, o2=%d\n
7207,[DEBUG] (timing_pfister_triplet_impl.h: 136): ,\tdelta_time=%u, r1=%d, r2=%d\n
7208,[DEBUG] (timing_pfister_triplet_impl.h: 162): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d, r2=%d,decayed_o1_r2=%d\n
7209,[DEBUG] (timing_pfister_triplet_impl.h: 191): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d, o2=%d,decayed_r1_o2=%d\n
7210,[DEBUG] (timing_recurrent_common.h: 72): ,\tdelta_time=%u
7211,[DEBUG] (timing_recurrent_common.h: 86): ,\tdelta_time=%u
7212,[DEBUG] (timing_recurrent_common.h: 102): ,\tOpening pre-window
7213,[DEBUG] (timing_recurrent_common.h: 111): ,\tTime_since_last_pre_event=%u
7214,[DEBUG] (timing_recurrent_common.h: 115): ,\t\tClosing pre-window
7215,[DEBUG] (timing_recurrent_common.h: 119): ,\t\tRe-opening pre-window
7216,[DEBUG] (timing_recurrent_common.h: 128): ,\tTime_since_last_post_event=%u
7217,[DEBUG] (timing_recurrent_common.h: 132): ,\t\tIgnoring coinciding spikes
7218,[DEBUG] (timing_recurrent_common.h: 145): ,\t\tDecrementing accumulator=%d
7219,[DEBUG] (timing_recurrent_common.h: 148): ,\t\tApplying depression
7220,[DEBUG] (timing_recurrent_common.h: 160): ,\t\tPost-window closed - Opening pre-window
7221,[DEBUG] (timing_recurrent_common.h: 166): ,\tInvalid state %u
7222,[DEBUG] (timing_recurrent_common.h: 183): ,\tOpening post-window
7223,[DEBUG] (timing_recurrent_common.h: 192): ,\tTime_since_last_post_event=%u
7224,[DEBUG] (timing_recurrent_common.h: 197): ,\t\tClosing post-window
7225,[DEBUG] (timing_recurrent_common.h: 201): ,\t\tRe-opening post-window
7226,[DEBUG] (timing_recurrent_common.h: 211): ,\tTime_since_last_pre_event=%u
7227,[DEBUG] (timing_recurrent_common.h: 215): ,\t\tIgnoring coinciding spikes
7228,[DEBUG] (timing_recurrent_common.h: 228): ,\t\tIncrementing accumulator=%d
7229,[DEBUG] (timing_recurrent_common.h: 231): ,\t\tApplying potentiation
7230,[DEBUG] (timing_recurrent_common.h: 243): ,\t\tPre-window closed - Opening post-window
7231,[DEBUG] (timing_recurrent_common.h: 249): ,\tInvalid state %u
7232,[INFO] (timing_recurrent_dual_fsm_impl.c: 34): ,timing_initialise: starting
7233,[INFO] (timing_recurrent_dual_fsm_impl.c: 35): ,\tRecurrent dual-FSM STDP rule
7234,[INFO] (timing_recurrent_dual_fsm_impl.c: 46): ,\tAccumulator depression=%d, Accumulator potentiation=%d
7235,[INFO] (timing_recurrent_dual_fsm_impl.c: 56): ,timing_initialise: completed successfully
7236,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 71): ,\t\tResetting post-window: random=%d, window_length=%u
7237,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 88): ,\t\tResetting pre-window: random=%d, window_length=%u
7238,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 107): ,\t\t\ttime_since_last_post:%u, post_window_length:%u
7239,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 119): ,\t\t\t\tDecrementing accumulator=%d
7240,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 122): ,\t\t\t\tApplying depression
7241,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 147): ,\t\t\ttime_since_last_pre:%u, pre_window_length:%u
7242,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 159): ,\t\t\t\tIncrementing accumulator=%d
7243,[DEBUG] (timing_recurrent_dual_fsm_impl.h: 162): ,\t\t\t\tApplying potentiation
7244,[INFO] (timing_recurrent_fixed_impl.c: 30): ,timing_initialise: starting
7245,[INFO] (timing_recurrent_fixed_impl.c: 31): ,\tRecurrent STDP rule
7246,[INFO] (timing_recurrent_fixed_impl.c: 45): ,\tAccumulator depression=%d, Accumulator potentiation=%d
7247,[INFO] (timing_recurrent_fixed_impl.c: 47): ,timing_initialise: completed successfully
7248,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 34): ,timing_initialise: starting
7249,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 35): ,\tRecurrent pre-calculated stochastic STDP rule
7250,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 46): ,\tAccumulator depression=%d, Accumulator potentiation=%d
7251,[DEBUG] (timing_recurrent_pre_stochastic_impl.c: 56): ,timing_initialise: completed successfully
7252,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 56): ,\t\tRandom=%d, Exp dist=%u
7253,[DEBUG] (timing_recurrent_pre_stochastic_impl.h: 67): ,\t\tRandom=%d, Exp dist=%u
7254,[INFO] (timing_recurrent_stochastic_impl.c: 33): ,timing_initialise: starting
7255,[INFO] (timing_recurrent_stochastic_impl.c: 34): ,\tRecurrent stochastic STDP rule
7256,[INFO] (timing_recurrent_stochastic_impl.c: 45): ,\tAccumulator depression=%d, Accumulator potentiation=%d
7257,[INFO] (timing_recurrent_stochastic_impl.c: 55): ,timing_initialise: completed successfully
7258,[DEBUG] (timing_recurrent_stochastic_impl.h: 57): ,\t\tCDF=%d, Random=%d
7259,[INFO] (timing_vogels_2011_impl.c: 33): ,timing_initialise: starting
7260,[INFO] (timing_vogels_2011_impl.c: 34): ,\tVogels 2011 timing rule
7261,[INFO] (timing_vogels_2011_impl.c: 43): ,timing_initialise: completed successfully
7262,[DEBUG] (timing_vogels_2011_impl.h: 82): ,\tdelta_time=%d, new_trace=%d\n
7263,[DEBUG] (timing_vogels_2011_impl.h: 118): ,\t\t\ttime_since_last_post_event=%u, decayed_o1=%d\n
7264,[DEBUG] (timing_vogels_2011_impl.h: 139): ,\t\t\ttime_since_last_pre_event=%u, decayed_r1=%d\n
7265,[DEBUG] (weight_additive_one_term_impl.c: 34): ,weight_initialise: starting
7266,[DEBUG] (weight_additive_one_term_impl.c: 35): ,\tSTDP additive one-term weight dependence
7267,[ERROR] (weight_additive_one_term_impl.c: 43): ,Could not initialise weight region data
7268,[DEBUG] (weight_additive_one_term_impl.c: 56): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d
7269,[DEBUG] (weight_additive_one_term_impl.c: 58): ,weight_initialise: completed successfully
7270,[DEBUG] (weight_additive_one_term_impl.h: 102): ,\told_weight:%u, a2+:%d, a2-:%d, scaled a2+:%d, scaled a2-:%d, new_weight:%d
7271,[DEBUG] (weight_additive_two_term_impl.c: 34): ,weight_initialise: starting
7272,[DEBUG] (weight_additive_two_term_impl.c: 35): ,\tSTDP additive two-term weight dependance
7273,[ERROR] (weight_additive_two_term_impl.c: 43): ,Could not initialise weight region data
7274,[DEBUG] (weight_additive_two_term_impl.c: 61): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, A3+:%d, A3-:%d
7275,[DEBUG] (weight_additive_two_term_impl.c: 63): ,weight_initialise: completed successfully
7276,[DEBUG] (weight_additive_two_term_impl.h: 113): ,\told_weight:%u, a2+:%d, a2-:%d, a3+:%d, a3-:%d
7277,[DEBUG] (weight_additive_two_term_impl.h: 117): ,\tscaled a2+:%d, scaled a2-:%d, scaled a3+:%d, scaled a3-:%d, new_weight:%d
7278,[DEBUG] (weight_multiplicative_impl.c: 33): ,weight_initialise: starting
7279,[DEBUG] (weight_multiplicative_impl.c: 34): ,\tSTDP multiplicative weight dependence
7280,[ERROR] (weight_multiplicative_impl.c: 41): ,Could not initialise weight region data
7281,[ERROR] (weight_multiplicative_impl.c: 47): ,Could not initialise weight region data
7282,[DEBUG] (weight_multiplicative_impl.c: 69): ,\tSynapse type %u: Min weight:%d, Max weight:%d, A2+:%d, A2-:%d, Weight multiply right shift:%u
7283,[DEBUG] (weight_multiplicative_impl.c: 72): ,weight_initialise: completed successfully
7284,[DEBUG] (weight_multiplicative_impl.h: 99): ,\tnew_weight:%d\n
7285,[INFO] (population_table_binary_search_impl.c: 69): ,master_population\n
7286,[INFO] (population_table_binary_search_impl.c: 70): ,------------------------------------------\n
7287,[INFO] (population_table_binary_search_impl.c: 82): ,index (%d, %d), key: 0x%.8x, mask: 0x%.8x, offset: 0x%.8x, address: 0x%.8x, row_length: %u\n
7288,[INFO] (population_table_binary_search_impl.c: 89): ,index (%d, %d), key: 0x%.8x, mask: 0x%.8x, offset: 0x%.8x, address: 0x%.8x, single
7289,[INFO] (population_table_binary_search_impl.c: 93): ,------------------------------------------\n
7290,[DEBUG] (population_table_binary_search_impl.c: 99): ,population_table_initialise: starting
7291,[DEBUG] (population_table_binary_search_impl.c: 102): ,master pop table length is %d\n
7292,[DEBUG] (population_table_binary_search_impl.c: 104): ,master pop table entry size is %d\n
7293,[DEBUG] (population_table_binary_search_impl.c: 108): ,pop table size is %d\n
7294,[ERROR] (population_table_binary_search_impl.c: 114): ,Could not allocate master population table
7295,[ERROR] (population_table_binary_search_impl.c: 127): ,Could not allocate master population address list
7296,[DEBUG] (population_table_binary_search_impl.c: 133): ,pop table size: %u (%u bytes)
7297,[DEBUG] (population_table_binary_search_impl.c: 135): ,address list size: %u (%u bytes)
7298,[INFO] (population_table_binary_search_impl.c: 145): ,the stored synaptic matrix base address is located at: 0x%08x
7299,[INFO] (population_table_binary_search_impl.c: 147): ,the direct synaptic matrix base address is located at: 0x%08x
7300,[DEBUG] (population_table_binary_search_impl.c: 168): ,spike %u (= %x): population found in master populationtable but count is 0
7301,[DEBUG] (population_table_binary_search_impl.c: 176): ,spike = %08x, entry_index = %u, start = %u, count = %u
7302,[DEBUG] (population_table_binary_search_impl.c: 189): ,spike %u (= %x): population not found in master population table
7303,[DEBUG] (population_table_binary_search_impl.c: 226): ,neuron_id = %u, block_address = 0x%.8x,row_length = %u, row_address = 0x%.8x, n_bytes = %u
7304,[DEBUG] (synaptogenesis_dynamics_static_impl.c: 37): ,%s
7305,[ERROR] (synaptogenesis_dynamics_static_impl.c: 47): ,%s
7306,[ERROR] (synaptogenesis_dynamics_static_impl.c: 57): ,%s
7307,[DEBUG] (topographic_map_impl.c: 179): ,SR init.
7308,[DEBUG] (topographic_map_impl.c: 180): ,Registering DMA callback
7309,[DEBUG] (topographic_map_impl.c: 184): ,Callback registered
7310,[ERROR] (topographic_map_impl.c: 298): ,Fail init DMA buffers
7311,[DEBUG] (topographic_map_impl.c: 314): ,SR init complete.
7312,[DEBUG] (topographic_map_impl.c: 395): ,No previous spikes
7313,[ERROR] (topographic_map_impl.c: 456): ,FAIL@key %d
7314,[ERROR] (topographic_map_impl.c: 515): ,DMA queue full-read
7315,[ERROR] (topographic_map_impl.c: 553): ,%s
7316,[DEBUG] (topographic_map_impl.c: 608): ,row is full
7317,[DEBUG] (synapse_types_alpha_impl.h: 149): ,did not recognise synapse type %i
7318,[DEBUG] (synapse_types_alpha_impl.h: 162): ,-------------------------------------\n
7319,[DEBUG] (synapse_types_alpha_impl.h: 163): ,exc_response  = %11.4k\n
7320,[DEBUG] (synapse_types_alpha_impl.h: 164): ,inh_response  = %11.4k\n
7321,[DEBUG] (synapse_types_delta_impl.h: 146): ,did not recognise synapse type %i
7322,[DEBUG] (synapse_types_dual_excitatory_exponential_impl.h: 160): ,did not recognise synapse type %i
7323,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 182): ,exc_decay  = %11.4k\n
7324,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 183): ,exc_init   = %11.4k\n
7325,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 184): ,exc2_decay = %11.4k\n
7326,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 185): ,exc2_init  = %11.4k\n
7327,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 186): ,inh_decay  = %11.4k\n
7328,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 187): ,inh_init   = %11.4k\n
7329,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 189): ,gsyn_excitatory_initial_value = %11.4k\n
7330,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 191): ,gsyn_excitatory2_initial_value = %11.4k\n
7331,[INFO] (synapse_types_dual_excitatory_exponential_impl.h: 193): ,gsyn_inhibitory_initial_value = %11.4k\n
7332,[DEBUG] (synapse_types_exponential_impl.h: 151): ,did not recognise synapse type %i
7333,[DEBUG] (synapse_types_exponential_impl.h: 173): ,exc_decay = %R\n
7334,[DEBUG] (synapse_types_exponential_impl.h: 174): ,exc_init  = %R\n
7335,[DEBUG] (synapse_types_exponential_impl.h: 175): ,inh_decay = %R\n
7336,[DEBUG] (synapse_types_exponential_impl.h: 176): ,inh_init  = %R\n
7337,[DEBUG] (synapse_types_exponential_impl.h: 178): ,gsyn_excitatory_initial_value = %11.4k\n
7338,[DEBUG] (synapse_types_exponential_impl.h: 180): ,gsyn_inhibitory_initial_value = %11.4k\n
7339,[ERROR] (threshold_type_external_device_control.h: 105): ,Unknown enum value %u
7340,[DEBUG] (threshold_type_external_device_control.h: 127): ,Sending key=0x%08x payload=0x%08x
7341,[DEBUG] (threshold_type_external_device_control.h: 130): ,Sending key=0x%08x
7342,[DEBUG] (robot_motor_control.c: 77): ,%s = %d, %s = %d, delta = %d, threshold = %u
7343,[DEBUG] (robot_motor_control.c: 80): ,Moving %s
7344,[DEBUG] (robot_motor_control.c: 85): ,Moving %s
7345,[DEBUG] (robot_motor_control.c: 91): ,Motion is indeterminate in %s-%s direction
7346,[DEBUG] (robot_motor_control.c: 105): ,Resending %s = %d
7347,[DEBUG] (robot_motor_control.c: 108): ,Resending %s = %d
7348,[DEBUG] (robot_motor_control.c: 112): ,Resending No Motion in the %s-%s direction
7349,[DEBUG] (robot_motor_control.c: 123): ,Timer tick %d
7350,[INFO] (robot_motor_control.c: 127): ,Simulation complete.\n
7351,[DEBUG] (robot_motor_control.c: 140): ,Received spike from unknown neuron %d
7352,[INFO] (robot_motor_control.c: 166): ,Reading parameters from 0x%.8x
7353,[INFO] (robot_motor_control.c: 187): ,Key = %d, speed = %d, sample_time = %d, update_time = %d, delay_time = %d, delta_threshold = %d, continue_if_not_different = %d
7354,[DEBUG] (robot_motor_control.c: 193): ,Received spike %x at time %d\n
7355,[INFO] (robot_motor_control.c: 200): ,initialise: started
7356,[INFO] (robot_motor_control.c: 222): ,initialise: completed successfully
7357,[ERROR] (robot_motor_control.c: 232): ,Error in initialisation - exiting!
7358,[INFO] (spike_source_poisson.c: 226): ,atom %d
7359,[INFO] (spike_source_poisson.c: 227): ,scaled_start = %u
7360,[INFO] (spike_source_poisson.c: 228): ,scaled end = %u
7361,[INFO] (spike_source_poisson.c: 229): ,is_fast_source = %d
7362,[INFO] (spike_source_poisson.c: 230): ,exp_minus_lamda = %k
7363,[INFO] (spike_source_poisson.c: 231): ,sqrt_lambda = %k
7364,[INFO] (spike_source_poisson.c: 232): ,isi_val = %k
7365,[INFO] (spike_source_poisson.c: 233): ,time_to_spike = %k
7366,[INFO] (spike_source_poisson.c: 245): ,read global_parameters: starting
7367,[INFO] (spike_source_poisson.c: 250): ,\tkey = %08x, set rate mask = %08x, timer offset = %u
7368,[INFO] (spike_source_poisson.c: 254): ,\tseed = %u %u %u %u
7369,[INFO] (spike_source_poisson.c: 259): ,\tspike sources = %u, starting at %u
7370,[INFO] (spike_source_poisson.c: 260): ,seconds_per_tick = %k\n
7371,[INFO] (spike_source_poisson.c: 261): ,ticks_per_second = %k\n
7372,[INFO] (spike_source_poisson.c: 263): ,slow_rate_per_tick_cutoff = %k\n
7373,[INFO] (spike_source_poisson.c: 265): ,fast_rate_per_tick_cutoff = %k\n
7374,[INFO] (spike_source_poisson.c: 267): ,read_global_parameters: completed successfully
7375,[ERROR] (spike_source_poisson.c: 286): ,Failed to allocate poisson_parameters
7376,[INFO] (spike_source_poisson.c: 295): ,read_poisson_parameters: completed successfully
7377,[INFO] (spike_source_poisson.c: 307): ,Recording flags = 0x%08x
7378,[INFO] (spike_source_poisson.c: 321): ,Initialise: started
7379,[INFO] (spike_source_poisson.c: 379): ,Initialise: completed successfully
7380,[ERROR] (spike_source_poisson.c: 394): ,failed to reread the Poisson parameters from SDRAM
7381,[INFO] (spike_source_poisson.c: 407): ,Successfully resumed Poisson spike source at time: %u
7382,[INFO] (spike_source_poisson.c: 417): ,store_parameters: starting
7383,[INFO] (spike_source_poisson.c: 433): ,store_parameters: completed successfully
7384,[DEBUG] (spike_source_poisson.c: 449): ,Sending spike packet %x at %d\n
7385,[ERROR] (spike_source_poisson.c: 460): ,Cannot reallocate spike buffer
7386,[DEBUG] (spike_source_poisson.c: 539): ,Generating %d spikes
7387,[DEBUG] (spike_source_poisson.c: 601): ,Timer tick %u
7388,[ERROR] (spike_source_poisson.c: 610): ,Failed to write poisson parameters to SDRAM
7389,[DEBUG] (spike_source_poisson.c: 669): ,Setting rate of %u (%u) to %kHz (%k per tick)
7390,[ERROR] (spike_source_poisson.c: 702): ,Error in initialisation - exiting!
7391,[ERROR] (connection_generator.c: 151): ,Could not create generator
7392,[ERROR] (connection_generator.c: 163): ,Connection generator with hash %u not found
7393,[DEBUG] (delay_expander.c: 92): ,Generated %u synapses
7394,[DEBUG] (delay_expander.c: 111): ,Rounded delay %k to %u
7395,[DEBUG] (delay_expander.c: 162): ,Generating %u delay edges for %u atoms starting at %u
7396,[INFO] (delay_expander.c: 180): ,Starting To Build Delays
7397,[INFO] (delay_expander.c: 189): ,\tReading SDRAM delay params at 0x%08x, expander params at 0x%08x
7398,[INFO] (delay_expander.c: 194): ,!!!   Error reading SDRAM data   !!!
7399,[INFO] (delay_expander.c: 198): ,Finished On Machine Delays!
7400,[ERROR] (matrix_generator.c: 137): ,Could not create generator
7401,[ERROR] (matrix_generator.c: 149): ,Matrix generator with hash %u not found
7402,[DEBUG] (matrix_generator.c: 184): ,Rounded delay %k to %u
7403,[DEBUG] (matrix_generator.c: 196): ,Rounded weight %k to %u
7404,[DEBUG] (matrix_generator.c: 226): ,Generated %u synapses
7405,[DEBUG] (matrix_generator.c: 255): ,\t\tTotal synapses generated = %u. Done!
7406,[ERROR] (param_generator.c: 137): ,Could not create generator
7407,[ERROR] (param_generator.c: 149): ,Param generator with hash %u not found
7408,[DEBUG] (synapse_expander.c: 103): ,Synaptic matrix offset = %u, delayed offset = %u
7409,[DEBUG] (synapse_expander.c: 105): ,Max row synapses = %u, max delayed row synapses = %u
7410,[DEBUG] (synapse_expander.c: 117): ,Generating matrix at 0x%08x, delayed at 0x%08x
7411,[ERROR] (synapse_expander.c: 139): ,\tMatrix generation failed
7412,[INFO] (synapse_expander.c: 161): ,Generating %u edges for %u atoms starting at %u
7413,[INFO] (synapse_expander.c: 187): ,Starting To Build Connectors
7414,[INFO] (synapse_expander.c: 195): ,\tReading SDRAM at 0x%08x, writing to matrix at 0x%08x
7415,[INFO] (synapse_expander.c: 200): ,!!!   Error reading SDRAM data   !!!
7416,[INFO] (synapse_expander.c: 204): ,Finished On Machine Connectors!
7417,[DEBUG] (connection_generator_all_to_all.h: 47): ,All to all connector, allow self connections = %u
7418,[DEBUG] (connection_generator_all_to_all.h: 63): ,Generating for %u
7419,[DEBUG] (connection_generator_all_to_all.h: 78): ,Not generating for post %u
7420,[DEBUG] (connection_generator_fixed_post.h: 61): ,Fixed Number Post Connector, allow self connections = %u, with replacement = %u, n_post = %u, n post neurons = %u
7421,[DEBUG] (connection_generator_fixed_post.h: 96): ,Generating %u from %u possible synapses
7422,[INFO] (connection_generator_fixed_post.h: 175): ,Check: indices[%u] is %u
7423,[INFO] (connection_generator_fixed_post.h: 177): ,pre_neuron_index is %u count_indices is %u
7424,[DEBUG] (connection_generator_fixed_pre.h: 66): ,Fixed Total Number Connector, allow self connections = %u, with replacement = %u, n_pre = %u, n pre neurons = %u
7425,[DEBUG] (connection_generator_fixed_pre.h: 102): ,Generating %u from %u possible synapses
7426,[ERROR] (connection_generator_fixed_pre.h: 112): ,Created out of order!
7427,[WARNING] (connection_generator_fixed_pre.h: 122): ,Could not allocate in DTCM, trying SDRAM
7428,[ERROR] (connection_generator_fixed_pre.h: 128): ,Could not allocate array for indices
7429,[DEBUG] (connection_generator_fixed_prob.h: 61): ,Fixed Probability Connector, allow self connections = %u, probability = %k
7430,[WARNING] (connection_generator_fixed_prob.h: 102): ,Row overflow
7431,[DEBUG] (connection_generator_fixed_total.h: 66): ,Fixed Total Number Connector, allow self connections = %u, with replacement = %u, n connections = %u, n potential connections = %u
7432,[WARNING] (connection_generator_fixed_total.h: 165): ,Could not create %u connections
7433,[DEBUG] (connection_generator_fixed_total.h: 170): ,Generating %u of %u synapses
7434,[DEBUG] (connection_generator_kernel.h: 73): ,Kernel connector, m_kernelWidth, m_kernelHeight = %u %u
7435,[DEBUG] (connection_generator_kernel.h: 89): ,Generating for %u
7436,[DEBUG] (connection_generator_one_to_one.h: 31): ,One to One connector
7437,[DEBUG] (matrix_generator_common.h: 51): ,Delay of %u is too small
7438,[DEBUG] (matrix_generator_common.h: 58): ,Delay of %u is too big
7439,[DEBUG] (matrix_generator_static.h: 113): ,Max stage = %u
7440,[DEBUG] (matrix_generator_static.h: 129): ,row[0] = 0x%08x
7441,[DEBUG] (matrix_generator_static.h: 140): ,row[%u] = 0x%08x
7442,[DEBUG] (matrix_generator_static.h: 146): ,row[%u] = 0x%08x
7443,[DEBUG] (matrix_generator_static.h: 155): ,Row size at 0x%08x for stage %u
7444,[DEBUG] (matrix_generator_static.h: 163): ,write[%u] = 0x%08x
7445,[ERROR] (matrix_generator_static.h: 180): ,Delay stage %u has not been initialised; raw delay = %u, delay = %u, max stage = %u
7446,[WARNING] (matrix_generator_static.h: 187): ,Row for delay stage %u is full - word not added!
7447,[DEBUG] (matrix_generator_static.h: 197): ,Writing word to 0x%08x
7448,[ERROR] (matrix_generator_stdp.h: 207): ,Delay stage %u has not been initialised
7449,[WARNING] (matrix_generator_stdp.h: 215): ,Row %u only has %u half words of %u free - not writing
7450,[DEBUG] (param_generator_constant.h: 46): ,Constant value %k
7451,[DEBUG] (param_generator_exponential.h: 58): ,exponential beta = %k
7452,[DEBUG] (param_generator_kernel.h: 69): ,Kernel param generator; kernelWidth, kernelHeight = %u,%u
7453,[ERROR] (param_generator_kernel.h: 118): ,Kernel coordinates off range (%d, %d)
7454,[DEBUG] (param_generator_normal.h: 61): ,normal mu = %k, sigma = %k
7455,[DEBUG] (param_generator_normal_clipped.h: 65): ,normal clipped mu = %k, sigma = %k, low = %k, high = %k
7456,[DEBUG] (param_generator_normal_clipped_to_boundary.h: 65): ,normal clipped to boundary mu = %k, sigma = %k, low = %k, high = %k
7457,[DEBUG] (param_generator_uniform.h: 61): ,Uniform low = %k, high = %k
