{% if k8s and k8s.deployment and k8s.deployment.enabled %}

{% if k8s.deployment.namespace or k8s.namespace %}
kind: Namespace
apiVersion: v1
metadata:
  name: {{ k8s.deployment.namespace or k8s.namespace }}
---
{% endif %}

{% if k8s.storage.enabled and k8s.deployment.kind != 'StatefulSet' %}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ k8s.storage.name or k8s.name + '-pvc' }}

  {% if k8s.storage.namespace or k8s.namespace %}
  namespace: {{ k8s.storage.namespace or k8s.namespace }}
  {% endif %}

  labels:
    htjs: "true"
    htjs-app: "{{ k8s.name }}"
    htjs-app-version: "{{ k8s.version or '0.0.1' }}"

spec:
  accessModes:
    {% if k8s.storage.accessModes %}
    {% for accessMode in k8s.storage.accessModes %}
    - {{ accessMode }}
    {% endfor %}
    {% else %}
    - ReadWriteOnce
    {% endif %}
  resources:
    requests:
      storage: {{ k8s.storage.requests or '10Mi' }}

  storageClassName: {{ k8s.storage.class }}
---
{% endif %}

kind: {{ k8s.deployment.kind if k8s.deployment.kind in ['StatefulSet', 'Deployment'] else 'Deployment' }}
apiVersion: {{ k8s.deployment.apiVersion or 'apps/v1' }}
metadata:
  name: {{ k8s.deployment.name or k8s.name }}

  {% if k8s.deployment.namespace or k8s.namespace %}
  namespace: {{ k8s.deployment.namespace or k8s.namespace }}
  {% endif %}

  labels:
    htjs: "true"
    htjs-app: "{{ k8s.name }}"
    htjs-app-version: "{{ k8s.version or '0.0.1' }}"

    app: {{ k8s.name }}
    {% if k8s.deployment.labels %}
    {% for label in k8s.deployment.labels.items() %}
    {{ label[0] }}: {{ label[1] }}
    {% endfor %}
    {% endif %}

spec:
  replicas: {{ k8s.deployment.replicas or 1 }}
  selector:
    matchLabels:
      app: {{ k8s.name }}

  {% if k8s.deployment.kind == 'StatefulSet' %}
  volumeClaimTemplates:
    - metadata:
      name: {{ k8s.name }}-volume
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ k8s.storage.class }}
      spec:
        accessModes:
          {% if k8s.storage.accessModes %}
          {% for accessMode in k8s.storage.accessModes %}
          - {{ accessMode }}
          {% endfor %}
          {% else %}
          - ReadWriteOnce
          {% endif %}
        resources:
          requests:
            storage: {{ k8s.storage.requests or '10Mi' }}
  {% endif %}

  template:
    metadata:
      labels:
        app: {{ k8s.name }}
    spec:

      {% if k8s.deployment.imagePullSecrets %}
      imagePullSecrets:
        - name: {{ k8s.deployment.imagePullSecrets }}
      {% endif %}

      containers:
        - name: {{ k8s.name }}
          image: {{ k8s.deployment.imageWithTag or k8s.deployment.image + ':' + (k8s.deployment.tag or 'latest') }}

          {% if k8s.deployment.command %}
          command: ["{{ k8s.deployment.command | join('", "') }}"]
          {% endif %}

          {% if k8s.deployment.args %}
          args: ["{{ k8s.deployment.args | join('", "') }}"]
          {% endif %}

          {% if k8s.deployment.imagePullPolicy %}
          imagePullPolicy: {{ k8s.deployment.imagePullPolicy }}
          {% endif %}

          {% if k8s.deployment.env %}
          env:
            {% for name, value in k8s.deployment.env.items %}
            - name: {{ name }}
              {% if value is mapping %}
              valueFrom:
                {{ value.ref }}:
                  name: {{ value.name }}
                  value: {{ value.value }}
              {% else %}
              value: {{ value }}
              {% endif %}
            {% endfor %}
          {% endif %}

          {% if k8s.deployment.ports %}
          ports:
          {% if k8s.deployment.ports is iterable %}
          {% for port in k8s.deployment.ports %}
            - containerPort: {{ port }}
          {% endfor %}
          {% else %}
            - containerPort: {{ k8s.deployment.ports }}
          {% endif %}
          {% endif %}

          {% if k8s.deployment.resources and (k8s.deployment.resources.limits or k8s.deployment.resources.requests) %}
          resources:
            {% if k8s.deployment.resources.requests %}
            requests:
              {% if k8s.deployment.resources.requests.cpu %}
              cpu: {{ k8s.deployment.resources.requests.cpu }}
              {% endif %}

              {% if k8s.deployment.resources.requests.memory %}
              memory: {{ k8s.deployment.resources.requests.memory }}
              {% endif %}
            {% endif %}

            {% if k8s.deployment.resources.limits %}
            limits:
              {% if k8s.deployment.resources.limits.cpu %}
              cpu: {{ k8s.deployment.resources.limits.cpu }}
              {% endif %}

              {% if k8s.deployment.resources.limits.memory %}
              memory: {{ k8s.deployment.resources.limits.memory }}
              {% endif %}
            {% endif %}
          {% endif %}

          {% if k8s.storage.enabled %}
          volumeMounts:
            - name: {{ k8s.name }}-volume
              mountPath: {{ k8s.storage.path or '/k8s-volume' }}
              {% if k8s.storage.readOnly %}
              readOnly: true
              {% endif %}
          {% endif %}

      {% if k8s.storage.enabled and k8s.deployment.kind != 'StatefulSet' %}
      volumes:
        - name: {{ k8s.name }}-volume
          persistentVolumeClaim:
            claimName: {{ k8s.storage.name or k8s.name + '-pvc' }}
      {% endif %}

{% endif %}
