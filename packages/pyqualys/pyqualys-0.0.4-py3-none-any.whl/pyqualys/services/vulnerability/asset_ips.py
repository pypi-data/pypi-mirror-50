# -*- coding: utf-8 -*-
import logging
from ...utils import util

logger = logging.getLogger(__name__)


class AssetIPHandler(object):

    def __init__(self, session, api_version, urls_map):
        self.session = session
        self.asset_api_version = api_version
        self.asset_urls_map = urls_map
        self.urls_map = urls_map
        super(AssetIPHandler, self).__init__(session=session,
                                             api_version=api_version,
                                             urls_map=urls_map)

    def __get_obj(self, data="", uri=""):
        resp = self.session.post(uri, data)
        response = util.decode_xml(resp.text) if self.FORMAT == "json" \
                                                                else resp.text
        return response

    def add_asset_ips(self, **kwargs):
        logger.debug("Add asset ips: {}".format(kwargs))
        if "host_ips" not in kwargs:
            logger.error("host_ips is missing.")
            return
        data = kwargs
        data["action"] = "add"

        uri = self.asset_urls_map.asset_ips
        return self.__get_obj(data, uri=uri)

    def update_asset_ips(self, **kwargs):
        logger.debug("Update asset ips: {}".format(kwargs))
        if "host_ips" not in kwargs:
            logger.error("host_ips is missing.")
            return
        data = kwargs
        data["action"] = "edit"

        uri = self.asset_urls_map.asset_ips
        return self.__get_obj(data, uri=uri)

    def get_asset_ips(self, **kwargs):
        logger.debug("Get asset ips: {}".format(kwargs))
        data = kwargs
        uri = self.asset_urls_map.asset_ips_list
        return self.__get_obj(data, uri=uri)
