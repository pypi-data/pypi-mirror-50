# -*- coding: utf-8 -*-
import logging
from ...utils import util
logger = logging.getLogger(__name__)


class ScanAsset(object):
    def __init__(self, **kwargs):
        self.endpoint = kwargs.pop('endpoint')
        self.uri = kwargs.pop('uri', '')
        self.session = kwargs.pop('session', '')
        self.response = kwargs.pop('response', '')
        self.ips = kwargs.pop('ips', None)

    def __get_obj(self, data=""):
        uri = self.endpoint+self.uri.scan
        resp = self.session.post(uri, data)
        response = util.decode_xml(resp.text)
        return response

    def scan_list(self, **kwargs):
        data = kwargs
        data["action"] = "list"
        return self.__get_obj(data)

    def start_scan(self, **kwargs):
        data = kwargs
        data["action"] = "launch"
        if self.ips is not None:
            data["ip"] = self.ips
        return self.__get_obj(data)

    def manage_scan(self, **kwargs):
        data = kwargs
        return self.__get_obj(data)

    def get_scan_report(self, **kwargs):
        data = kwargs
        data["action"] = "fetch"
        return self.__get_obj(data)


def scanner(func):
    def inner(*args, **kwargs):
        result = func(*args, **kwargs)
        info = result["info"]
        logger.debug(result)
        if result["status"] not in [200, 201]:
            return {'status': result["status"],
                    'response': result["response"]}
        return ScanAsset(endpoint=info["endpoint"], uri=info["uri"],
                         session=info["session"], response=result["response"],
                         ips=result["ips"])
    return inner
