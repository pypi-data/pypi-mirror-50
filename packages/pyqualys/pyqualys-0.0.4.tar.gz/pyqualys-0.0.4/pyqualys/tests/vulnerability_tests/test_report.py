# -*- coding: utf-8 -*-
import unittest
import pyqualys
from pyqualys.utils import util


class TestReport(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.__instance = pyqualys.QualysAPI(username="abc",
                                            password="abc",
                                            host="https://qualys.com/")
        cls.__service = cls.__instance.service("vulnerability")

    def test_01_list_report(self):
        data = {
            'action': 'list'
        }
        report_list = self.__service.report.list_report(**data)
        self.assertEqual(200, report_list['status'])

    def test_02_scan_report(self):
        data = {
            'report_title': 'pyqualys report',
            'action': 'launch',
            'report_type': 'Scan',
            'template_id': '134271',
            'output_format': 'pdf',
        }
        scan_report = self.__service.report.scan_report(**data)
        self.assertEqual(200, scan_report['status'])

    def test_03_map_report(self):
        data = {
            'report_title': 'pyqualys report MAP',
            'action': 'launch',
            'report_type': 'Map',
            'template_id': '105607',
            'output_format': 'pdf',
        }
        map_report = self.__service.report.map_report(**data)
        self.assertEqual(200, map_report['status'])

    def test_04_remediation_report(self):
        data = {
            'report_title': 'pyqualys report Remediation',
            'action': 'launch',
            'report_type': 'Remediation',
            'template_id': '134271',
            'output_format': 'pdf',
        }
        remediation_report = self.__service.report.remediation_report(**data)
        self.assertEqual(200, remediation_report['status'])

    def test_05_compliance_report(self):
        data = {
            'report_title': 'pyqualys report Compliance',
            'action': 'launch',
            'report_type': 'Compliance',
            'template_id': '134271',
            'output_format': 'pdf',
        }
        compliance_report = self.__service.report.compliance_report(**data)
        self.assertEqual(200, compliance_report['status'])

    def test_06_compliance_policy_report(self):
        data = {
            'report_title': 'pyqualys report Compliance Policy',
            'action': 'launch',
            'report_type': 'Policy',
            'template_id': '134271',
            'output_format': 'pdf',
        }
        policy_report = self.__service.report.compliance_policy_report(**data)
        self.assertEqual(200, policy_report['status'])
