# -*- coding: utf-8 -*-
import unittest
import pyqualys


class TestAssets(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.__instance = pyqualys.QualysAPI(username="abc",
                                            password="abc",
                                            host="https://qualys.com/")
        cls.__service = cls.__instance.service("vulnerability")
        cls.__service.FORMAT = "json"
        TestAssets.asset_id = None

    def test_01_add_assets(self):
        response = self.__service.add_asset(title="myLinux", ips="10.10.10.1")
        response = response.response['data']['RESPONSE']
        expected_output = "Asset Group successfully added."
        actual_output = response['TEXT']
        TestAssets.asset_id = response['ITEM_LIST']['ITEM']['VALUE']
        self.assertEqual(actual_output, expected_output)

    def test_02_update_assets(self):
        response = self.__service.update_asset(asset_id=TestAssets.asset_id,
                                               title="myLinuxUpdate",
                                               ips="10.10.10.11")
        response = response.response['data']['RESPONSE']
        expected_output = "Asset Group Updated Successfully"
        actual_output = response['TEXT']
        self.assertEqual(actual_output, expected_output)

    def test_03_list_assets(self):
        response = self.__service.list_assets()
        response = response.response['data']['RESPONSE']
        expected_output = "ASSET_GROUP"
        actual_output = response['ASSET_GROUP_LIST']
        self.assertIn(expected_output, actual_output)

    def test_04_search_assets(self):
        response = self.__service.search_asset(asset_id=TestAssets.asset_id)
        response = response.response['data']['RESPONSE']
        expected_output = "ASSET_GROUP"
        actual_output = response['ASSET_GROUP_LIST']
        self.assertIn(expected_output, actual_output)

    def test_05_delete_assets(self):
        response = self.__service.delete_asset(asset_id=TestAssets.asset_id)
        response = response.response['data']['RESPONSE']
        expected_output = "Asset Group Deleted Successfully"
        actual_output = response['TEXT']
        self.assertEqual(expected_output, actual_output)


if __name__ == '__main__':
    suite = unittest.TestLoader().loadTestsFromTestCase(TestAssets)
    unittest.TextTestRunner(verbosity=2).run(suite)
