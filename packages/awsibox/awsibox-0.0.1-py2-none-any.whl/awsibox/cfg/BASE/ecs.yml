include: !include [
  autoscaling.yml,
  loadbalancing.yml,
  alarms.yml,
  cloudfront.yml,
  ecs-task.yml,
]

ecs:
  Parameter:
    - LoadBalancerApplicationStack:
        Description: 'LoadBalancer Application Stack to use - empty for default based on env/role'
  LaunchType: EC2
  AlarmCPUBase: &cpu
    Dimensions:
      - Cluster:
          Name: ClusterName
          Value: get_exported_value('Cluster', 'ClusterStack')
      - Service:
          Name: ServiceName
          Value: GetAtt('Service', 'Name')
    Namespace: 'AWS/ECS'
  Alarm:
    - CPUHigh:
        <<: *cpu
    - CPULow:
        <<: *cpu
  DeploymentConfiguration:
    MaximumPercent: 200
    MinimumHealthyPercent: 100
  ScalingPolicyUpScalingAdjustment1: SkipClass
  ListenerRules:
    - 1:
        HostHeader: '*${EnvRole}.*'
  NetworkMode: bridge
  ScalingPolicyTrackings:
    - APPCpu:
        Enabled: True
  ScheduledAction:
    - Down:
        MaxSize: k
        MinSize: k
    - Up:
        MaxSize: k
        MinSize: k
  Service: True

dev: &cfg_dev
  Alarm:
    - TargetExternal5XX:
        EvaluationPeriods: 0
    - TargetInternal5XX:
        EvaluationPeriods: 0
  ScheduledAction:
    - Down:
        MaxSize: k
        MinSize: k
    - Up:
        MaxSize: CapacityMax
        MinSize: CapacityMin

stg: *cfg_dev 

eu-west-1:
  dev:
    LoadBalancerApplicationStack: alb-a-d

  stg:
    LoadBalancerApplicationStack: alb-a-s

  prd:
    LoadBalancerApplicationStack: alb-a-p

eu-central-1:
  prd:
    LoadBalancerApplicationStack: alb-a-b
