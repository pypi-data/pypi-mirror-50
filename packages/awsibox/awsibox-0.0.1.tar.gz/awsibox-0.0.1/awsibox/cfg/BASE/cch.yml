include: !include [
  securitygroup.yml,
]

cch:
  Parameter:
    - CacheNodeType:
        Description: 'Node Type - empty for default based on env/role'
        AllowedValues: [
          '', 'cache.t2.micro', 'cache.t2.small', 'cache.t2.medium', 'cache.t2.large',
          'cache.m3.medium', 'cache.m3.large', 'cache.m3.xlarge', 'cache.m3.2xlarge',
          'cache.m4.large', 'cache.m4.xlarge', 'cache.m4.2xlarge', 'cache.m4.4xlarge', 'cache.m4.10xlarge',
          'cache.r3.large', 'cache.r3.xlarge', 'cache.r3.2xlarge', 'cache.r3.4xlarge', 'cache.r3.8xlarge',
        ]
    - CacheEnabled:
        Description: 'Enable or disable cache creation'
        AllowedValues: [ 'True', 'False']
        Default: 'True'
    - Engine:
        Description: 'Engine - empty for default based on env/role'
        AllowedValues: ['', 'memcached', 'redis']
    - EngineVersion:
        Description: 'Engine Version - empty for default based on env/role'
    - CCHAccess:
        Description: 'Access type public or private - empty for default based on env/role'
        AllowedValues: ['', 'Private', 'Public']
  Condition:
    - CCHPublic: Equals(get_final_value('CCHAccess'), 'Public')
    - CacheEnabled: Equals(Ref('CacheEnabled'), 'True')
  Output:
    - CacheNodeType:
        Value: get_final_value('CacheNodeType')
    - Engine:
        Value: get_final_value('Engine')
    - EngineVersion: 
        Value: get_final_value('EngineVersion')
    - CCHAccess:
        Value: get_final_value('CCHAccess')
    - CCHScheme:
        Value: get_final_value('CCHScheme')
  AutoMinorVersionUpgrade: True
  CCHAccess: Public
  CCHScheme: Internal
  NumCacheNodes: 1
