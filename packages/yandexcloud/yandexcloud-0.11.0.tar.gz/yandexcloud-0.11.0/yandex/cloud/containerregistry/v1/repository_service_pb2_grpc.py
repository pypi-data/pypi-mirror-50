# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from yandex.cloud.containerregistry.v1 import repository_service_pb2 as yandex_dot_cloud_dot_containerregistry_dot_v1_dot_repository__service__pb2


class RepositoryServiceStub(object):
  """A set of methods for managing Repository resources.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.List = channel.unary_unary(
        '/yandex.cloud.containerregistry.v1.RepositoryService/List',
        request_serializer=yandex_dot_cloud_dot_containerregistry_dot_v1_dot_repository__service__pb2.ListRepositoriesRequest.SerializeToString,
        response_deserializer=yandex_dot_cloud_dot_containerregistry_dot_v1_dot_repository__service__pb2.ListRepositoriesResponse.FromString,
        )


class RepositoryServiceServicer(object):
  """A set of methods for managing Repository resources.
  """

  def List(self, request, context):
    """Retrieves the list of Repository resources in the specified registry.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RepositoryServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'List': grpc.unary_unary_rpc_method_handler(
          servicer.List,
          request_deserializer=yandex_dot_cloud_dot_containerregistry_dot_v1_dot_repository__service__pb2.ListRepositoriesRequest.FromString,
          response_serializer=yandex_dot_cloud_dot_containerregistry_dot_v1_dot_repository__service__pb2.ListRepositoriesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'yandex.cloud.containerregistry.v1.RepositoryService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
