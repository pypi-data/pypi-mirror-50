Metadata-Version: 2.1
Name: pyIndego
Version: 0.2.0
Summary: API for Bosch Indego mower
Home-page: https://github.com/jm-73/Indego
Author: jm-73
Author-email: jens@myretyr.se
License: UNKNOWN
Description: # API for the Bosch Indego lawnmowers
        
        ## Usage with Home Assistant
        See https://github.com/jm-73/Indego
        
        ## Basic information needed
        
        Information | Description
        ----------- | -----------
        your_username | Your username when using the BoschSmartMove app
        your_password | Your password for the app
        your_serial | Your Bosch Indego serial (found on the mover, in the mover menu or in the app)
        
        The python library is written for the login method with username (email address) and password. Login with Facebook account is not supported.
        
        ## Call the API
        Call the API:
        
            IndegoApi_Instance = IndegoAPI(username=your_mail@gmail.com, password=your_password, serial=your_serial)
        
        ## Functions
        
            getAlerts()
        Get number of alerts
        
            getAlertsDescription()
        Get detailed list of alerts
        
            getBatteryInformation()
        Get detailed battery information
        
            getFirmware()
        Get the mower firmware version
        
            getModel()
        Get the mower model
        
            getMowed()
        Show percentage of lawn mowed
        
            getMowingMode()
        Get the mowing mode
        
            getNeedsService()
        Get the change knives flag
        
            getPosition()
        Get position (relative on map)
        
            getRuntimeSession()
        Get session rutime and charge time
        
            getRuntimeTotal()
        Get total runtime and charge time
        
            getSerial()
        Get the serial number
        
            getServiceCounter()
        Get service counter for knives
        
            getState()
        Show current state
        
            getUpdateAvailable()
        Check if there is an update available
        
        
            putCommand(command)
        Send command. Accepted commands:
        
        Command     |Description         
        ------------|--------------------
        mow         |Start mowing        
        pause       |Pause mower         
        returnToDock|Return mower to dock
        
        
        ## Not working
            getName()
        NOT WORKING (Not implemented by Bosch?)
        Get the mower name
        
            getNextPredicitiveCutting()
        NOT WORKING! (No data returned from API)
        Get next scheduled cutting session
        
        ### Not properly implemented yet
        
            getLocation()
        Get garden location (GPS coordinates?)
        
            getPredicitiveCalendar()
        Get the calender for predicted cutting sessions
        
            getUserAdjustment()
        Get the user adjustment of the cutting frequency
        
            getCalendar()
        Get the calendar for allowed cutting times
        
            getSecurity()
        Get the security settings
        
            getAutomaticUpdate()
        Get the automatic update settings
        
        
        # API CALLS
        https://api.indego.iot.bosch-si.com:443/api/v1
        
        
        ```python
        get
        /authenticate
        /alerts
        /alms/<serial>
        /alms/<serial>/automaticUpdate
        /alms/<serial>/updates
        /alms/<serial>/calendar
        /alms/<serial>/map
        /alms/<serial>/operatingData
        /alms/<serial>/predictive/nextcutting?withReason=true
        /alms/<serial>/predictive/nextcutting?last=YYYY-MM-DDTHH:MM:SS%2BHH:MM (Not working)
        /alms/<serial>/predictive/location
        /alms/<serial>/predictive/calendar
        /alms/<serial>/predictive/useradjustment (What is this for?)
        /alms/<serial>/security
        /alms/<serial>/state
        
        put
        ```
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
