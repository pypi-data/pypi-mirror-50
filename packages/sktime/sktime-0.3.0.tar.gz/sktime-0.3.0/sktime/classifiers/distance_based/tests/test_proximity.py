import numpy as np
from numpy import testing

from sktime.classifiers.distance_based import ProximityForest, ProximityStump, ProximityTree
from sktime.classifiers.distance_based.proximity_forest import best_of_n_stumps
from sktime.datasets import load_gunpoint


def run_classifier_on_dataset(classifier, dataset_loader,
                              expected_predict_probas,
                              expected_predictions):
    X_train, y_train = dataset_loader(split='TRAIN', return_X_y=True)
    X_test, y_test = dataset_loader(split='TEST', return_X_y=True)
    classifier.fit(X_train, y_train)
    predict_probas = classifier.predict_proba(X_test)
    testing.assert_array_equal(predict_probas, expected_predict_probas)
    # predictions = classifier.predict(X_test)
    # testing.assert_array_equal(predictions, expected_predictions)


def test_proximity_stump_on_gunpoint():
    classifier = ProximityStump(random_state=0)
    run_classifier_on_dataset(classifier, load_gunpoint, stump_gunpoint_predict_probas, stump_gunpoint_predictions)


def test_proximity_tree_on_gunpoint():
    classifier = ProximityTree(random_state=0, find_stump=best_of_n_stumps(5))
    run_classifier_on_dataset(classifier, load_gunpoint, tree_gunpoint_predict_probas, tree_gunpoint_predictions)


def test_proximity_forest_on_gunpoint():
    classifier = ProximityForest(random_state=0, n_trees=3, find_stump=best_of_n_stumps(1))
    run_classifier_on_dataset(classifier, load_gunpoint, forest_gunpoint_predict_probas, forest_gunpoint_predictions)


stump_gunpoint_predict_probas = np.array([
    [0.6414194584768314, 0.35858054152316865, ],
    [0.27429501888721397, 0.725704981112786, ],
    [0.5197608566366534, 0.4802391433633466, ],
    [0.5785380796550575, 0.42146192034494245, ],
    [0.2770084772636855, 0.7229915227363146, ],
    [0.2179421148091953, 0.7820578851908047, ],
    [0.5836257256771822, 0.4163742743228178, ],
    [0.6164753318568318, 0.38352466814316816, ],
    [0.4277110816208351, 0.5722889183791648, ],
    [0.22256244193410693, 0.7774375580658931, ],
    [0.42327177801635496, 0.576728221983645, ],
    [0.5173085114022878, 0.48269148859771227, ],
    [0.30743697966475964, 0.6925630203352404, ],
    [0.6501490707093197, 0.34985092929068035, ],
    [0.664731996995831, 0.33526800300416904, ],
    [0.3879021115949111, 0.6120978884050889, ],
    [0.2466386889383035, 0.7533613110616966, ],
    [0.26344971142927043, 0.7365502885707296, ],
    [0.25621282753005326, 0.7437871724699467, ],
    [0.2645607333864593, 0.7354392666135408, ],
    [0.7382181932967543, 0.2617818067032457, ],
    [0.6158170758531331, 0.38418292414686694, ],
    [0.3133765582228095, 0.6866234417771906, ],
    [0.22839673396688448, 0.7716032660331155, ],
    [0.8038618720233237, 0.19613812797667632, ],
    [0.605189500194073, 0.394810499805927, ],
    [0.6869562875395432, 0.31304371246045676, ],
    [0.6362052835105209, 0.3637947164894791, ],
    [0.3627402193641416, 0.6372597806358584, ],
    [0.3590162403607053, 0.6409837596392947, ],
    [0.2540508897524179, 0.745949110247582, ],
    [0.6100343762861788, 0.3899656237138212, ],
    [0.6150821188319637, 0.38491788116803616, ],
    [0.2207541027059936, 0.7792458972940064, ],
    [0.2597082632086271, 0.7402917367913728, ],
    [0.41947022275388557, 0.5805297772461143, ],
    [0.35229935977257915, 0.6477006402274208, ],
    [0.4086059813756567, 0.5913940186243434, ],
    [0.7864386137943968, 0.2135613862056031, ],
    [0.2562178629293735, 0.7437821370706266, ],
    [0.2931310272129953, 0.7068689727870047, ],
    [0.5596704516297131, 0.4403295483702868, ],
    [0.41533633671214754, 0.5846636632878525, ],
    [0.3905465481732385, 0.6094534518267616, ],
    [0.5721090540654138, 0.4278909459345863, ],
    [0.6052131566845889, 0.3947868433154111, ],
    [0.6004865721766528, 0.3995134278233472, ],
    [0.3727862095499574, 0.6272137904500426, ],
    [0.31472650427086674, 0.6852734957291332, ],
    [0.4347550140114488, 0.5652449859885511, ],
    [0.29248088594586613, 0.7075191140541339, ],
    [0.611210419245792, 0.38878958075420794, ],
    [0.3595315990884227, 0.6404684009115773, ],
    [0.5590611113971844, 0.44093888860281555, ],
    [0.26221454628362656, 0.7377854537163735, ],
    [0.6350908736907308, 0.3649091263092693, ],
    [0.612837555777658, 0.3871624442223421, ],
    [0.2616414419102298, 0.7383585580897702, ],
    [0.33076150422069456, 0.6692384957793054, ],
    [0.3467997976047353, 0.6532002023952648, ],
    [0.6547305836361969, 0.34526941636380304, ],
    [0.523539103382852, 0.4764608966171481, ],
    [0.6934775646850561, 0.30652243531494383, ],
    [0.3707451983458276, 0.6292548016541726, ],
    [0.2928313321334056, 0.7071686678665944, ],
    [0.40597413119776904, 0.5940258688022311, ],
    [0.7044041746042148, 0.29559582539578516, ],
    [0.2501808776772354, 0.7498191223227646, ],
    [0.20994338088731082, 0.7900566191126891, ],
    [0.18557312339606938, 0.8144268766039306, ],
    [0.32567746141861775, 0.6743225385813822, ],
    [0.20904647150262373, 0.7909535284973762, ],
    [0.3735930411661468, 0.6264069588338532, ],
    [0.6201821619931519, 0.3798178380068482, ],
    [0.609276014294575, 0.390723985705425, ],
    [0.3134876487956555, 0.6865123512043445, ],
    [0.2322172031548802, 0.7677827968451199, ],
    [0.5448433942297904, 0.45515660577020944, ],
    [0.6071809850564314, 0.39281901494356863, ],
    [0.27153396327416324, 0.7284660367258368, ],
    [0.5755272296895775, 0.4244727703104226, ],
    [0.5390837238907162, 0.4609162761092838, ],
    [0.5366642941269929, 0.46333570587300715, ],
    [0.29442707469228463, 0.7055729253077154, ],
    [0.25170544477399925, 0.7482945552260007, ],
    [0.2569915729259879, 0.7430084270740122, ],
    [0.6698673930920416, 0.3301326069079585, ],
    [0.22274484788547694, 0.7772551521145231, ],
    [0.27235853007984867, 0.7276414699201512, ],
    [0.31990097380046567, 0.6800990261995343, ],
    [0.2478481117463552, 0.7521518882536448, ],
    [0.6318780250920709, 0.36812197490792903, ],
    [0.3311204840160209, 0.668879515983979, ],
    [0.6063690613668233, 0.3936309386331767, ],
    [0.3513169665012637, 0.6486830334987362, ],
    [0.23475893480355584, 0.7652410651964443, ],
    [0.19758013095077848, 0.8024198690492215, ],
    [0.5845712467680306, 0.41542875323196926, ],
    [0.6461760078820865, 0.3538239921179135, ],
    [0.3615228366996297, 0.6384771633003704, ],
    [0.5722991484501576, 0.4277008515498424, ],
    [0.6142122709563302, 0.3857877290436698, ],
    [0.6606217935903603, 0.33937820640963967, ],
    [0.44037363077981023, 0.5596263692201897, ],
    [0.305765590360267, 0.6942344096397329, ],
    [0.4156677145651818, 0.5843322854348182, ],
    [0.3099406679289503, 0.6900593320710499, ],
    [0.5599828924016904, 0.44001710759830953, ],
    [0.28312557145482087, 0.7168744285451791, ],
    [0.38831402438937834, 0.6116859756106217, ],
    [0.17432121921877314, 0.8256787807812268, ],
    [0.22144778474810167, 0.7785522152518983, ],
    [0.6472413861539744, 0.35275861384602564, ],
    [0.5784730975066031, 0.4215269024933968, ],
    [0.3694582055045504, 0.6305417944954497, ],
    [0.779145157577139, 0.22085484242286096, ],
    [0.6171055410913897, 0.38289445890861024, ],
    [0.7733553834187734, 0.22664461658122662, ],
    [0.36355710641472877, 0.6364428935852713, ],
    [0.6115508524926978, 0.3884491475073022, ],
    [0.792521952581805, 0.20747804741819492, ],
    [0.5977389872986659, 0.4022610127013341, ],
    [0.29874299154078343, 0.7012570084592166, ],
    [0.5442541670182639, 0.45574583298173615, ],
    [0.5944682527757794, 0.4055317472242206, ],
    [0.5785397003665363, 0.4214602996334637, ],
    [0.5298778904686197, 0.47012210953138034, ],
    [0.4392918710400089, 0.5607081289599912, ],
    [0.6188944635708792, 0.38110553642912076, ],
    [0.5406340096820476, 0.45936599031795244, ],
    [0.6019079097598338, 0.3980920902401661, ],
    [0.17756747718468624, 0.8224325228153138, ],
    [0.6921152034874208, 0.30788479651257916, ],
    [0.32738997639847417, 0.6726100236015258, ],
    [0.5541203486733949, 0.44587965132660506, ],
    [0.5533570530523955, 0.4466429469476044, ],
    [0.6575902744427685, 0.3424097255572316, ],
    [0.3019011920887733, 0.6980988079112268, ],
    [0.6743079695059635, 0.32569203049403644, ],
    [0.40498237636830775, 0.5950176236316923, ],
    [0.5636153015239243, 0.4363846984760758, ],
    [0.5345462474954363, 0.46545375250456367, ],
    [0.24699274352402575, 0.7530072564759742, ],
    [0.5243854184927265, 0.47561458150727354, ],
    [0.20925023549566008, 0.79074976450434, ],
    [0.3015626896814115, 0.6984373103185885, ],
    [0.4300660139845336, 0.5699339860154663, ],
    [0.368270024577649, 0.6317299754223509, ],
    [0.5898743043138017, 0.4101256956861982, ],
    [0.5801076491226957, 0.41989235087730425, ],
])
stump_gunpoint_predictions = np.array(['1' '2' '1' '1' '2' '2' '1' '1' '2' '2' '2' '1' '2' '1' '1' '2' '2' '2'
                                       '2' '2' '1' '1' '2' '2' '1' '1' '1' '1' '2' '2' '2' '1' '1' '2' '2' '2'
                                       '2' '2' '1' '2' '2' '1' '2' '2' '1' '1' '1' '2' '2' '2' '2' '1' '2' '1'
                                       '2' '1' '1' '2' '2' '2' '1' '1' '1' '2' '2' '2' '1' '2' '2' '2' '2' '2'
                                       '2' '1' '1' '2' '2' '1' '1' '2' '1' '1' '1' '2' '2' '2' '1' '2' '2' '2'
                                       '2' '1' '2' '1' '2' '2' '2' '1' '1' '2' '1' '1' '1' '2' '2' '2' '2' '1'
                                       '2' '2' '2' '2' '1' '1' '2' '1' '1' '1' '2' '1' '1' '1' '2' '1' '1' '1'
                                       '1' '2' '1' '1' '1' '2' '1' '2' '1' '1' '1' '2' '1' '2' '1' '1' '2' '1'
                                       '2' '2' '2' '2' '1' '1'])
tree_gunpoint_predict_probas = np.array([
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
])
tree_gunpoint_predictions = np.array(['1' '2' '2' '1' '1' '2' '2' '2' '1' '2' '1' '1' '1' '1' '1' '1' '1' '2'
                                      '1' '2' '1' '2' '1' '1' '1' '2' '1' '2' '2' '1' '1' '2' '2' '2' '1' '1'
                                      '1' '1' '1' '2' '1' '2' '1' '1' '2' '2' '2' '2' '1' '2' '2' '2' '1' '2'
                                      '1' '2' '2' '2' '1' '1' '1' '2' '1' '1' '2' '1' '1' '2' '2' '1' '2' '2'
                                      '2' '2' '2' '2' '2' '2' '2' '1' '1' '1' '2' '2' '2' '2' '1' '2' '1' '2'
                                      '1' '2' '1' '2' '2' '1' '2' '2' '1' '1' '2' '1' '1' '2' '2' '1' '1' '2'
                                      '1' '2' '2' '2' '1' '2' '1' '1' '2' '1' '1' '2' '1' '2' '2' '2' '1' '2'
                                      '1' '1' '2' '2' '2' '2' '1' '1' '1' '2' '1' '2' '1' '1' '2' '1' '1' '2'
                                      '2' '2' '1' '2' '2' '1'])
forest_gunpoint_predict_probas = np.array([
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.3333333333333333, 0.6666666666666666, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
    [1.0, 0.0, ],
    [0.0, 1.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.6666666666666666, 0.3333333333333333, ],
    [0.0, 1.0, ],
    [1.0, 0.0, ],
])
forest_gunpoint_predictions = np.array(['1' '2' '2' '1' '1' '2' '1' '2' '2' '1' '1' '1' '2' '1' '1' '1' '2' '2'
                                        '2' '2' '2' '2' '1' '1' '2' '2' '2' '1' '2' '1' '1' '2' '2' '1' '1' '1'
                                        '1' '1' '1' '2' '2' '2' '1' '1' '2' '1' '2' '1' '2' '2' '2' '1' '1' '2'
                                        '1' '1' '2' '1' '1' '2' '1' '2' '2' '2' '2' '1' '1' '2' '2' '2' '2' '2'
                                        '2' '2' '2' '2' '1' '2' '2' '1' '1' '1' '2' '2' '2' '1' '1' '2' '1' '1'
                                        '1' '2' '2' '2' '2' '1' '2' '2' '1' '1' '2' '1' '2' '2' '2' '1' '1' '2'
                                        '2' '2' '2' '2' '1' '2' '1' '1' '2' '2' '2' '2' '2' '2' '2' '2' '1' '2'
                                        '1' '1' '2' '2' '2' '2' '1' '2' '1' '2' '1' '2' '2' '1' '2' '1' '1' '2'
                                        '1' '2' '1' '1' '2' '1'])

# code to generate predictions below:
# import numpy as np
# import sktime.classifiers.proximity
#
# def print_array(array):
#     print('[')
#     for sub_array in array:
#         print('[', end='')
#         for value in sub_array:
#             print(value.astype(str), end='')
#             print(',', end='')
#         print('],')
#     print(']')
#
# if __name__ == "__main__":
# #    change below to prox stump / tree / forest as required
# #     classifier = sktime.classifiers.proximity.ProximityForest(verbosity=1, random_state = 0,
# #                                                               n_trees = 3,
# #                                                               find_stump = proximity.best_of_n_stumps(1)
# #                                                               )
# #     classifier = sktime.classifiers.proximity.ProximityTree(verbosity=1, random_state = 0,
# #                                                               find_stump = proximity.best_of_n_stumps(5)
# #                                                               )
#     classifier = sktime.classifiers.proximity.ProximityStump(verbosity=1, random_state = 0)
#     X_train, y_train = sktime.datasets.load_gunpoint(split = 'TRAIN', return_X_y = True)
#     X_test, y_test = sktime.datasets.load_gunpoint(split = 'TEST', return_X_y = True)
#     classifier.fit(X_train, y_train)
#     predict_probas = classifier.predict_proba(X_test)
#     print_array(predict_probas)
#     predictions = classifier.predict(X_test)
#     print(predictions)
