"""
Autogenerated REST API with Faastapi
"""
from typing import * # noqa: 403
from datetime import datetime  # noqa: 401
from faastapi import FaastAPI, get_context
{%- if run["output"] is mapping and run["output"]|length %}
from function.models import Output
{%- endif %}
{%- if run["input"] is mapping and run["input"]|length %}
from function.models import Input
{%- endif %}
from function.handler import {{ run["function"] }} as handle


app = FaastAPI()

app.configure()

{% if run["output"] is defined %}
    {%- if run["output"] is mapping %}
@app.post("/", dependencies=[app.get_user], response_model=Output)
    {%- else %}
@app.post("/", dependencies=[app.get_user], response_model={{ run["output"] }})
    {%- endif %}
{%- else %}
@app.post("/", dependencies=[app.get_user])
{%- endif %}
async def {{ run["method"].lower() }}(
{%- if run["input"] is defined %}
    {%- if run["input"] is string %}
    inputs: {{ run["input"] }},
    {%- else %}
    inputs: Input,
    {%- endif %}
{%- endif %}
    context=get_context
):
{%- if run["input"] is defined %}
    {%- if run["input"] is string %}
    resp = handle(context, inputs)
    {%- else %}
    resp = handle(context, **inputs.dict())
    {%- endif %}
{%- else %}
    resp = handle(context)
{%- endif %}
    return resp

