[tool.poetry]
name = "faastapi"
version = "0.2.1"
description = "Easily create OpenFaas functions built on top of FastAPI Python framework"
authors = ["Guillaume Charbonnier <guillaume.charbonnier@capgemini.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://monsoon-gitlab.iti.gr/cap-dev/faastapi"

[tool.poetry.dependencies]
python = "^3.6"
fastapi = "^0.33.0"
uvicorn = "^0.8.6"
# Command line interface and template rendering
click = { version = "^7.0", optional = true }
pyyaml = { version = "^5.1", optional = true }
jinja2 = { version = "^2.10", optional = true }
# Authentication toolkit
PyJWT = { version = "^1.7", optional = true }
passlib = { version = "^1.7", optional = true }
python-multipart = { version = "^0.0.5", optional = true }
bcrypt = { version = "^3.1", optional = true }
# Synchronous SQL databases clients
sqlalchemy = {version = "^1.3",optional = true}
mysqlclient = {version = "^1.4",optional = true}
psycopg2 = {version = "^2.8",optional = true}
# Asynchronous SQL databases clients
databases = { version = "^0.2.5", optional = true }
asyncpg = { version = "^0.18.3", optional = true }
aiomysql = { version = "^0.0.20", optional = true }
aiosqlite = { version = "^0.10.0", optional = true }
# MongoDB client
pymongo = { version = "^3.8", optional = true }

[tool.poetry.extras]
cli = ["click", "pyyaml", "jinja2"]
sqlite = ["sqlalchemy"]
mysql = ["sqlalchemy", "mysqlclient"]
postgres = ["sqlalchemy", "psycopg2"]
async-mysql = ["databases", "aiomysql"]
async-postgres = ["databases", "asyncpg"]
async-sqlite = ["databases", "aiosqlite"]
mongodb = ["pymongo"]
oauth = ["bcrypt", "passlib", "python-multipart", "pyjwt"]
all = ["click", "pyyaml", "jinja2", "sqlalchemy", "mysqlclient", "psycopg2", "aiomysql", "asyncpg", "aiosqlite", "pymongo", "bcrypt", "passlib", "python-multipart", "pyjwt"]

[tool.poetry.dev-dependencies]
pytest = "^5.0"
flake8 = "^3.7"
pytest-coverage = "^0.0.0"
black = {version = "^18.3-alpha.0",allows-prereleases = true}
uvicorn = "^0.8.6"
pre-commit = "^1.18"
bandit = "^1.6"

[tool.poetry.scripts]
faastapi = "faastapi.cli.cli:entry_point"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
