# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DatasetRequestDto(Model):
    """DatasetRequestDto.

    :param data_path:
    :type data_path: ~_restclient.models.DataPathDto
    :param excel:
    :type excel: ~_restclient.models.ExcelSection
    :param json:
    :type json: ~_restclient.models.JsonSection
    :param general:
    :type general: ~_restclient.models.GeneralSection
    :param source_properties:
    :type source_properties: ~_restclient.models.DataSourceProperties
    :param columns_to_remove:
    :type columns_to_remove: list[str]
    :param schema:
    :type schema: list[~_restclient.models.ColumnType]
    :param notes:
    :type notes: str
    :param name:
    :type name: str
    :param description:
    :type description: str
    :param tags:
    :type tags: dict[str, str]
    :param is_visible:
    :type is_visible: bool
    :param default_compute:
    :type default_compute: str
    """

    _attribute_map = {
        'data_path': {'key': 'dataPath', 'type': 'DataPathDto'},
        'excel': {'key': 'excel', 'type': 'ExcelSection'},
        'json': {'key': 'json', 'type': 'JsonSection'},
        'general': {'key': 'general', 'type': 'GeneralSection'},
        'source_properties': {'key': 'sourceProperties', 'type': 'DataSourceProperties'},
        'columns_to_remove': {'key': 'columnsToRemove', 'type': '[str]'},
        'schema': {'key': 'schema', 'type': '[ColumnType]'},
        'notes': {'key': 'notes', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'tags': {'key': 'tags', 'type': '{str}'},
        'is_visible': {'key': 'isVisible', 'type': 'bool'},
        'default_compute': {'key': 'defaultCompute', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(DatasetRequestDto, self).__init__(**kwargs)
        self.data_path = kwargs.get('data_path', None)
        self.excel = kwargs.get('excel', None)
        self.json = kwargs.get('json', None)
        self.general = kwargs.get('general', None)
        self.source_properties = kwargs.get('source_properties', None)
        self.columns_to_remove = kwargs.get('columns_to_remove', None)
        self.schema = kwargs.get('schema', None)
        self.notes = kwargs.get('notes', None)
        self.name = kwargs.get('name', None)
        self.description = kwargs.get('description', None)
        self.tags = kwargs.get('tags', None)
        self.is_visible = kwargs.get('is_visible', None)
        self.default_compute = kwargs.get('default_compute', None)
