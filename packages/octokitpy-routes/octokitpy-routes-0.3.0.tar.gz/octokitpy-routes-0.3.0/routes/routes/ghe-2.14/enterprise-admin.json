[
  {
    "name": "Get statistics",
    "enabledForApps": false,
    "method": "GET",
    "path": "/enterprise/stats/:type",
    "previews": [],
    "params": [
      {
        "name": "type",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "There are a variety of types to choose from:\n\n| Type         | Description                                                                                         |\n| ------------ | --------------------------------------------------------------------------------------------------- |\n| `issues`     | The number of open and closed issues.                                                               |\n| `hooks`      | The number of active and inactive hooks.                                                            |\n| `milestones` | The number of open and closed milestones.                                                           |\n| `orgs`       | The number of organizations, teams, team members, and disabled organizations.                       |\n| `comments`   | The number of comments on issues, pull requests, commits, and gists.                                |\n| `pages`      | The number of GitHub Pages sites.                                                                   |\n| `users`      | The number of suspended and admin users.                                                            |\n| `gists`      | The number of private and public gists.                                                             |\n| `pulls`      | The number of merged, mergeable, and unmergeable pull requests.                                     |\n| `repos`      | The number of organization-owned repositories, root repositories, forks, pushed commits, and wikis. |\n| `all`        | All of the statistics listed above.                                                                 |\n\nThese statistics are cached and will be updated approximately every 10 minutes.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "repos": {
            "total_repos": 212,
            "root_repos": 194,
            "fork_repos": 18,
            "org_repos": 51,
            "total_pushes": 3082,
            "total_wikis": 15
          },
          "hooks": {
            "total_hooks": 27,
            "active_hooks": 23,
            "inactive_hooks": 4
          },
          "pages": {
            "total_pages": 36
          },
          "orgs": {
            "total_orgs": 33,
            "disabled_orgs": 0,
            "total_teams": 60,
            "total_team_members": 314
          },
          "users": {
            "total_users": 254,
            "admin_users": 45,
            "suspended_users": 21
          },
          "pulls": {
            "total_pulls": 86,
            "merged_pulls": 60,
            "mergeable_pulls": 21,
            "unmergeable_pulls": 3
          },
          "issues": {
            "total_issues": 179,
            "open_issues": 83,
            "closed_issues": 96
          },
          "milestones": {
            "total_milestones": 7,
            "open_milestones": 6,
            "closed_milestones": 1
          },
          "gists": {
            "total_gists": 178,
            "private_gists": 151,
            "public_gists": 25
          },
          "comments": {
            "total_commit_comments": 6,
            "total_gist_comments": 28,
            "total_issue_comments": 366,
            "total_pull_request_comments": 30
          }
        }
      }
    ],
    "idName": "get-type-stats",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/admin_stats/#get-statistics"
  },
  {
    "name": "List global hooks",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/hooks",
    "previews": [
      {
        "name": "superpro",
        "description": "**Note:** The [Global Webhooks API](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.superpro-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "type": "Global",
            "id": 1,
            "name": "web",
            "active": true,
            "events": [
              "organization",
              "user"
            ],
            "config": {
              "url": "https://example.com",
              "content_type": "json",
              "insecure_ssl": "0",
              "secret": "********"
            },
            "updated_at": "2017-12-07T00:14:59Z",
            "created_at": "2017-12-07T00:14:59Z",
            "url": "https://api.github.com/admin/hooks/1",
            "ping_url": "https://api.github.com/admin/hooks/1/pings"
          }
        ]
      }
    ],
    "idName": "list-global-hooks",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#list-global-hooks"
  },
  {
    "name": "Get single global hook",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/hooks/:hook_id",
    "previews": [
      {
        "name": "superpro",
        "description": "**Note:** The [Global Webhooks API](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.superpro-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "Global",
          "id": 1,
          "name": "web",
          "active": true,
          "events": [
            "organization",
            "user"
          ],
          "config": {
            "url": "https://example.com",
            "content_type": "json",
            "insecure_ssl": "0",
            "secret": "********"
          },
          "updated_at": "2017-12-07T00:14:59Z",
          "created_at": "2017-12-07T00:14:59Z",
          "url": "https://api.github.com/admin/hooks/1",
          "ping_url": "https://api.github.com/admin/hooks/1/pings"
        }
      }
    ],
    "idName": "get-global-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#get-single-global-hook"
  },
  {
    "name": "Create a global hook",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/hooks",
    "previews": [
      {
        "name": "superpro",
        "description": "**Note:** The [Global Webhooks API](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.superpro-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "Must be passed as \"web\".",
        "required": true,
        "location": "body"
      },
      {
        "name": "config",
        "type": "object",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#create-hook-config-params).",
        "required": true,
        "location": "body"
      },
      {
        "name": "config.url",
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "required": true,
        "location": "body"
      },
      {
        "name": "config.content_type",
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.secret",
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.14/webhooks/#delivery-headers) header.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.insecure_ssl",
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "required": false,
        "location": "body"
      },
      {
        "name": "events",
        "type": "string[]",
        "description": "The [events](https://developer.github.com/enterprise/2.14/v3/activity/events/types/) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events.",
        "default": "`user` and `organization`",
        "required": false,
        "location": "body"
      },
      {
        "name": "active",
        "type": "boolean",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "web",
        "events": [
          "organization",
          "user"
        ],
        "config": {
          "url": "https://example.com/webhook",
          "content_type": "json",
          "secret": "secret"
        }
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "Global",
          "id": 1,
          "name": "web",
          "active": true,
          "events": [
            "organization",
            "user"
          ],
          "config": {
            "url": "https://example.com",
            "content_type": "json",
            "insecure_ssl": "0",
            "secret": "********"
          },
          "updated_at": "2017-12-07T00:14:59Z",
          "created_at": "2017-12-07T00:14:59Z",
          "url": "https://api.github.com/admin/hooks/1",
          "ping_url": "https://api.github.com/admin/hooks/1/pings"
        }
      }
    ],
    "idName": "create-global-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#create-a-global-hook"
  },
  {
    "name": "Edit a global hook",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/hooks/:hook_id",
    "previews": [
      {
        "name": "superpro",
        "description": "**Note:** The [Global Webhooks API](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.superpro-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "config",
        "type": "object",
        "description": "Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#update-hook-config-params).",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.url",
        "type": "string",
        "description": "The URL to which the payloads will be delivered.",
        "required": true,
        "location": "body"
      },
      {
        "name": "config.content_type",
        "type": "string",
        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.secret",
        "type": "string",
        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/enterprise/2.14/webhooks/#delivery-headers) header.",
        "required": false,
        "location": "body"
      },
      {
        "name": "config.insecure_ssl",
        "type": "string",
        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
        "required": false,
        "location": "body"
      },
      {
        "name": "events",
        "type": "string[]",
        "description": "The [events](https://developer.github.com/enterprise/2.14/v3/activity/events/types/) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events.",
        "default": "`user` and `organization`",
        "required": false,
        "location": "body"
      },
      {
        "name": "active",
        "type": "boolean",
        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
        "default": true,
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "web",
        "events": [
          "organization"
        ],
        "config": {
          "url": "https://example.com/webhook"
        }
      }
    ],
    "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "type": "Global",
          "id": 1,
          "name": "web",
          "active": true,
          "events": [
            "organization"
          ],
          "config": {
            "url": "https://example.com",
            "content_type": "form",
            "insecure_ssl": "0"
          },
          "updated_at": "2017-12-07T00:14:59Z",
          "created_at": "2017-12-07T00:14:59Z",
          "url": "https://api.github.com/admin/hooks/1",
          "ping_url": "https://api.github.com/admin/hooks/1/pings"
        }
      }
    ],
    "idName": "update-global-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#edit-a-global-hook"
  },
  {
    "name": "Ping a global hook",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/hooks/:hook_id/pings",
    "previews": [
      {
        "name": "superpro",
        "description": "**Note:** The [Global Webhooks API](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.superpro-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "This will trigger a [ping event](https://developer.github.com/enterprise/2.14/webhooks/#ping-event) to be sent to the hook.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "ping-global-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#ping-a-global-hook"
  },
  {
    "name": "Delete a global hook",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/hooks/:hook_id",
    "previews": [
      {
        "name": "superpro",
        "description": "**Note:** The [Global Webhooks API](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.superpro-preview+json\n\n```",
        "required": true
      }
    ],
    "params": [
      {
        "name": "hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-global-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/global_webhooks/#delete-a-global-hook"
  },
  {
    "name": "Update LDAP mapping for a user",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/ldap/users/:username/mapping",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ldap_dn",
        "type": "string",
        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com",
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        }
      }
    ],
    "idName": "update-ldap-mapping-for-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user"
  },
  {
    "name": "Sync LDAP mapping for a user",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/ldap/users/:username/sync",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "status": "queued"
        }
      }
    ],
    "idName": "sync-ldap-mapping-for-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-user"
  },
  {
    "name": "Update LDAP mapping for a team",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/ldap/teams/:team_id/mapping",
    "previews": [
      {
        "name": "hellcat",
        "description": "**Note:** The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://developer.github.com/enterprise/2.14/v3/media) in the `Accept` header:\n\n```\napplication/vnd.github.hellcat-preview+json\n\n```",
        "required": false
      }
    ],
    "params": [
      {
        "name": "team_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "ldap_dn",
        "type": "string",
        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com"
      }
    ],
    "description": "Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create team](https://developer.github.com/enterprise/2.14/v3/teams/#create-team) endpoint to create a team with LDAP mapping.\n\nIf you pass the `hellcat-preview` media type, you can also update the LDAP mapping of a child team.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com",
          "id": 1,
          "node_id": "MDQ6VGVhbTE=",
          "url": "https://api.github.com/teams/1",
          "name": "Justice League",
          "slug": "justice-league",
          "description": "A great team.",
          "privacy": "closed",
          "permission": "admin",
          "members_url": "https://api.github.com/teams/1/members{/member}",
          "repositories_url": "https://api.github.com/teams/1/repos",
          "parent": null
        }
      }
    ],
    "idName": "update-ldap-mapping-for-team",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-team"
  },
  {
    "name": "Sync LDAP mapping for a team",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/ldap/teams/:team_id/sync",
    "previews": [],
    "params": [
      {
        "name": "team_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "status": "queued"
        }
      }
    ],
    "idName": "sync-ldap-mapping-for-team",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/ldap/#sync-ldap-mapping-for-a-team"
  },
  {
    "name": "Get license information",
    "enabledForApps": false,
    "method": "GET",
    "path": "/enterprise/settings/license",
    "previews": [],
    "params": [],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "seats": 1400,
          "seats_used": 1316,
          "seats_available": 84,
          "kind": "standard",
          "days_until_expiration": 365,
          "expire_at": "2016/02/06 12:41:52 -0600"
        }
      }
    ],
    "idName": "get-license-information",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/license/#get-license-information"
  },
  {
    "name": "Upload a license for the first time",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/start",
    "previews": [],
    "params": [
      {
        "name": "license",
        "type": "string",
        "description": "The content of your _.ghl_ license file.",
        "required": true,
        "location": "body"
      },
      {
        "name": "password",
        "type": "string",
        "description": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
        "required": false,
        "location": "body"
      },
      {
        "name": "settings",
        "type": "string",
        "description": "An optional JSON string containing the installation settings.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "When you boot a GitHub Enterprise instance for the first time, you can use the following endpoint to upload a license:\n\nNote that you need to POST to [`/setup/api/configure`](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your GitHub Enterprise instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\nFor a list of the available settings, see the [Retrieve settings endpoint](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#retrieve-settings).",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "upload-license-for-first-time",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#upload-a-license-for-the-first-time"
  },
  {
    "name": "Upgrade a license",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/upgrade",
    "previews": [],
    "params": [
      {
        "name": "license",
        "type": "string",
        "description": "The content of your new _.ghl_ license file.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "This API upgrades your license and also triggers the configuration process:",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "upgrade-license",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#upgrade-a-license"
  },
  {
    "name": "Check configuration status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/configcheck",
    "previews": [],
    "params": [],
    "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "status": "running",
          "progress": [
            {
              "status": "DONE",
              "key": "Appliance core components"
            },
            {
              "status": "DONE",
              "key": "GitHub utilities"
            },
            {
              "status": "DONE",
              "key": "GitHub applications"
            },
            {
              "status": "CONFIGURING",
              "key": "GitHub services"
            },
            {
              "status": "PENDING",
              "key": "Reloading appliance services"
            }
          ]
        }
      }
    ],
    "idName": "check-configuration-status",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#check-configuration-status"
  },
  {
    "name": "Start a configuration process",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/configure",
    "previews": [],
    "params": [],
    "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "start-configuration-process",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#start-a-configuration-process"
  },
  {
    "name": "Retrieve settings",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/settings",
    "previews": [],
    "params": [],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "enterprise": {
            "private_mode": false,
            "public_pages": false,
            "subdomain_isolation": true,
            "signup_enabled": false,
            "github_hostname": "ghe.local",
            "identicons_host": "dotcom",
            "http_proxy": null,
            "auth_mode": "default",
            "expire_sessions": false,
            "admin_password": null,
            "configuration_id": 1401777404,
            "configuration_run_count": 4,
            "avatar": {
              "enabled": false,
              "uri": ""
            },
            "customer": {
              "name": "GitHub",
              "email": "stannis@themannis.biz",
              "uuid": "af6cac80-e4e1-012e-d822-1231380e52e9",
              "secret_key_data": "-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nlQcYBE5TCgsBEACk4yHpUcapplebaumBMXYMiLF+nCQ0lxpx...\n-----END PGP PRIVATE KEY BLOCK-----\n",
              "public_key_data": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nmI0ETqzZYgEEALSe6snowdenXyqvLfSQ34HWD6C7....\n-----END PGP PUBLIC KEY BLOCK-----\n"
            },
            "license": {
              "seats": 0,
              "evaluation": false,
              "perpetual": false,
              "unlimited_seating": true,
              "support_key": "ssh-rsa AAAAB3N....",
              "ssh_allowed": true,
              "cluster_support": false,
              "expire_at": "2016-04-27T00:00:00-07:00"
            },
            "github_ssl": {
              "enabled": false,
              "cert": null,
              "key": null
            },
            "ldap": {
              "host": null,
              "port": 0,
              "base": [],
              "uid": null,
              "bind_dn": null,
              "password": null,
              "method": "Plain",
              "search_strategy": "detect",
              "user_groups": [],
              "admin_group": null,
              "virtual_attribute_enabled": false,
              "recursive_group_search": false,
              "posix_support": true,
              "user_sync_emails": false,
              "user_sync_keys": false,
              "user_sync_interval": 4,
              "team_sync_interval": 4,
              "sync_enabled": false,
              "reconciliation": {
                "user": null,
                "org": null
              },
              "profile": {
                "uid": "uid",
                "name": null,
                "mail": null,
                "key": null
              }
            },
            "cas": {
              "url": null
            },
            "saml": {
              "sso_url": null,
              "certificate": null,
              "certificate_path": null,
              "issuer": null,
              "idp_initiated_sso": false,
              "disable_admin_demote": false
            },
            "github_oauth": {
              "client_id": "12313412",
              "client_secret": "kj123131132",
              "organization_name": "Homestar Runners",
              "organization_team": "homestarrunners/characters"
            },
            "smtp": {
              "smtp": {
                "enabled": true,
                "address": "smtp.example.com",
                "authentication": "plain",
                "port": "1234",
                "domain": "blah",
                "username": "foo",
                "user_name": "mr_foo",
                "enable_starttls_auto": true,
                "password": "bar",
                "smtp.discard-to-noreply-address": true,
                "support_address": "enterprise@github.com",
                "support_address_type": "email",
                "noreply_address": "noreply@github.com"
              }
            },
            "ntp": {
              "primary_server": "0.pool.ntp.org",
              "secondary_server": "1.pool.ntp.org"
            },
            "timezone": null,
            "snmp": {
              "enabled": false,
              "community": ""
            },
            "syslog": {
              "enabled": false,
              "server": null,
              "protocol_name": "udp"
            },
            "assets": null,
            "pages": {
              "enabled": true
            },
            "collectd": {
              "enabled": false,
              "server": null,
              "port": 0,
              "encryption": null,
              "username": null,
              "password": null
            },
            "mapping": {
              "enabled": true,
              "tileserver": null,
              "basemap": "company.map-qsz2zrvs",
              "token": null
            },
            "load_balancer": null
          },
          "run_list": [
            "recipe[enterprise-configure]"
          ]
        }
      }
    ],
    "idName": "retrieve-settings",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#retrieve-settings"
  },
  {
    "name": "Modify settings",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/setup/api/settings",
    "previews": [],
    "params": [
      {
        "name": "settings",
        "type": "string",
        "description": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "For a list of the available settings, see the [Retrieve settings endpoint](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#retrieve-settings).",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "modify-settings",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#modify-settings"
  },
  {
    "name": "Check maintenance status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/maintenance",
    "previews": [],
    "params": [],
    "description": "Check your installation's maintenance status:",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "status": "scheduled",
          "scheduled_time": "Tuesday, January 22 at 15 => 34 -0800",
          "connection_services": [
            {
              "name": "git operations",
              "number": 0
            },
            {
              "name": "mysql queries",
              "number": 233
            },
            {
              "name": "resque jobs",
              "number": 54
            }
          ]
        }
      }
    ],
    "idName": "check-maintenance-status",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#check-maintenance-status"
  },
  {
    "name": "Enable or disable maintenance mode",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/maintenance",
    "previews": [],
    "params": [
      {
        "name": "maintenance",
        "type": "string",
        "description": "A JSON string with the attributes `enabled` and `when`.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "The possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "status": "scheduled",
          "scheduled_time": "Tuesday, January 22 at 15 => 34 -0800",
          "connection_services": [
            {
              "name": "git operations",
              "number": 0
            },
            {
              "name": "mysql queries",
              "number": 233
            },
            {
              "name": "resque jobs",
              "number": 54
            }
          ]
        }
      }
    ],
    "idName": "enable-or-disable-maintenance-mode",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#enable-or-disable-maintenance-mode"
  },
  {
    "name": "Retrieve authorized SSH keys",
    "enabledForApps": false,
    "method": "GET",
    "path": "/setup/api/settings/authorized-keys",
    "previews": [],
    "params": [],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          },
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          }
        ]
      }
    ],
    "idName": "retrieve-authorized-ssh-keys",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#retrieve-authorized-ssh-keys"
  },
  {
    "name": "Add a new authorized SSH key",
    "enabledForApps": false,
    "method": "POST",
    "path": "/setup/api/settings/authorized-keys",
    "previews": [],
    "params": [
      {
        "name": "authorized_key",
        "type": "string",
        "description": "The path to the public SSH key.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          },
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          },
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          }
        ]
      }
    ],
    "idName": "add-authorized-ssh-key",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#add-a-new-authorized-ssh-key"
  },
  {
    "name": "Remove an authorized SSH key",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/setup/api/settings/authorized-keys",
    "previews": [],
    "params": [
      {
        "name": "authorized_key",
        "type": "string",
        "description": "The path to the public SSH key.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": [
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          },
          {
            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
          }
        ]
      }
    ],
    "idName": "remove-authorized-ssh-key",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/management_console/#remove-an-authorized-ssh-key"
  },
  {
    "name": "List pre-receive hooks for organization",
    "enabledForApps": true,
    "method": "GET",
    "path": "/orgs/:org/pre-receive-hooks",
    "previews": [],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.",
    "idName": "list-pre-receive-hooks-for-org",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/org_pre_receive_hooks/#list-pre-receive-hooks"
  },
  {
    "name": "Get a single pre-receive hook for organization",
    "enabledForApps": true,
    "method": "GET",
    "path": "/orgs/:org/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "get-pre-receive-hook-for-org",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/org_pre_receive_hooks/#get-a-single-pre-receive-hook"
  },
  {
    "name": "Update pre-receive hook enforcement for organization",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/orgs/:org/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "requests": [
      {
        "enforcement": "enabled",
        "allow_downstream_configuration": false
      }
    ],
    "description": "For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 42,
          "name": "Check Commits",
          "enforcement": "enabled",
          "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
          "allow_downstream_configuration": false
        }
      }
    ],
    "idName": "update-pre-receive-hook-enforcement-for-org",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/org_pre_receive_hooks/#update-pre-receive-hook-enforcement"
  },
  {
    "name": "Remove enforcement overrides for a pre-receive hook for organization",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/orgs/:org/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Removes any overrides for this hook at the org level for this org.",
    "idName": "remove-enforcement-overrides-for-pre-receive-hook-for-org",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/org_pre_receive_hooks/#remove-enforcement-overrides-for-a-pre-receive-hook"
  },
  {
    "name": "Create an organization",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/organizations",
    "previews": [],
    "params": [
      {
        "name": "login",
        "type": "string",
        "description": "The organization's username.",
        "required": true,
        "location": "body"
      },
      {
        "name": "admin",
        "type": "string",
        "description": "The login of the user who will manage this organization.",
        "required": true,
        "location": "body"
      },
      {
        "name": "profile_name",
        "type": "string",
        "description": "The organization's display name.",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "login": "github",
        "profile_name": "GitHub, Inc.",
        "admin": "monalisaoctocat"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "login": "github",
          "id": 1,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
          "url": "https://api.github.com/orgs/github",
          "repos_url": "https://api.github.com/orgs/github/repos",
          "events_url": "https://api.github.com/orgs/github/events",
          "hooks_url": "https://api.github.com/orgs/github/hooks",
          "issues_url": "https://api.github.com/orgs/github/issues",
          "members_url": "https://api.github.com/orgs/github/members{/member}",
          "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "description": "A great organization"
        }
      }
    ],
    "idName": "create-org",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/orgs/#create-an-organization"
  },
  {
    "name": "Rename an organization",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/organizations/:org",
    "previews": [],
    "params": [
      {
        "name": "org",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "login",
        "type": "string",
        "description": "The organization's new name.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "login": "the-new-octocats"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Job queued to rename organization. It may take a few minutes to complete.",
          "url": "https://<hostname>/api/v3/organizations/1"
        }
      }
    ],
    "idName": "rename-org",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/orgs/#rename-an-organization"
  },
  {
    "name": "Get a single pre-receive environment",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-environments/:pre_receive_environment_id",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_environment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "get-pre-receive-environment",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#get-a-single-pre-receive-environment"
  },
  {
    "name": "List pre-receive environments",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-environments",
    "previews": [],
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-pre-receive-environments",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#list-pre-receive-environments"
  },
  {
    "name": "Create a pre-receive environment",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/pre-receive-environments",
    "previews": [],
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "The new pre-receive environment's name.",
        "required": true,
        "location": "body"
      },
      {
        "name": "image_url",
        "type": "string",
        "description": "URL from which to download a tarball of this environment.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "DevTools Hook Env",
        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 2,
          "name": "DevTools Hook Env",
          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2",
          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
          "default_environment": false,
          "created_at": "2016-05-20T11:35:45-05:00",
          "hooks_count": 1,
          "download": {
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest",
            "state": "not_started",
            "downloaded_at": null,
            "message": null
          }
        }
      }
    ],
    "idName": "create-pre-receive-environment",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#create-a-pre-receive-environment"
  },
  {
    "name": "Edit a pre-receive environment",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/pre-receive-environments/:pre_receive_environment_id",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_environment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "name",
        "type": "string",
        "description": "This pre-receive environment's new name.",
        "required": false,
        "location": "body"
      },
      {
        "name": "image_url",
        "type": "string",
        "description": "URL from which to download a tarball of this environment.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "If you attempt to modify the default environment, you will get a response like this:",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 2,
          "name": "DevTools Hook Env",
          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2",
          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
          "default_environment": false,
          "created_at": "2016-05-20T11:35:45-05:00",
          "hooks_count": 1,
          "download": {
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest",
            "state": "success",
            "downloaded_at": "2016-05-26T07:42:53-05:00",
            "message": null
          }
        }
      }
    ],
    "idName": "update-pre-receive-environment",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#edit-a-pre-receive-environment"
  },
  {
    "name": "Delete a pre-receive environment",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/pre-receive-environments/:pre_receive_environment_id",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_environment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "If you attempt to delete an environment that cannot be deleted, you will get a response like this:\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-pre-receive-environment",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#delete-a-pre-receive-environment"
  },
  {
    "name": "Get a pre-receive environment's download status",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-environments/:pre_receive_environment_id/downloads/latest",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_environment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "state",
        "type": "string",
        "description": "The state of the most recent download.",
        "required": false,
        "location": "query"
      },
      {
        "name": "downloaded_at",
        "type": "string",
        "description": "The time when the most recent download started.",
        "required": false,
        "location": "query"
      },
      {
        "name": "message",
        "type": "string",
        "description": "On failure, this will have any error messages produced.",
        "required": false,
        "location": "query"
      }
    ],
    "description": "In addition to seeing the download status at the `/admin/pre-receive-environments/:pre_receive_environment_id`, there is also a separate endpoint for just the status.\n\nPossible values for `state` are `not_started`, `in_progress`, `success`, `failed`.",
    "idName": "get-pre-receive-environment-download-status",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#get-a-pre-receive-environments-download-status"
  },
  {
    "name": "Trigger a pre-receive environment download",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/pre-receive-environments/:pre_receive_environment_id/downloads",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_environment_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will get a reponse like this:\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Can not start a new download when a download is in progress_",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest",
          "state": "not_started",
          "downloaded_at": null,
          "message": null
        }
      }
    ],
    "idName": "trigger-pre-receive-environment-download",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_environments/#trigger-a-pre-receive-environment-download"
  },
  {
    "name": "Get a single pre-receive hook",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "get-pre-receive-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_hooks/#get-a-single-pre-receive-hook"
  },
  {
    "name": "List pre-receive hooks",
    "enabledForApps": false,
    "method": "GET",
    "path": "/admin/pre-receive-hooks",
    "previews": [],
    "params": [
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "",
    "idName": "list-pre-receive-hooks",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_hooks/#list-pre-receive-hooks"
  },
  {
    "name": "Create a pre-receive hook",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/pre-receive-hooks",
    "previews": [],
    "params": [
      {
        "name": "name",
        "type": "string",
        "description": "The name of the hook.",
        "required": true,
        "location": "body"
      },
      {
        "name": "script",
        "type": "string",
        "description": "The script that the hook runs.",
        "required": true,
        "location": "body"
      },
      {
        "name": "script_repository",
        "type": "object",
        "description": "The GitHub repository where the script is kept.",
        "required": true,
        "location": "body"
      },
      {
        "name": "environment",
        "type": "object",
        "description": "The pre-receive environment where the script is executed.",
        "required": true,
        "location": "body"
      },
      {
        "name": "enforcement",
        "type": "string",
        "description": "The state of enforcement for this hook. default: `disabled`",
        "required": false,
        "location": "body"
      },
      {
        "name": "allow_downstream_configuration",
        "type": "boolean",
        "description": "Whether enforcement can be overridden at the org or repo level. default: `false`",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "name": "Check Commits",
        "script": "scripts/commit_check.sh",
        "enforcement": "disabled",
        "allow_downstream_configuration": false,
        "script_repository": {
          "full_name": "DevIT/hooks"
        },
        "environment": {
          "id": 2
        }
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1,
          "name": "Check Commits",
          "enforcement": "disabled",
          "script": "scripts/commmit_check.sh",
          "script_repository": {
            "id": 595,
            "full_name": "DevIT/hooks",
            "url": "https://github.example.com/api/v3/repos/DevIT/hooks",
            "html_url": "https://github.example.com/DevIT/hooks"
          },
          "environment": {
            "id": 2,
            "name": "DevTools Hook Env",
            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2",
            "html_url": "https://github.example.com/admin/pre-receive-environments/2",
            "default_environment": false,
            "created_at": "2016-05-20T11:35:45-05:00",
            "hooks_count": 1,
            "download": {
              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest",
              "state": "success",
              "downloaded_at": "2016-05-26T07:42:53-05:00",
              "message": null
            }
          },
          "allow_downstream_configuration": false
        }
      }
    ],
    "idName": "create-pre-receive-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_hooks/#create-a-pre-receive-hook"
  },
  {
    "name": "Edit a pre-receive hook",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/pre_receive_hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "requests": [
      {
        "name": "Check Commits",
        "environment": {
          "id": 1
        },
        "allow_downstream_configuration": true
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1,
          "name": "Check Commits",
          "enforcement": "disabled",
          "script": "scripts/commmit_check.sh",
          "script_repository": {
            "id": 595,
            "full_name": "DevIT/hooks",
            "url": "https://github.example.com/api/v3/repos/DevIT/hooks",
            "html_url": "https://github.example.com/DevIT/hooks"
          },
          "environment": {
            "id": 1,
            "name": "Default",
            "image_url": "githubenterprise://internal",
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1",
            "html_url": "https://github.example.com/admin/pre-receive-environments/1",
            "default_environment": true,
            "created_at": "2016-05-20T11:35:45-05:00",
            "hooks_count": 1,
            "download": {
              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest",
              "state": "success",
              "downloaded_at": "2016-05-26T07:42:53-05:00",
              "message": null
            }
          },
          "allow_downstream_configuration": true
        }
      }
    ],
    "idName": "update-pre-receive-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_hooks/#edit-a-pre-receive-hook"
  },
  {
    "name": "Delete a pre-receive hook",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/pre_receive_hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-pre-receive-hook",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/pre_receive_hooks/#delete-a-pre-receive-hook"
  },
  {
    "name": "List pre-receive hooks for repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/pre-receive-hooks",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "per_page",
        "type": "integer",
        "required": false,
        "description": "Results per page (max 100)",
        "default": 30,
        "location": "query"
      },
      {
        "name": "page",
        "type": "integer",
        "required": false,
        "description": "Page number of the results to fetch.",
        "default": 1,
        "location": "query"
      }
    ],
    "description": "List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.",
    "idName": "list-pre-receive-hooks-for-repo",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/repo_pre_receive_hooks/#list-pre-receive-hooks"
  },
  {
    "name": "Get a single pre-receive hook for repository",
    "enabledForApps": true,
    "method": "GET",
    "path": "/repos/:owner/:repo/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "idName": "get-pre-receive-hook-for-repo",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/repo_pre_receive_hooks/#get-a-single-pre-receive-hook"
  },
  {
    "name": "Update pre-receive hook enforcement for repository",
    "enabledForApps": true,
    "method": "PATCH",
    "path": "/repos/:owner/:repo/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "requests": [
      {
        "enforcement": "enabled"
      }
    ],
    "description": "For pre-receive hooks which are allowed to be configured at the repo level, you can set `enforcement`",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 42,
          "name": "Check Commits",
          "enforcement": "enabled",
          "configuration_url": "https://github.example.com/api/v3/repos/octocat/hello-world/pre-receive-hooks/42"
        }
      }
    ],
    "idName": "update-pre-receive-hook-enforcement-for-repo",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/repo_pre_receive_hooks/#update-pre-receive-hook-enforcement"
  },
  {
    "name": "Remove enforcement overrides for a pre-receive hook for repository",
    "enabledForApps": true,
    "method": "DELETE",
    "path": "/repos/:owner/:repo/pre-receive-hooks/:pre_receive_hook_id",
    "previews": [],
    "params": [
      {
        "name": "owner",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "repo",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "pre_receive_hook_id",
        "type": "integer",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Deletes any overridden enforcement on this repository for the specified hook.\n\nResponds with effective values inherited from owner and/or global level.",
    "responses": [
      {
        "headers": {
          "status": "200 OK",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 42,
          "name": "Check Commits",
          "enforcement": "disabled",
          "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42"
        },
        "description": "Responds with effective values inherited from owner and/or global level."
      }
    ],
    "idName": "remove-enforcement-overrides-for-pre-receive-hook-for-repo",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/repo_pre_receive_hooks/#remove-enforcement-overrides-for-a-pre-receive-hook"
  },
  {
    "name": "Queue an indexing job",
    "enabledForApps": false,
    "method": "POST",
    "path": "/staff/indexing_jobs",
    "previews": [],
    "params": [
      {
        "name": "target",
        "type": "string",
        "description": "A string representing the item to index.",
        "required": true,
        "location": "body"
      }
    ],
    "description": "You can index the following targets (replace `:owner` with the name of a user or organization account and `:repository` with the name of a repository):\n\n| Target                      | Description                                                          |\n| --------------------------- | -------------------------------------------------------------------- |\n| `:owner`                    | A user or organization account.                                      |\n| `:owner/:repository`        | A repository.                                                        |\n| `:owner/*`                  | All of a user or organization's repositories.                        |\n| `:owner/:repository/issues` | All the issues in a repository.                                      |\n| `:owner/*/issues`           | All the issues in all of a user or organization's repositories.      |\n| `:owner/:repository/code`   | All the source code in a repository.                                 |\n| `:owner/*/code`             | All the source code in all of a user or organization's repositories. |",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Repository 'kansaichris/japaning' has been added to the indexing queue"
        }
      }
    ],
    "idName": "queue-indexing-job",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/search_indexing/#queue-an-indexing-job"
  },
  {
    "name": "Create a new user",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/users",
    "previews": [],
    "params": [
      {
        "name": "login",
        "type": "string",
        "description": "The user's username.",
        "required": true,
        "location": "body"
      },
      {
        "name": "email",
        "type": "string",
        "description": "**Required for built-in authentication.** The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the [GitHub Enterprise authentication guide](https://help.github.com/enterprise/2.14/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/).",
        "required": false,
        "location": "body"
      }
    ],
    "requests": [
      {
        "login": "monalisa",
        "email": "octocat@github.com"
      }
    ],
    "description": "If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/ldap/#update-ldap-mapping-for-a-user) for the user.\n\nThe login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `\"octo_cat\"` as the login, a user named `\"octo-cat\"` will be created.\n\nIf the login name or email address is already associated with an account, the server will return a `422` response.",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "login": "octocat",
          "id": 1,
          "node_id": "MDQ6VXNlcjE=",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "gravatar_id": "",
          "url": "https://api.github.com/users/octocat",
          "html_url": "https://github.com/octocat",
          "followers_url": "https://api.github.com/users/octocat/followers",
          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
          "organizations_url": "https://api.github.com/users/octocat/orgs",
          "repos_url": "https://api.github.com/users/octocat/repos",
          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
          "received_events_url": "https://api.github.com/users/octocat/received_events",
          "type": "User",
          "site_admin": false
        }
      }
    ],
    "idName": "create-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#create-a-new-user"
  },
  {
    "name": "Rename an existing user",
    "enabledForApps": false,
    "method": "PATCH",
    "path": "/admin/users/:username",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "login",
        "type": "string",
        "description": "The user's new username.",
        "required": true,
        "location": "body"
      }
    ],
    "requests": [
      {
        "login": "thenewmonalisa"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "202 Accepted",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Job queued to rename user. It may take a few minutes to complete.",
          "url": "https://api.github.com/user/1"
        }
      }
    ],
    "idName": "rename-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#rename-an-existing-user"
  },
  {
    "name": "Delete a user",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/users/:username",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#delete-a-user"
  },
  {
    "name": "Create an impersonation OAuth token",
    "enabledForApps": false,
    "method": "POST",
    "path": "/admin/users/:username/authorizations",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "scopes",
        "type": "string[]",
        "description": "A list of [scopes](https://developer.github.com/enterprise/2.14/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
        "required": false,
        "location": "body"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "201 Created",
          "content-type": "application/json; charset=utf-8"
        },
        "body": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": [
            "public_repo"
          ],
          "token": "abcdefgh12345678",
          "token_last_eight": "12345678",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "fingerprint": "jklmnop12345678"
        }
      }
    ],
    "idName": "create-impersonation-o-auth-token",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#create-an-impersonation-oauth-token"
  },
  {
    "name": "Delete an impersonation OAuth token",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/users/:username/authorizations",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-impersonation-o-auth-token",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#delete-an-impersonation-oauth-token"
  },
  {
    "name": "Promote an ordinary user to a site administrator",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/users/:username/site_admin",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/enterprise/2.14/v3/#http-verbs).\"",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "promote-ordinary-user-to-site-administrator",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#promote-an-ordinary-user-to-a-site-administrator"
  },
  {
    "name": "Demote a site administrator to an ordinary user",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/users/:username/site_admin",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "You can demote any user account except your own.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "demote-site-administrator-to-ordinary-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#demote-a-site-administrator-to-an-ordinary-user"
  },
  {
    "name": "Suspend a user",
    "enabledForApps": false,
    "method": "PUT",
    "path": "/users/:username/suspended",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "reason",
        "type": "string",
        "description": "The reason the user is being suspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "If your GitHub Enterprise instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/enterprise/2.14/v3/#http-verbs).\"",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "suspend-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#suspend-a-user"
  },
  {
    "name": "Unsuspend a user",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/users/:username/suspended",
    "previews": [],
    "params": [
      {
        "name": "username",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      },
      {
        "name": "reason",
        "type": "string",
        "description": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
        "required": false,
        "location": "body"
      }
    ],
    "description": "If your GitHub Enterprise instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "unsuspend-user",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#unsuspend-a-user"
  },
  {
    "name": "Delete a public key",
    "enabledForApps": false,
    "method": "DELETE",
    "path": "/admin/keys/:key_ids",
    "previews": [],
    "params": [
      {
        "name": "key_ids",
        "type": "string",
        "required": true,
        "description": "",
        "location": "url"
      }
    ],
    "description": "",
    "responses": [
      {
        "headers": {
          "status": "204 No Content",
          "content-type": "application/json; charset=utf-8"
        }
      }
    ],
    "idName": "delete-public-key",
    "documentationUrl": "https://developer.github.com/enterprise/2.14/v3/enterprise-admin/users/#delete-a-public-key"
  }
]
