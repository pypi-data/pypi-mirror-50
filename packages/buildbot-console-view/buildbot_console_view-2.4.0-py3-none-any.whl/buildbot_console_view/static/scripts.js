!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular-animate"),require("@uirouter/angularjs"),require("guanlecoja-ui"),require("buildbot-data-js")):"function"==typeof define&&define.amd?define("buildbot-console-view",["angular-animate","@uirouter/angularjs","guanlecoja-ui","buildbot-data-js"],t):"object"==typeof exports?exports["buildbot-console-view"]=t(require("angular-animate"),require("@uirouter/angularjs"),require("guanlecoja-ui"),require("buildbot-data-js")):e["buildbot-console-view"]=t(e["angular-animate"],e["@uirouter/angularjs"],e["guanlecoja-ui"],e["buildbot-data-js"])}("undefined"!=typeof self?self:this,function(e,t,i,r){return function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=1)}([function(e,t,i){"use strict";var r=Object.prototype.hasOwnProperty;function n(e,t){return Array.isArray(e)?function(e,t){for(var i,r="",s="",a=Array.isArray(t),l=0;l<e.length;l++)(i=n(e[l]))&&(a&&t[l]&&(i=o(i)),r=r+s+i,s=" ");return r}(e,t):e&&"object"==typeof e?function(e){var t="",i="";for(var n in e)n&&e[n]&&r.call(e,n)&&(t=t+i+n,i=" ");return t}(e):e||""}function s(e){if(!e)return"";if("object"==typeof e){var t="";for(var i in e)r.call(e,i)&&(t=t+i+":"+e[i]+";");return t}return e+""}function a(e,t,i,r){if(!1===t||null==t||!t&&("class"===e||"style"===e))return"";if(!0===t)return" "+(r?e:e+'="'+e+'"');var n=typeof t;return"object"!==n&&"function"!==n||"function"!=typeof t.toJSON||(t=t.toJSON()),"string"==typeof t||(t=JSON.stringify(t),i||-1===t.indexOf('"'))?(i&&(t=o(t))," "+e+'="'+t+'"'):" "+e+"='"+t.replace(/'/g,"&#39;")+"'"}t.merge=function e(t,i){if(1===arguments.length){for(var r=t[0],n=1;n<t.length;n++)r=e(r,t[n]);return r}for(var a in i)if("class"===a){var l=t[a]||[];t[a]=(Array.isArray(l)?l:[l]).concat(i[a]||[])}else if("style"===a){var l=s(t[a]);l=l&&";"!==l[l.length-1]?l+";":l;var o=s(i[a]);o=o&&";"!==o[o.length-1]?o+";":o,t[a]=l+o}else t[a]=i[a];return t},t.classes=n,t.style=s,t.attr=a,t.attrs=function(e,t){var i="";for(var l in e)if(r.call(e,l)){var o=e[l];if("class"===l){o=n(o),i=a(l,o,!1,t)+i;continue}"style"===l&&(o=s(o)),i+=a(l,o,!1,t)}return i};var l=/["&<>]/;function o(e){var t=""+e,i=l.exec(t);if(!i)return e;var r,n,s,a="";for(r=i.index,n=0;r<t.length;r++){switch(t.charCodeAt(r)){case 34:s="&quot;";break;case 38:s="&amp;";break;case 60:s="&lt;";break;case 62:s="&gt;";break;default:continue}n!==r&&(a+=t.substring(n,r)),n=r+1,a+=s}return n!==r?a+t.substring(n,r):a}t.escape=o,t.rethrow=function e(t,r,n,s){if(!(t instanceof Error))throw t;if(!("undefined"==typeof window&&r||s))throw t.message+=" on line "+n,t;try{s=s||i(7).readFileSync(r,"utf8")}catch(i){e(t,null,n)}var a=3,l=s.split("\n"),o=Math.max(n-a,0),u=Math.min(l.length,n+a);var a=l.slice(o,u).map(function(e,t){var i=t+o+1;return(i==n?"  > ":"    ")+i+"| "+e}).join("\n");t.path=r;t.message=(r||"Pug")+":"+n+"\n"+a+"\n\n"+t.message;throw t}},function(e,t,i){"use strict";i.r(t);i(2),i(3),i(4),i(5);angular.module("console_view",["ui.router","ui.bootstrap","ngAnimate","guanlecoja.ui","bbData"]).config(["$stateProvider","glMenuServiceProvider","bbSettingsServiceProvider",class ConsoleState{constructor(e,t,r){var n="console";t.addGroup({name:n,caption:"Console View",icon:"exclamation-circle",order:5});var s={group:n,caption:"Console View"},a={controller:"".concat(n,"Controller"),controllerAs:"c",template:i(6),name:n,url:"/".concat(n),data:s};e.state(a),r.addSettingsGroup({name:"Console",caption:"Console related settings",items:[{type:"integer",name:"buildLimit",caption:"Number of builds to fetch",default_value:200},{type:"integer",name:"changeLimit",caption:"Number of changes to fetch",default_value:30}]})}}]).controller("consoleController",["$scope","$q","$window","dataService","bbSettingsService","resultsService","$uibModal","$timeout",class Console{constructor(e,t,i,r,n,s,a,l){this.onChange=this.onChange.bind(this),this._onChange=this._onChange.bind(this),this.matchBuildWithChange=this.matchBuildWithChange.bind(this),this.makeFakeChange=this.makeFakeChange.bind(this),this.$scope=e,this.$window=i,this.$uibModal=a,this.$timeout=l,angular.extend(this,s);var o=n.getSettingsGroup("Console");if(this.buildLimit=o.buildLimit.value,this.changeLimit=o.changeLimit.value,this.dataAccessor=r.open().closeOnDestroy(this.$scope),this._infoIsExpanded={},this.$scope.all_builders=this.all_builders=this.dataAccessor.getBuilders(),this.$scope.builders=this.builders=[],"undefined"!=typeof Intl&&null!==Intl){var u=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});this.strcompare=u.compare}else this.strcompare=function(e,t){return e<t?-1:e===t?0:1};this.$scope.builds=this.builds=this.dataAccessor.getBuilds({property:["got_revision"],limit:this.buildLimit,order:"-started_at"}),this.changes=this.dataAccessor.getChanges({limit:this.changeLimit,order:"-changeid"}),this.buildrequests=this.dataAccessor.getBuildrequests({limit:this.buildLimit,order:"-submitted_at"}),this.buildsets=this.dataAccessor.getBuildsets({limit:this.buildLimit,order:"-submitted_at"}),this.builds.onChange=this.changes.onChange=this.buildrequests.onChange=this.buildsets.onChange=this.onChange}onChange(e){if(0!==this.builds.length&&0!==this.all_builders.length&&this.changes.$resolved&&0!==this.buildsets.length&&0!==this.buildrequests)return null==this.onchange_debounce?this.onchange_debounce=this.$timeout(this._onChange,100):void 0}_onChange(){var e,t;this.onchange_debounce=void 0;for(var i=0,r=Array.from(this.builds);i<r.length;i++)e=r[i],this.all_builders.get(e.builderid).hasBuild=!0;this.sortBuildersByTags(this.all_builders),null==this.changesBySSID&&(this.changesBySSID={}),null==this.changesByRevision&&(this.changesByRevision={});for(var n=0,s=Array.from(this.changes);n<s.length;n++)t=s[n],this.changesBySSID[t.sourcestamp.ssid]=t,this.changesByRevision[t.revision]=t,this.populateChange(t);for(var a=0,l=Array.from(this.builds);a<l.length;a++)e=l[a],this.matchBuildWithChange(e);for(var o in this.filtered_changes=[],this.changesBySSID){(t=this.changesBySSID[o]).comments&&(t.subject=t.comments.split("\n")[0]);for(var u=0,d=Array.from(t.builders);u<d.length;u++)if(d[u].builds.length>0){this.filtered_changes.push(t);break}}}sortBuildersByTags(e){for(var t=[],i="",r=0,n=Array.from(e);r<n.length;r++){var s=n[r];s.hasBuild&&(t.push(s),i+=".".concat(s.builderid))}if(i!==this.last_builderids_with_builds){for(var a=this._sortBuildersByTags(t),l=[],o=[],u=function(e,t,i){var r=l[e];if(null==r)r=l[e]=[];else{var n=r[r.length-1];if(n.tag===t)return void(n.colspan+=i)}return r.push({tag:t,colspan:i})},d=this,c=function e(t,i){if(u(i,t.tag,t.builders.length),null!=t.tag_line&&0!==t.tag_line.length)return Array.from(t.tag_line).map(t=>e(t,i+1));t.builders.sort((e,t)=>d.strcompare(e.name,t.name)),o=o.concat(t.builders);for(var r=1;r<=100;r++)u(i+r,"",t.builders.length)},h=0,g=Array.from(a);h<g.length;h++)c(g[h],0);this.builders=o,this.tag_lines=[];for(var f=0,b=Array.from(l);f<b.length;f++)1===(a=b[f]).length&&""===a[0].tag||this.tag_lines.push(a);return this.last_builderids_with_builds=i}}_sortBuildersByTags(e){for(var t,i,r,n={},s=0,a=Array.from(e);s<a.length;s++)if(null!=(t=a[s]).tags)for(var l=0,o=Array.from(t.tags);l<o.length;l++)null==n[r=o[l]]&&(n[r]=[]),n[r].push(t);var u=[];for(r in n)(i=n[r]).length<e.length&&u.push({tag:r,builders:i});u.sort((e,t)=>t.builders.length-e.builders.length);for(var d=[],c={},h=0,g=Array.from(u);h<g.length;h++){r=g[h];for(var f=!1,b=0,p=Array.from(r.builders);b<p.length;b++)if(t=p[b],c.hasOwnProperty(t.builderid)){f=!0;break}if(!f){for(var m=0,v=Array.from(r.builders);m<v.length;m++)c[(t=v[m]).builderid]=r.tag;d.push(r)}}for(var y=[],_=0,w=Array.from(e);_<w.length;_++)t=w[_],c.hasOwnProperty(t.builderid)||y.push(t);if(y.length&&d.push({tag:"",builders:y}),d.length>1)for(var B=0,C=Array.from(d);B<C.length;B++)(r=C[B]).tag_line=this._sortBuildersByTags(r.builders);return d}populateChange(e){e.builders=[],e.buildersById={};for(var t=0,i=Array.from(this.builders);t<i.length;t++){var r=i[t];r={builderid:r.builderid,name:r.name,builds:[]},e.builders.push(r),e.buildersById[r.builderid]=r}}matchBuildWithChange(e){var t,i,r=this.buildrequests.get(e.buildrequestid);if(null!=r){var n=this.buildsets.get(r.buildsetid);if(null!=n){if(null!=n&&null!=n.sourcestamps)for(var s=0,a=Array.from(n.sourcestamps);s<a.length;s++){var l=a[s];if(null!=(t=this.changesBySSID[l.ssid]))break}if(null==t&&null!=(null!=e.properties?e.properties.got_revision:void 0)){var o=e.properties.got_revision[0];if("string"==typeof o)null==(t=this.changesByRevision[o])&&(t=this.makeFakeChange("",o,e.started_at));else{var u;for(u in o)if(i=o[u],null!=(t=this.changesByRevision[i]))break;null==t&&(i=o==={}?"":o[o.keys()[0]],t=this.makeFakeChange(u,i,e.started_at))}}return null==t&&(i="unknown revision ".concat(e.builderid,"-").concat(e.buildid),t=this.makeFakeChange("unknown codebase",i,e.started_at)),t.buildersById[e.builderid].builds.push(e)}}}makeFakeChange(e,t,i){var r=this.changesBySSID[t];return null==r&&(r={codebase:e,revision:t,changeid:t,when_timestamp:i,author:"unknown author for ".concat(t),comments:t+"\n\nFake comment for revision: No change for this revision, please setup a changesource in Buildbot"},this.changesBySSID[t]=r,this.populateChange(r)),r}openAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!0)}closeAll(){return Array.from(this.filtered_changes).map(e=>e.show_details=!1)}getRowHeaderWidth(){return this.hasExpanded()?400:200}getColHeaderHeight(){for(var e=0,t=0,i=Array.from(this.builders);t<i.length;t++){var r=i[t];e=Math.max(r.name.length,e)}return Math.max(100,3*e)}isBigTable(){var e=this.getRowHeaderWidth();return(this.$window.innerWidth-e)/this.builders.length<40}hasExpanded(){for(var e=0,t=Array.from(this.changes);e<t.length;e++){var i=t[e];if(this.infoIsExpanded(i))return!0}return!1}selectBuild(e){return this.$uibModal.open({template:i(8),controller:"consoleModalController as modal",windowClass:"modal-big",resolve:{selectedBuild:()=>e}})}toggleInfo(e){return e.show_details=!e.show_details}infoIsExpanded(e){return e.show_details}}]),i(9)},function(t,i){t.exports=e},function(e,i){e.exports=t},function(e,t){e.exports=i},function(e,t){e.exports=r},function(e,t,i){i(0);e.exports=function(e){var t="";return t+='<div class="console"><div class="load-indicator" ng-hide="c.builds.$resolved &amp;&amp; c.changes.$resolved &amp;&amp; c.buildrequests.$resolved &amp;&amp; c.buildsets.$resolved"><div class="spinner"><i class="fa fa-circle-o-notch fa-spin fa-2x"></i><p>loading</p></div></div><div ng-show="c.changes.$resolved &amp;&amp; c.filtered_changes.length==0"><p>No changes. Console view needs changesource to be setup, and<a href="#changes">changes</a>to be in the system.</p></div><table class="table table-striped table-bordered" ng-hide="c.filtered_changes.length==0" ng-class="{\'table-fixedwidth\': c.isBigTable()}"><tr class="first-row"><th class="row-header" ng-style="{\'width\': c.getRowHeaderWidth()}"><i class="fa fa-plus-circle pull-left" ng-click="c.openAll()" uib-tooltip="Open information for all changes" uib-tooltip-placement="right"></i><i class="fa fa-minus-circle pull-left" ng-click="c.closeAll()" uib-tooltip="Close information for all changes" uib-tooltip-placement="right"></i></th><th class="column" ng-repeat="builder in c.builders"><span class="builder" ng-style="{\'margin-top\': c.getColHeaderHeight()}"><a ng-href="#/builders/{{ builder.builderid }}" ng-bind="builder.name"></a></span></th></tr><tr class="tag_row" ng-repeat="tag_line in c.tag_lines"><td class="row-header"></td><td ng-repeat="tag in tag_line" colspan="{{tag.colspan}}"><span uib-tooltip="{{ tag.tag }}" ng-style="{width: tag.colspan*50}">{{tag.tag}}</span></td></tr><tr ng-repeat="change in c.filtered_changes | orderBy: [\'-when_timestamp\'] track by change.changeid"><td><changedetails change="change"></changedetails></td><td class="column" ng-repeat="builder in change.builders" title="{{builder.name}}"><a ng-repeat="build in builder.builds | orderBy: [\'number\']"><span class="badge-status" ng-if="build.buildid" ng-class="c.results2class(build, \'pulse\')" ng-click="c.selectBuild(build)">{{ build.number }}</span></a></td></tr></table></div>'}},function(e,t){},function(e,t,i){i(0);e.exports=function(e){var t="";return t+='\x3c!-- Show build summary for the selected build in a modal window--\x3e<div class="modal-header"><i class="fa fa-times pull-right" ng-click="modal.close()"></i><h4 class="modal-title">Build summary</h4></div><div class="modal-body"><buildsummary ng-if="modal.selectedBuild" buildid="modal.selectedBuild.buildid"></buildsummary></div>'}},function(e,t){angular.module("console_view").controller("consoleModalController",["$scope","$uibModalInstance","selectedBuild",class ConsoleModal{constructor(e,t,i){this.$uibModalInstance=t,this.selectedBuild=i,e.$on("$stateChangeStart",()=>this.close())}close(){return this.$uibModalInstance.close()}}])}])});
//# sourceMappingURL=scripts.js.map