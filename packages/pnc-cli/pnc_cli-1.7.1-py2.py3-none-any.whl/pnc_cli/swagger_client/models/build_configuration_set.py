# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from pprint import pformat
from six import iteritems


class BuildConfigurationSet(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        BuildConfigurationSet - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'name': 'str',
            'product_version': 'ProductVersion',
            'build_configurations': 'list[BuildConfiguration]',
            'build_config_set_records': 'list[BuildConfigSetRecord]',
            'current_product_milestone': 'ProductMilestone',
            'field_handler': 'FieldHandler'
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'product_version': 'productVersion',
            'build_configurations': 'buildConfigurations',
            'build_config_set_records': 'buildConfigSetRecords',
            'current_product_milestone': 'currentProductMilestone',
            'field_handler': 'fieldHandler'
        }

        self._id = None
        self._name = None
        self._product_version = None
        self._build_configurations = None
        self._build_config_set_records = None
        self._current_product_milestone = None
        self._field_handler = None

    @property
    def id(self):
        """
        Gets the id of this BuildConfigurationSet.


        :return: The id of this BuildConfigurationSet.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this BuildConfigurationSet.


        :param id: The id of this BuildConfigurationSet.
        :type: int
        """
        self._id = id

    @property
    def name(self):
        """
        Gets the name of this BuildConfigurationSet.


        :return: The name of this BuildConfigurationSet.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this BuildConfigurationSet.


        :param name: The name of this BuildConfigurationSet.
        :type: str
        """
        self._name = name

    @property
    def product_version(self):
        """
        Gets the product_version of this BuildConfigurationSet.


        :return: The product_version of this BuildConfigurationSet.
        :rtype: ProductVersion
        """
        return self._product_version

    @product_version.setter
    def product_version(self, product_version):
        """
        Sets the product_version of this BuildConfigurationSet.


        :param product_version: The product_version of this BuildConfigurationSet.
        :type: ProductVersion
        """
        self._product_version = product_version

    @property
    def build_configurations(self):
        """
        Gets the build_configurations of this BuildConfigurationSet.


        :return: The build_configurations of this BuildConfigurationSet.
        :rtype: list[BuildConfiguration]
        """
        return self._build_configurations

    @build_configurations.setter
    def build_configurations(self, build_configurations):
        """
        Sets the build_configurations of this BuildConfigurationSet.


        :param build_configurations: The build_configurations of this BuildConfigurationSet.
        :type: list[BuildConfiguration]
        """
        self._build_configurations = build_configurations

    @property
    def build_config_set_records(self):
        """
        Gets the build_config_set_records of this BuildConfigurationSet.


        :return: The build_config_set_records of this BuildConfigurationSet.
        :rtype: list[BuildConfigSetRecord]
        """
        return self._build_config_set_records

    @build_config_set_records.setter
    def build_config_set_records(self, build_config_set_records):
        """
        Sets the build_config_set_records of this BuildConfigurationSet.


        :param build_config_set_records: The build_config_set_records of this BuildConfigurationSet.
        :type: list[BuildConfigSetRecord]
        """
        self._build_config_set_records = build_config_set_records

    @property
    def current_product_milestone(self):
        """
        Gets the current_product_milestone of this BuildConfigurationSet.


        :return: The current_product_milestone of this BuildConfigurationSet.
        :rtype: ProductMilestone
        """
        return self._current_product_milestone

    @current_product_milestone.setter
    def current_product_milestone(self, current_product_milestone):
        """
        Sets the current_product_milestone of this BuildConfigurationSet.


        :param current_product_milestone: The current_product_milestone of this BuildConfigurationSet.
        :type: ProductMilestone
        """
        self._current_product_milestone = current_product_milestone

    @property
    def field_handler(self):
        """
        Gets the field_handler of this BuildConfigurationSet.


        :return: The field_handler of this BuildConfigurationSet.
        :rtype: FieldHandler
        """
        return self._field_handler

    @field_handler.setter
    def field_handler(self, field_handler):
        """
        Sets the field_handler of this BuildConfigurationSet.


        :param field_handler: The field_handler of this BuildConfigurationSet.
        :type: FieldHandler
        """
        self._field_handler = field_handler

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
	    elif isinstance(value, datetime):
		result[attr] = str(value.date())
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
