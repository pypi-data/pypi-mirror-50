# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from datetime import datetime
from pprint import pformat
from six import iteritems


class RepositoryConfiguration(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        RepositoryConfiguration - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'internal_url': 'str',
            'internal_url_normalized': 'str',
            'external_url': 'str',
            'external_url_normalized': 'str',
            'pre_build_sync_enabled': 'bool',
            'build_configurations': 'list[BuildConfiguration]',
            'field_handler': 'FieldHandler'
        }

        self.attribute_map = {
            'id': 'id',
            'internal_url': 'internalUrl',
            'internal_url_normalized': 'internalUrlNormalized',
            'external_url': 'externalUrl',
            'external_url_normalized': 'externalUrlNormalized',
            'pre_build_sync_enabled': 'preBuildSyncEnabled',
            'build_configurations': 'buildConfigurations',
            'field_handler': 'fieldHandler'
        }

        self._id = None
        self._internal_url = None
        self._internal_url_normalized = None
        self._external_url = None
        self._external_url_normalized = None
        self._pre_build_sync_enabled = None
        self._build_configurations = None
        self._field_handler = None

    @property
    def id(self):
        """
        Gets the id of this RepositoryConfiguration.


        :return: The id of this RepositoryConfiguration.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this RepositoryConfiguration.


        :param id: The id of this RepositoryConfiguration.
        :type: int
        """
        self._id = id

    @property
    def internal_url(self):
        """
        Gets the internal_url of this RepositoryConfiguration.


        :return: The internal_url of this RepositoryConfiguration.
        :rtype: str
        """
        return self._internal_url

    @internal_url.setter
    def internal_url(self, internal_url):
        """
        Sets the internal_url of this RepositoryConfiguration.


        :param internal_url: The internal_url of this RepositoryConfiguration.
        :type: str
        """
        self._internal_url = internal_url

    @property
    def internal_url_normalized(self):
        """
        Gets the internal_url_normalized of this RepositoryConfiguration.


        :return: The internal_url_normalized of this RepositoryConfiguration.
        :rtype: str
        """
        return self._internal_url_normalized

    @internal_url_normalized.setter
    def internal_url_normalized(self, internal_url_normalized):
        """
        Sets the internal_url_normalized of this RepositoryConfiguration.


        :param internal_url_normalized: The internal_url_normalized of this RepositoryConfiguration.
        :type: str
        """
        self._internal_url_normalized = internal_url_normalized

    @property
    def external_url(self):
        """
        Gets the external_url of this RepositoryConfiguration.


        :return: The external_url of this RepositoryConfiguration.
        :rtype: str
        """
        return self._external_url

    @external_url.setter
    def external_url(self, external_url):
        """
        Sets the external_url of this RepositoryConfiguration.


        :param external_url: The external_url of this RepositoryConfiguration.
        :type: str
        """
        self._external_url = external_url

    @property
    def external_url_normalized(self):
        """
        Gets the external_url_normalized of this RepositoryConfiguration.


        :return: The external_url_normalized of this RepositoryConfiguration.
        :rtype: str
        """
        return self._external_url_normalized

    @external_url_normalized.setter
    def external_url_normalized(self, external_url_normalized):
        """
        Sets the external_url_normalized of this RepositoryConfiguration.


        :param external_url_normalized: The external_url_normalized of this RepositoryConfiguration.
        :type: str
        """
        self._external_url_normalized = external_url_normalized

    @property
    def pre_build_sync_enabled(self):
        """
        Gets the pre_build_sync_enabled of this RepositoryConfiguration.


        :return: The pre_build_sync_enabled of this RepositoryConfiguration.
        :rtype: bool
        """
        return self._pre_build_sync_enabled

    @pre_build_sync_enabled.setter
    def pre_build_sync_enabled(self, pre_build_sync_enabled):
        """
        Sets the pre_build_sync_enabled of this RepositoryConfiguration.


        :param pre_build_sync_enabled: The pre_build_sync_enabled of this RepositoryConfiguration.
        :type: bool
        """
        self._pre_build_sync_enabled = pre_build_sync_enabled

    @property
    def build_configurations(self):
        """
        Gets the build_configurations of this RepositoryConfiguration.


        :return: The build_configurations of this RepositoryConfiguration.
        :rtype: list[BuildConfiguration]
        """
        return self._build_configurations

    @build_configurations.setter
    def build_configurations(self, build_configurations):
        """
        Sets the build_configurations of this RepositoryConfiguration.


        :param build_configurations: The build_configurations of this RepositoryConfiguration.
        :type: list[BuildConfiguration]
        """
        self._build_configurations = build_configurations

    @property
    def field_handler(self):
        """
        Gets the field_handler of this RepositoryConfiguration.


        :return: The field_handler of this RepositoryConfiguration.
        :rtype: FieldHandler
        """
        return self._field_handler

    @field_handler.setter
    def field_handler(self, field_handler):
        """
        Sets the field_handler of this RepositoryConfiguration.


        :param field_handler: The field_handler of this RepositoryConfiguration.
        :type: FieldHandler
        """
        self._field_handler = field_handler

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
	    elif isinstance(value, datetime):
		result[attr] = str(value.date())
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
