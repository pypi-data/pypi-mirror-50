#encoding=utf-8
#Данный пример определяет тип модуля реле или силового ключа подключённого к шине I2C.
from pyiArduinoI2Crelay import *										# Подключаем библиотеку для работы с реле
relay = pyiArduinoI2Crelay()                                         # Объявляем объект relay для работы с функциями и методами модуля Py_iarduino_I2C_Relay.
                                                                        # Если при объявлении объекта указать адрес, например, relay(0xBB), то пример будет работать с тем модулем, адрес которого был указан.
print("На шине I2C", end=' ')											# 
if relay.begin():														# Инициируем работу с модулем реле или силовыми ключами.
	address = relay.getAddress()										# Записываем адресс
	model = relay.getModel()											# Записываем модель
	version = relay.getVersion()										# Записываем версию
	if model == DEF_MODEL_2RM:											# Сравниваем с константами
		model == "электромеханическим реле на 2-канала"					# и записываем в ту же переменную
	elif model == DEF_MODEL_4RT:										#
 		model == "твердотельным реле на 4-канала"						#
	elif model == DEF_MODEL_4NC:										#
 		model == "силовым ключом на 4 N-канала с измерением тока"		#
	elif model == DEF_MODEL_4PC:										#
 		model == "силовым ключом на 4 P-канала с измерением тока"		#
	elif model == DEF_MODEL_4NP:										#
 		model == "силовым ключом на 4 n-канала до 10a"					#
	elif model == DEF_MODEL_4PP:										#
 		model == "силовым ключом на 4 P-канала до 10A"					#
	else:																#
 		model == "неизвестным силовым ключом или реле"					#
	#выводим текст в консоль.
	print("найден модуль с адресом %s, версия прошивки модуля: %s.0." % (hex(address), version))                                                                  # Инициируем работу с модулем реле или силовыми ключами.
else: 
	print("нет ни силовых ключей, ни реле!")  # Если метод relay.begin() вернул false, значит библиотеке не удалось найти модуль реле или силовых ключей.
