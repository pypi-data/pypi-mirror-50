Metadata-Version: 1.1
Name: pangu2
Version: 5.0
Summary: Paranoid text spacing for good readability, to automatically insert whitespace between CJK (Chinese, Japanese, Korean) and half-width characters (alphabetical letters, numerical digits and symbols).
Home-page: https://github.com/vinta/pangu2.py
Author: Vinta Chen
Author-email: vinta.chen@gmail.com
License: MIT
Description: Pangu2
        ========
        
        Split From English and Chinese.
        
        Installation
        ============
        
        .. code-block:: bash
        
            $ pip install -U pangu2
        
        Usage
        =====
        
        In Python
        ---------
        
        .. code-block:: py
        
            import pangu2
        
            new_text = pangu2.spacing_text('當你凝視著bug，bug也凝視著你')
            # new_text = '當你凝視著 bug，bug 也凝視著你'
        
            nwe_content = pangu2.spacing_file('path/to/file.txt')
            # nwe_content = '與 PM 戰鬥的人，應當小心自己不要成為 PM'
        
        In CLI
        ------
        
        .. code-block:: bash
        
            $ pangu2 "請使用uname -m指令來檢查你的Linux作業系統是32位元或是[敏感词已被屏蔽]位元"
            請使用 uname -m 指令來檢查你的 Linux 作業系統是 32 位元或是 [敏感词已被屏蔽] 位元
        
            $ python -m pangu2 "為什麼小明有問題都不Google？因為他有Bing"
            為什麼小明有問題都不 Google？因為他有 Bing
        
            $ echo "未來的某一天，Gmail配備的AI可能會得出一個結論：想要消滅垃圾郵件最好的辦法就是消滅人類" >> path/to/file.txt
            $ pangu2 -f path/to/file.txt >> pangu_file.txt
            $ cat pangu_file.txt
            未來的某一天，Gmail 配備的 AI 可能會得出一個結論：想要消滅垃圾郵件最好的辦法就是消滅人類
        
            $ echo "心裡想的是Microservice，手裡做的是Distributed Monolith" | pangu2
            心裡想的是 Microservice，手裡做的是 Distributed Monolith
        
            $ echo "你從什麼時候開始產生了我沒使用Monkey Patch的錯覺?" | python -m pangu2
            你從什麼時候開始產生了我沒使用 Monkey Patch 的錯覺？
        
        History
        =======
        
        5.0 (2019-08-02)
        --------------------
        
        - Remove Letter & Number and Paren Split
        
        
        4.0.6.1 (2019-02-09)
        --------------------
        
        - Implement **Paranoid Text Spacing algorithm** v4
        - Support Python 3.7
        - Drop Python 2.7 support
        
        3.3.0.1 (2018-01-20)
        --------------------
        
        - Support Python 3.6
        - Add a method: ``pangu.spacing_file()``
        - Add a command-line tool: ``pangu``
        
        3.0.0 (2016-01-24)
        ------------------
        
        - Support Python 3.5
        - Refactoring
        - Rename ``text_spacing()`` to ``spacing_text()``
        
        2.5.6.3 (2015-05-18)
        --------------------
        
        - Add an alias to ``spacing()``: ``text_spacing()``
        - Fix unicode issue in Python 2.x
        
        2.5.6.2 (2015-05-17)
        --------------------
        
        - Fix setup.py
        
        2.5.6 (2015-05-17)
        ------------------
        
        - Synchronize version number with `pangu.js <https://github.com/vinta/pangu.js>`_
        - Improve **Paranoid Text Spacing algorithm**
        
        1.0.0 (2014-02-12)
        ------------------
        
        - Hello World
        
Keywords: pangu2 text-spacing spacing text typesetting readability chinese japanese korean obsessive-compulsive-disorder ocd paranoia
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Natural Language :: Chinese (Traditional)
Classifier: Natural Language :: Chinese (Simplified)
Classifier: Natural Language :: Japanese
Classifier: Natural Language :: Korean
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Education
Classifier: Topic :: Software Development :: Internationalization
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: General
Classifier: Topic :: Text Processing :: Linguistic
Classifier: Topic :: Utilities
