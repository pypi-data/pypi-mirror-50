{"version":3,"sources":["webpack:///./src/components/TextField/index.jsx","webpack:///./src/components/SecondaryNav/styles.js","webpack:///./src/components/SecondaryNav/index.jsx","webpack:///./src/plugins/pending-list/state/shapes.js","webpack:///./src/plugins/pending-list/AddListDialog/AddListDialog.jsx","webpack:///./src/plugins/pending-list/AddListDialog/index.js","webpack:///./src/plugins/pending-list/TabList/TabList.jsx","webpack:///./src/plugins/pending-list/TabList/index.js","webpack:///./src/plugins/pending-list/PendingList/index.jsx"],"names":["CustomTextField","_ref","input","_ref$meta","meta","touched","error","custom","_objectWithoutProperties","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_3__","_extends","SecondaryAppBar","styled_base_browser_esm","AppBar","target","name","styles","SecondaryToolbar","Toolbar","theme","palette","secondary","getContrastText","SecondaryTabs","Tabs","SecondaryNav","children","tabs","tabProps","core_browser_esm","MuiThemeProvider","darkTheme","indicatorColor","defaultProps","PropTypes","shape","id","number","string","added_on","AddListDialog","open","onClose","handleSubmit","Dialog","onRequestClose","DialogTitle","onSubmit","DialogContent","Field","autoFocus","label","fullWidth","component","TextField","DialogActions","Button","onClick","type","color","reduxForm","form","connect","errorStatus","status","dispatch","ownProps","data","Promise","resolve","reject","request","ADD_LIST","onSubmitSuccess","TabList","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","state","addDialogOpen","handleChange","event","value","props","selectList","openDialog","setState","closeDialog","PureComponent","getLists","lists","_this$props","length","_this$props2","listId","variant","scrollButtons","onChange","map","_ref2","Tab","key","icon","react_fontawesome_default","a","pending_list_AddListDialog","pendingList","GET_LISTS","PendingList","PendingList_classCallCheck","PendingList_possibleConstructorReturn","PendingList_getPrototypeOf","pending_list_TabList"],"mappings":"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","file":"11.0545319e9b06fc39078f.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nconst CustomTextField = ({ input, meta: { touched, error }, ...custom }) => (<TextField error={touched && error} {...input} {...custom}/>);\nCustomTextField.propTypes = {\n    input: PropTypes.object.isRequired,\n    meta: PropTypes.object.isRequired,\n};\nexport default CustomTextField;\n","import styled from '@emotion/styled';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport theme from 'theme';\nexport const SecondaryAppBar = styled(AppBar) `\n  position: static;\n`;\nexport const SecondaryToolbar = styled(Toolbar) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\nexport const SecondaryTabs = styled(Tabs) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { darkTheme } from 'theme';\nimport { SecondaryAppBar, SecondaryToolbar, SecondaryTabs, } from './styles';\nconst SecondaryNav = ({ children, tabs, ...tabProps }) => (<MuiThemeProvider theme={darkTheme}>\n    <SecondaryAppBar>\n      {tabs\n    ? (<SecondaryTabs indicatorColor=\"primary\" {...tabProps}>\n            {children}\n          </SecondaryTabs>)\n    : (<SecondaryToolbar>\n            {children}\n          </SecondaryToolbar>)}\n    </SecondaryAppBar>\n  </MuiThemeProvider>);\nSecondaryNav.propTypes = {\n    children: PropTypes.node.isRequired,\n    tabs: PropTypes.bool,\n};\nSecondaryNav.defaultProps = {\n    tabs: false,\n};\nexport default SecondaryNav;\n","import PropTypes from 'prop-types';\nexport const ListShape = PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    added_on: PropTypes.string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, reduxForm } from 'redux-form';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from 'components/TextField';\nconst AddListDialog = ({ open, onClose, handleSubmit }) => (<Dialog open={open} onRequestClose={onClose}>\n    <DialogTitle>Add New Pending List</DialogTitle>\n    <form onSubmit={handleSubmit}>\n      <DialogContent>\n        <Field autoFocus id=\"name\" label=\"List Name\" fullWidth name=\"name\" component={TextField}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} type=\"button\">\n          Cancel\n        </Button>\n        <Button type=\"submit\" color=\"primary\">\n          Add\n        </Button>\n      </DialogActions>\n    </form>\n  </Dialog>);\nAddListDialog.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n};\nAddListDialog.defaultProps = {\n    open: false,\n};\nexport default reduxForm({\n    form: 'addPendingList',\n})(AddListDialog);\n","import { connect } from 'react-redux';\nimport { request } from 'utils/actions';\nimport { ADD_LIST } from '../state/actions';\nimport AddListDialog from './AddListDialog';\nexport function mapStateToProps({ status }) {\n    return {\n        errorStatus: status.error || {},\n    };\n}\nfunction mapDispatchToProps(dispatch, ownProps) {\n    return {\n        onSubmit: data => new Promise((resolve, reject) => (dispatch(request(ADD_LIST, { data, resolve, reject })))),\n        onSubmitSuccess: ownProps.onClose,\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddListDialog);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from '@material-ui/core/Tab';\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\nimport SecondaryNav from 'components/SecondaryNav';\nimport { ListShape } from '../state/shapes';\nimport AddListDialog from '../AddListDialog';\nclass TabList extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            addDialogOpen: false,\n        };\n        this.handleChange = (event, value) => {\n            if (value !== 'add') {\n                return this.props.selectList(value);\n            }\n            return this.openDialog();\n        };\n        this.openDialog = () => this.setState({ addDialogOpen: true });\n        this.closeDialog = () => this.setState({ addDialogOpen: false });\n    }\n    componentDidMount() {\n        const { getLists } = this.props;\n        getLists();\n    }\n    componentWillReceiveProps({ lists }) {\n        const { selectList, lists: prevLists } = this.props;\n        if (prevLists.length === 0 && lists.length !== 0) {\n            selectList(lists[0].id);\n        }\n    }\n    render() {\n        const { listId, lists } = this.props;\n        const { addDialogOpen } = this.state;\n        return (<div>\n        <SecondaryNav value={listId} variant=\"scrollable\" scrollButtons=\"on\" onChange={this.handleChange} tabs>\n          {lists.map(({ name, id }) => <Tab label={name} value={id} key={id}/>)}\n          <Tab icon={<FontAwesomeIcon icon=\"plus-circle\"/>} value=\"add\"/>\n        </SecondaryNav>\n        <AddListDialog open={addDialogOpen} onClose={this.closeDialog}/>\n      </div>);\n    }\n}\nTabList.propTypes = {\n    getLists: PropTypes.func.isRequired,\n    selectList: PropTypes.func.isRequired,\n    lists: PropTypes.arrayOf(ListShape).isRequired,\n    listId: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n};\nTabList.defaultProps = {\n    listId: false,\n};\nexport default TabList;\n","import { connect } from 'react-redux';\nimport { request } from 'utils/actions';\nimport { GET_LISTS } from '../state/actions';\nimport TabList from './TabList';\nfunction mapStateToProps({ pendingList }) {\n    return {\n        lists: pendingList.lists,\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getLists: () => dispatch(request(GET_LISTS)),\n    };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TabList);\n","import React, { PureComponent } from 'react';\nimport { NoPaddingWrapper } from 'components/styles';\nimport TabList from '../TabList';\nclass PendingList extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            listId: false,\n        };\n        this.selectList = listId => this.setState({ listId });\n    }\n    render() {\n        const { listId } = this.state;\n        return (<NoPaddingWrapper>\n        <TabList listId={listId} selectList={this.selectList}/>\n      </NoPaddingWrapper>);\n    }\n}\nexport default PendingList;\n"],"sourceRoot":""}