{"version":3,"sources":["webpack:///./src/components/SecondaryNav/styles.js","webpack:///./src/components/SecondaryNav/index.jsx","webpack:///./src/utils/array.js","webpack:///./src/plugins/history/state/selectors.js","webpack:///./src/plugins/history/state/shapes.js","webpack:///./src/components/LoadingSpinner/styles.js","webpack:///./src/components/LoadingSpinner/index.jsx","webpack:///./src/plugins/history/HistoryList/styles.js","webpack:///./src/plugins/history/HistoryList/HistoryList.jsx","webpack:///./src/plugins/history/HistoryList/index.jsx","webpack:///./src/plugins/history/FilterNav/styles.js","webpack:///./src/plugins/history/FilterNav/index.jsx","webpack:///./src/plugins/history/History/History.jsx","webpack:///./src/plugins/history/History/index.js"],"names":["SecondaryAppBar","Object","styled_base_browser_esm","AppBar","target","name","styles","SecondaryToolbar","Toolbar","theme","palette","secondary","getContrastText","SecondaryTabs","Tabs","SecondaryNav","_ref","children","tabs","tabProps","_objectWithoutProperties","core_browser_esm","MuiThemeProvider","darkTheme","_extends","indicatorColor","defaultProps","groupBy","array","key","transform","arguments","length","undefined","f","reduce","obj","curr","modKey","_objectSpread","_defineProperty","concat","_toConsumableArray","getItems","history","items","getGrouping","grouping","historyGroupBy","getHistoryGroupedByTime","createSelector","i","split","getHistoryGroupedByTask","getGroupedHistory","PropTypes","shape","task","string","title","url","filename","details","time","strings","id","number","Spinner","CircularProgress","Wrapper","LoadingBar","loading","Subheader","ListSubheader","HistoryList","Component","_this$props","this","props","hasMore","getHistory","scrollRef","styles_Wrapper","react_infinite_scroller_default","a","loadMore","loader","LoadingSpinner","ref","useWindow","entries","map","_ref2","_slicedToArray","subheader","histories","List","color","_ref3","ListItem","ListItemText","primary","Date","toString","ConnectedHistoryList","connect","totalCount","forwardRef","RotatingIcon","Icon","transitions","create","rotate","PaddedTextField","TextField","ENTER_KEY","groupByFields","value","label","sortByFields","FilterNav","_this","FilterNav_classCallCheck","FilterNav_possibleConstructorReturn","FilterNav_getPrototypeOf","apply","state","handleChange","event","setState","handleKeyPress","which","order","sort","toggleOrder","placeholder","onChange","onKeyPress","select","MenuItem","IconButton","onClick","className","HistoryPage","History_classCallCheck","History_possibleConstructorReturn","History_getPrototypeOf","scroll","React","createRef","page","sort_by","restartLoader","findDOMNode","current","scrollIntoView","pageLoaded","History_defineProperty","history_FilterNav","History_extends","history_HistoryList","__webpack_require__","d","__webpack_exports__","History_HistoryPage","dispatch","data","request","GET_HISTORY","History"],"mappings":"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","file":"13.8e7b5b4acf86b99b1118.js","sourcesContent":["import styled from '@emotion/styled';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport theme from 'theme';\nexport const SecondaryAppBar = styled(AppBar) `\n  position: static;\n`;\nexport const SecondaryToolbar = styled(Toolbar) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\nexport const SecondaryTabs = styled(Tabs) `\n  background-color: ${theme.palette.secondary[700]};\n  min-height: 5rem;\n  color: ${theme.palette.getContrastText(theme.palette.secondary[700])};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { darkTheme } from 'theme';\nimport { SecondaryAppBar, SecondaryToolbar, SecondaryTabs, } from './styles';\nconst SecondaryNav = ({ children, tabs, ...tabProps }) => (<MuiThemeProvider theme={darkTheme}>\n    <SecondaryAppBar>\n      {tabs\n    ? (<SecondaryTabs indicatorColor=\"primary\" {...tabProps}>\n            {children}\n          </SecondaryTabs>)\n    : (<SecondaryToolbar>\n            {children}\n          </SecondaryToolbar>)}\n    </SecondaryAppBar>\n  </MuiThemeProvider>);\nSecondaryNav.propTypes = {\n    children: PropTypes.node.isRequired,\n    tabs: PropTypes.bool,\n};\nSecondaryNav.defaultProps = {\n    tabs: false,\n};\nexport default SecondaryNav;\n","export function groupBy(array, key, transform = f => f) {\n    return array.reduce((obj, curr) => {\n        const modKey = transform(curr[key]);\n        return {\n            ...obj,\n            [modKey]: obj[modKey] ? [...obj[modKey], curr] : [curr],\n        };\n    }, {});\n}\n","import { createSelector } from 'reselect';\nimport { groupBy } from 'utils/array';\nconst getItems = history => history.items;\nconst getGrouping = (history, grouping) => grouping;\nconst historyGroupBy = (items, grouping, transform) => groupBy(items, grouping, transform);\nconst getHistoryGroupedByTime = createSelector([getItems, getGrouping], (items, grouping) => historyGroupBy(items, grouping, i => i.split('T')[0]));\nconst getHistoryGroupedByTask = createSelector([getItems, getGrouping], historyGroupBy);\nexport const getGroupedHistory = (history, grouping) => (grouping === 'time'\n    ? getHistoryGroupedByTime\n    : getHistoryGroupedByTask)(history, grouping);\n","import PropTypes from 'prop-types';\nexport const HistoryShape = PropTypes.shape({\n    task: PropTypes.string,\n    title: PropTypes.string,\n    url: PropTypes.string,\n    filename: PropTypes.string,\n    details: PropTypes.string,\n    time: PropTypes.strings,\n    id: PropTypes.number,\n});\n","import styled from '@emotion/styled';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nexport const Spinner = styled(CircularProgress) `\n  margin: 0 auto;\n`;\nexport const Wrapper = styled.div `\n  display: flex;\n  align-items: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spinner, Wrapper } from './styles';\nconst LoadingBar = ({ loading }) => {\n    if (loading) {\n        return (<Wrapper>\n        <Spinner />\n      </Wrapper>);\n    }\n    return null;\n};\nLoadingBar.propTypes = {\n    loading: PropTypes.bool,\n};\nLoadingBar.defaultProps = {\n    loading: false,\n};\nexport default LoadingBar;\n","import styled from '@emotion/styled';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nexport const Subheader = styled(ListSubheader) `\n  background-color: white;\n`;\nexport const Wrapper = styled.div `\n  overflow-y: scroll;\n  flex: 1;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { HistoryShape } from 'plugins/history/state/shapes';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LoadingSpinner from 'components/LoadingSpinner';\nimport { Subheader, Wrapper } from './styles';\nclass HistoryList extends Component {\n    render() {\n        const { grouping, history, hasMore, getHistory, scrollRef, } = this.props;\n        return (<Wrapper>\n        <InfiniteScroll hasMore={hasMore} loadMore={getHistory} loader={<LoadingSpinner loading/>} ref={scrollRef} useWindow={false}>\n          {Object.entries(history).map(([subheader, histories]) => (<List key={subheader} subheader={<Subheader color=\"primary\">{subheader}</Subheader>}>\n              {histories.map(({ id, title, time, task, }) => (<ListItem key={id}>\n                  <ListItemText primary={title} secondary={grouping === 'time' ? task : new Date(time).toString()}/>\n                </ListItem>))}\n            </List>))}\n        </InfiniteScroll>\n      </Wrapper>);\n    }\n}\nHistoryList.propTypes = {\n    grouping: PropTypes.oneOf(['time', 'task']).isRequired,\n    history: PropTypes.objectOf(PropTypes.arrayOf(HistoryShape)).isRequired,\n    hasMore: PropTypes.bool,\n    getHistory: PropTypes.func.isRequired,\n    scrollRef: PropTypes.object.isRequired,\n};\nHistoryList.defaultProps = {\n    hasMore: true,\n};\nexport default HistoryList;\n","import React, { forwardRef } from 'react';\nimport { connect } from 'react-redux';\nimport { getGroupedHistory } from 'plugins/history/state/selectors';\nimport HistoryList from './HistoryList';\nexport function mapStateToProps({ history }, { grouping }) {\n    return {\n        history: getGroupedHistory(history, grouping),\n        hasMore: (!history.totalCount && history.totalCount !== 0)\n            || history.items.length < history.totalCount,\n    };\n}\nconst ConnectedHistoryList = connect(mapStateToProps)(HistoryList);\nexport default forwardRef((props, ref) => (<ConnectedHistoryList {...props} scrollRef={ref}/>));\nexport { HistoryList };\n","import styled from '@emotion/styled';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport theme from 'theme';\nexport const RotatingIcon = styled(Icon) `\n  transition: ${theme.transitions.create()};\n  transform: ${({ rotate }) => rotate && 'rotate(180deg)'};\n`;\nexport const PaddedTextField = styled(TextField) `\n  margin: 0.5rem 2rem 0.5rem;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SecondaryNav from 'components/SecondaryNav';\nimport { Spacer } from 'components/styles';\nimport { RotatingIcon, PaddedTextField } from './styles';\nconst ENTER_KEY = 13;\nconst groupByFields = [\n    {\n        value: 'task',\n        label: 'Task',\n    },\n    {\n        value: 'time',\n        label: 'Time',\n    },\n];\nconst sortByFields = [\n    {\n        value: 'details',\n        label: 'Details',\n    },\n    {\n        value: 'filename',\n        label: 'Filename',\n    },\n    {\n        value: 'id',\n        label: 'ID',\n    },\n    {\n        value: 'task',\n        label: 'Task',\n    },\n    {\n        value: 'time',\n        label: 'Time',\n    },\n    {\n        value: 'title',\n        label: 'Title',\n    },\n    {\n        value: 'url',\n        label: 'URL',\n    },\n];\nclass FilterNav extends Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            task: '',\n        };\n        this.handleChange = (event) => {\n            this.setState({ task: event.target.value });\n        };\n        this.handleKeyPress = (event) => {\n            const { handleChange } = this.props;\n            if (event.which === ENTER_KEY) {\n                handleChange('task')(event);\n            }\n        };\n    }\n    render() {\n        const { order, grouping, sort, toggleOrder, handleChange, } = this.props;\n        const { task, } = this.state;\n        return (<SecondaryNav>\n        <PaddedTextField label=\"Filter By Task\" id=\"task-filter\" placeholder=\"Task Name\" value={task} onChange={this.handleChange} onKeyPress={this.handleKeyPress}/>\n        <Spacer />\n        <PaddedTextField id=\"sort-by\" select label=\"Sort By\" value={sort} onChange={handleChange('sort')}>\n          {sortByFields.map(({ value, label }) => (<MenuItem value={value} key={value}>{label}</MenuItem>))}\n        </PaddedTextField>\n        <PaddedTextField id=\"group-by\" label=\"Group By\" select value={grouping} onChange={handleChange('grouping')}>\n          {groupByFields.map(({ value, label }) => (<MenuItem value={value} key={value}>{label}</MenuItem>))}\n        </PaddedTextField>\n        <IconButton color=\"inherit\" onClick={toggleOrder}>\n          <RotatingIcon rotate={order === 'desc'} className=\"fa fa-chevron-up\"/>\n        </IconButton>\n      </SecondaryNav>);\n    }\n}\nFilterNav.propTypes = {\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    grouping: PropTypes.oneOf(groupByFields.map(({ value }) => value)).isRequired,\n    sort: PropTypes.oneOf(sortByFields.map(({ value }) => value)).isRequired,\n    toggleOrder: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired,\n};\nexport default FilterNav;\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport HistoryList from 'plugins/history/HistoryList';\nimport FilterNav from 'plugins/history/FilterNav';\nimport { NoPaddingWrapper } from 'components/styles';\nexport default class HistoryPage extends Component {\n    constructor() {\n        super(...arguments);\n        this.scroll = React.createRef();\n        this.state = {\n            grouping: 'time',\n            sort: 'time',\n            order: 'desc',\n        };\n        this.getHistory = page => this.props.getHistory({\n            page,\n            sort_by: this.state.sort,\n            order: this.state.order,\n            task: this.state.task,\n        });\n        this.restartLoader = () => {\n            findDOMNode(this.scroll.current).scrollIntoView(); // eslint-disable-line react/no-find-dom-node\n            this.getHistory(1);\n            this.scroll.current.pageLoaded = 1;\n        };\n        this.handleChange = key => event => this.setState({ [key]: event.target.value }, this.restartLoader);\n        this.toggleOrder = () => this.setState(({ order }) => ({\n            order: (order === 'asc' ? 'desc' : 'asc'),\n        }), this.restartLoader);\n    }\n    render() {\n        const { grouping } = this.state;\n        return (<NoPaddingWrapper>\n        <FilterNav handleChange={this.handleChange} toggleOrder={this.toggleOrder} {...this.state}/>\n        <HistoryList grouping={grouping} getHistory={this.getHistory} ref={this.scroll}/>\n      </NoPaddingWrapper>);\n    }\n}\nHistoryPage.propTypes = {\n    getHistory: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport { request } from 'utils/actions';\nimport { GET_HISTORY } from '../state/actions';\nimport History from './History';\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getHistory: data => dispatch(request(GET_HISTORY, data)),\n    };\n}\nexport default connect(null, mapDispatchToProps)(History);\nexport { History };\n"],"sourceRoot":""}