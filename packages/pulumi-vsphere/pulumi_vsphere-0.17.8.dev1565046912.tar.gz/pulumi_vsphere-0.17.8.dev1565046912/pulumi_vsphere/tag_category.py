# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class TagCategory(pulumi.CustomResource):
    associable_types: pulumi.Output[list]
    """
    A list object types that this category is
    valid to be assigned to. For a full list, click
    here.
    """
    cardinality: pulumi.Output[str]
    """
    The number of tags that can be assigned from this
    category to a single object at once. Can be one of `SINGLE` (object can only
    be assigned one tag in this category), to `MULTIPLE` (object can be assigned
    multiple tags in this category). Forces a new resource if changed.
    """
    description: pulumi.Output[str]
    """
    A description for the category.
    """
    name: pulumi.Output[str]
    """
    The name of the category.
    """
    def __init__(__self__, resource_name, opts=None, associable_types=None, cardinality=None, description=None, name=None, __name__=None, __opts__=None):
        """
        The `vsphere_tag_category` resource can be used to create and manage tag
        categories, which determine how tags are grouped together and applied to
        specific objects.
        
        For more information about tags, click [here][ext-tags-general]. For more
        information about tag categories specifically, click
        [here][ext-tag-categories].
        
        [ext-tags-general]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-E8E854DD-AA97-4E0C-8419-CE84F93C4058.html
        [ext-tag-categories]: https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.vcenterhost.doc/GUID-BA3D1794-28F2-43F3-BCE9-3964CB207FB6.html
        
        > **NOTE:** Tagging support is unsupported on direct ESXi connections and
        requires vCenter 6.0 or higher.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] associable_types: A list object types that this category is
               valid to be assigned to. For a full list, click
               here.
        :param pulumi.Input[str] cardinality: The number of tags that can be assigned from this
               category to a single object at once. Can be one of `SINGLE` (object can only
               be assigned one tag in this category), to `MULTIPLE` (object can be assigned
               multiple tags in this category). Forces a new resource if changed.
        :param pulumi.Input[str] description: A description for the category.
        :param pulumi.Input[str] name: The name of the category.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-vsphere/blob/master/website/docs/r/tag_category.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if associable_types is None:
            raise TypeError("Missing required property 'associable_types'")
        __props__['associable_types'] = associable_types

        if cardinality is None:
            raise TypeError("Missing required property 'cardinality'")
        __props__['cardinality'] = cardinality

        __props__['description'] = description

        __props__['name'] = name

        if opts is None:
            opts = pulumi.ResourceOptions()
        if opts.version is None:
            opts.version = utilities.get_version()
        super(TagCategory, __self__).__init__(
            'vsphere:index/tagCategory:TagCategory',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

