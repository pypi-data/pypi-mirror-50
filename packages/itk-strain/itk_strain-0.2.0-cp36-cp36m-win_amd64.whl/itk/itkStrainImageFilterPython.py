# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkStrainImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkStrainImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkStrainImageFilterPython
            return _itkStrainImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkStrainImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkStrainImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkStrainImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImagePython
import itkOffsetPython
import itkSizePython
import itkPointPython
import vnl_vector_refPython
import stdcomplexPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkFixedArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkIndexPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterBPython
import itkImageToImageFilterCommonPython

def itkStrainImageFilterIVD33DD_New():
  return itkStrainImageFilterIVD33DD.New()


def itkStrainImageFilterIVD22DD_New():
  return itkStrainImageFilterIVD22DD.New()


def itkImageToImageFilterIVD33ICVD33_New():
  return itkImageToImageFilterIVD33ICVD33.New()


def itkImageToImageFilterIVD33ISSRTD33_New():
  return itkImageToImageFilterIVD33ISSRTD33.New()


def itkImageToImageFilterIVD22ICVD22_New():
  return itkImageToImageFilterIVD22ICVD22.New()


def itkImageToImageFilterIVD22ISSRTD22_New():
  return itkImageToImageFilterIVD22ISSRTD22.New()

class itkImageToImageFilterIVD22ICVD22(itkImageSourcePython.itkImageSourceICVD22):
    """Proxy of C++ itkImageToImageFilterIVD22ICVD22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args) -> "void":
        """
        SetInput(itkImageToImageFilterIVD22ICVD22 self, itkImageVD22 image)
        SetInput(itkImageToImageFilterIVD22ICVD22 self, unsigned int arg0, itkImageVD22 image)
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_SetInput(self, *args)


    def GetInput(self, *args) -> "itkImageVD22 const *":
        """
        GetInput(itkImageToImageFilterIVD22ICVD22 self) -> itkImageVD22
        GetInput(itkImageToImageFilterIVD22ICVD22 self, unsigned int idx) -> itkImageVD22
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_GetInput(self, *args)


    def PushBackInput(self, image: 'itkImageVD22') -> "void":
        """PushBackInput(itkImageToImageFilterIVD22ICVD22 self, itkImageVD22 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PushBackInput(self, image)


    def PopBackInput(self) -> "void":
        """PopBackInput(itkImageToImageFilterIVD22ICVD22 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PopBackInput(self)


    def PushFrontInput(self, image: 'itkImageVD22') -> "void":
        """PushFrontInput(itkImageToImageFilterIVD22ICVD22 self, itkImageVD22 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PushFrontInput(self, image)


    def PopFrontInput(self) -> "void":
        """PopFrontInput(itkImageToImageFilterIVD22ICVD22 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PopFrontInput(self)


    def SetCoordinateTolerance(self, _arg: 'double const') -> "void":
        """SetCoordinateTolerance(itkImageToImageFilterIVD22ICVD22 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_SetCoordinateTolerance(self, _arg)


    def GetCoordinateTolerance(self) -> "double":
        """GetCoordinateTolerance(itkImageToImageFilterIVD22ICVD22 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_GetCoordinateTolerance(self)


    def SetDirectionTolerance(self, _arg: 'double const') -> "void":
        """SetDirectionTolerance(itkImageToImageFilterIVD22ICVD22 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_SetDirectionTolerance(self, _arg)


    def GetDirectionTolerance(self) -> "double":
        """GetDirectionTolerance(itkImageToImageFilterIVD22ICVD22 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_GetDirectionTolerance(self)

    __swig_destroy__ = _itkStrainImageFilterPython.delete_itkImageToImageFilterIVD22ICVD22

    def cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD22ICVD22 *":
        """cast(itkLightObject obj) -> itkImageToImageFilterIVD22ICVD22"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVD22ICVD22

        Create a new object of the class itkImageToImageFilterIVD22ICVD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageFilterIVD22ICVD22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageFilterIVD22ICVD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVD22ICVD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVD22ICVD22.SetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_SetInput, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.GetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_GetInput, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.PushBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PushBackInput, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.PopBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PopBackInput, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.PushFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PushFrontInput, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.PopFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_PopFrontInput, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.SetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_SetCoordinateTolerance, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.GetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_GetCoordinateTolerance, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.SetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_SetDirectionTolerance, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22.GetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_GetDirectionTolerance, None, itkImageToImageFilterIVD22ICVD22)
itkImageToImageFilterIVD22ICVD22_swigregister = _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_swigregister
itkImageToImageFilterIVD22ICVD22_swigregister(itkImageToImageFilterIVD22ICVD22)

def itkImageToImageFilterIVD22ICVD22_cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD22ICVD22 *":
    """itkImageToImageFilterIVD22ICVD22_cast(itkLightObject obj) -> itkImageToImageFilterIVD22ICVD22"""
    return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ICVD22_cast(obj)

class itkImageToImageFilterIVD22ISSRTD22(itkImageSourcePython.itkImageSourceISSRTD22):
    """Proxy of C++ itkImageToImageFilterIVD22ISSRTD22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args) -> "void":
        """
        SetInput(itkImageToImageFilterIVD22ISSRTD22 self, itkImageVD22 image)
        SetInput(itkImageToImageFilterIVD22ISSRTD22 self, unsigned int arg0, itkImageVD22 image)
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_SetInput(self, *args)


    def GetInput(self, *args) -> "itkImageVD22 const *":
        """
        GetInput(itkImageToImageFilterIVD22ISSRTD22 self) -> itkImageVD22
        GetInput(itkImageToImageFilterIVD22ISSRTD22 self, unsigned int idx) -> itkImageVD22
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_GetInput(self, *args)


    def PushBackInput(self, image: 'itkImageVD22') -> "void":
        """PushBackInput(itkImageToImageFilterIVD22ISSRTD22 self, itkImageVD22 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PushBackInput(self, image)


    def PopBackInput(self) -> "void":
        """PopBackInput(itkImageToImageFilterIVD22ISSRTD22 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PopBackInput(self)


    def PushFrontInput(self, image: 'itkImageVD22') -> "void":
        """PushFrontInput(itkImageToImageFilterIVD22ISSRTD22 self, itkImageVD22 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PushFrontInput(self, image)


    def PopFrontInput(self) -> "void":
        """PopFrontInput(itkImageToImageFilterIVD22ISSRTD22 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PopFrontInput(self)


    def SetCoordinateTolerance(self, _arg: 'double const') -> "void":
        """SetCoordinateTolerance(itkImageToImageFilterIVD22ISSRTD22 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_SetCoordinateTolerance(self, _arg)


    def GetCoordinateTolerance(self) -> "double":
        """GetCoordinateTolerance(itkImageToImageFilterIVD22ISSRTD22 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_GetCoordinateTolerance(self)


    def SetDirectionTolerance(self, _arg: 'double const') -> "void":
        """SetDirectionTolerance(itkImageToImageFilterIVD22ISSRTD22 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_SetDirectionTolerance(self, _arg)


    def GetDirectionTolerance(self) -> "double":
        """GetDirectionTolerance(itkImageToImageFilterIVD22ISSRTD22 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_GetDirectionTolerance(self)

    __swig_destroy__ = _itkStrainImageFilterPython.delete_itkImageToImageFilterIVD22ISSRTD22

    def cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD22ISSRTD22 *":
        """cast(itkLightObject obj) -> itkImageToImageFilterIVD22ISSRTD22"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVD22ISSRTD22

        Create a new object of the class itkImageToImageFilterIVD22ISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageFilterIVD22ISSRTD22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageFilterIVD22ISSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVD22ISSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVD22ISSRTD22.SetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_SetInput, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.GetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_GetInput, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.PushBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PushBackInput, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.PopBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PopBackInput, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.PushFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PushFrontInput, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.PopFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_PopFrontInput, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.SetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_SetCoordinateTolerance, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.GetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_GetCoordinateTolerance, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.SetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_SetDirectionTolerance, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22.GetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_GetDirectionTolerance, None, itkImageToImageFilterIVD22ISSRTD22)
itkImageToImageFilterIVD22ISSRTD22_swigregister = _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_swigregister
itkImageToImageFilterIVD22ISSRTD22_swigregister(itkImageToImageFilterIVD22ISSRTD22)

def itkImageToImageFilterIVD22ISSRTD22_cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD22ISSRTD22 *":
    """itkImageToImageFilterIVD22ISSRTD22_cast(itkLightObject obj) -> itkImageToImageFilterIVD22ISSRTD22"""
    return _itkStrainImageFilterPython.itkImageToImageFilterIVD22ISSRTD22_cast(obj)

class itkImageToImageFilterIVD33ICVD33(itkImageSourcePython.itkImageSourceICVD33):
    """Proxy of C++ itkImageToImageFilterIVD33ICVD33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args) -> "void":
        """
        SetInput(itkImageToImageFilterIVD33ICVD33 self, itkImageVD33 image)
        SetInput(itkImageToImageFilterIVD33ICVD33 self, unsigned int arg0, itkImageVD33 image)
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_SetInput(self, *args)


    def GetInput(self, *args) -> "itkImageVD33 const *":
        """
        GetInput(itkImageToImageFilterIVD33ICVD33 self) -> itkImageVD33
        GetInput(itkImageToImageFilterIVD33ICVD33 self, unsigned int idx) -> itkImageVD33
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_GetInput(self, *args)


    def PushBackInput(self, image: 'itkImageVD33') -> "void":
        """PushBackInput(itkImageToImageFilterIVD33ICVD33 self, itkImageVD33 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PushBackInput(self, image)


    def PopBackInput(self) -> "void":
        """PopBackInput(itkImageToImageFilterIVD33ICVD33 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PopBackInput(self)


    def PushFrontInput(self, image: 'itkImageVD33') -> "void":
        """PushFrontInput(itkImageToImageFilterIVD33ICVD33 self, itkImageVD33 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PushFrontInput(self, image)


    def PopFrontInput(self) -> "void":
        """PopFrontInput(itkImageToImageFilterIVD33ICVD33 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PopFrontInput(self)


    def SetCoordinateTolerance(self, _arg: 'double const') -> "void":
        """SetCoordinateTolerance(itkImageToImageFilterIVD33ICVD33 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_SetCoordinateTolerance(self, _arg)


    def GetCoordinateTolerance(self) -> "double":
        """GetCoordinateTolerance(itkImageToImageFilterIVD33ICVD33 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_GetCoordinateTolerance(self)


    def SetDirectionTolerance(self, _arg: 'double const') -> "void":
        """SetDirectionTolerance(itkImageToImageFilterIVD33ICVD33 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_SetDirectionTolerance(self, _arg)


    def GetDirectionTolerance(self) -> "double":
        """GetDirectionTolerance(itkImageToImageFilterIVD33ICVD33 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_GetDirectionTolerance(self)

    __swig_destroy__ = _itkStrainImageFilterPython.delete_itkImageToImageFilterIVD33ICVD33

    def cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD33ICVD33 *":
        """cast(itkLightObject obj) -> itkImageToImageFilterIVD33ICVD33"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVD33ICVD33

        Create a new object of the class itkImageToImageFilterIVD33ICVD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageFilterIVD33ICVD33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageFilterIVD33ICVD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVD33ICVD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVD33ICVD33.SetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_SetInput, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.GetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_GetInput, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.PushBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PushBackInput, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.PopBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PopBackInput, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.PushFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PushFrontInput, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.PopFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_PopFrontInput, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.SetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_SetCoordinateTolerance, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.GetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_GetCoordinateTolerance, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.SetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_SetDirectionTolerance, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33.GetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_GetDirectionTolerance, None, itkImageToImageFilterIVD33ICVD33)
itkImageToImageFilterIVD33ICVD33_swigregister = _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_swigregister
itkImageToImageFilterIVD33ICVD33_swigregister(itkImageToImageFilterIVD33ICVD33)

def itkImageToImageFilterIVD33ICVD33_cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD33ICVD33 *":
    """itkImageToImageFilterIVD33ICVD33_cast(itkLightObject obj) -> itkImageToImageFilterIVD33ICVD33"""
    return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ICVD33_cast(obj)

class itkImageToImageFilterIVD33ISSRTD33(itkImageSourcePython.itkImageSourceISSRTD33):
    """Proxy of C++ itkImageToImageFilterIVD33ISSRTD33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args) -> "void":
        """
        SetInput(itkImageToImageFilterIVD33ISSRTD33 self, itkImageVD33 image)
        SetInput(itkImageToImageFilterIVD33ISSRTD33 self, unsigned int arg0, itkImageVD33 image)
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_SetInput(self, *args)


    def GetInput(self, *args) -> "itkImageVD33 const *":
        """
        GetInput(itkImageToImageFilterIVD33ISSRTD33 self) -> itkImageVD33
        GetInput(itkImageToImageFilterIVD33ISSRTD33 self, unsigned int idx) -> itkImageVD33
        """
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_GetInput(self, *args)


    def PushBackInput(self, image: 'itkImageVD33') -> "void":
        """PushBackInput(itkImageToImageFilterIVD33ISSRTD33 self, itkImageVD33 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PushBackInput(self, image)


    def PopBackInput(self) -> "void":
        """PopBackInput(itkImageToImageFilterIVD33ISSRTD33 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PopBackInput(self)


    def PushFrontInput(self, image: 'itkImageVD33') -> "void":
        """PushFrontInput(itkImageToImageFilterIVD33ISSRTD33 self, itkImageVD33 image)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PushFrontInput(self, image)


    def PopFrontInput(self) -> "void":
        """PopFrontInput(itkImageToImageFilterIVD33ISSRTD33 self)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PopFrontInput(self)


    def SetCoordinateTolerance(self, _arg: 'double const') -> "void":
        """SetCoordinateTolerance(itkImageToImageFilterIVD33ISSRTD33 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_SetCoordinateTolerance(self, _arg)


    def GetCoordinateTolerance(self) -> "double":
        """GetCoordinateTolerance(itkImageToImageFilterIVD33ISSRTD33 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_GetCoordinateTolerance(self)


    def SetDirectionTolerance(self, _arg: 'double const') -> "void":
        """SetDirectionTolerance(itkImageToImageFilterIVD33ISSRTD33 self, double const _arg)"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_SetDirectionTolerance(self, _arg)


    def GetDirectionTolerance(self) -> "double":
        """GetDirectionTolerance(itkImageToImageFilterIVD33ISSRTD33 self) -> double"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_GetDirectionTolerance(self)

    __swig_destroy__ = _itkStrainImageFilterPython.delete_itkImageToImageFilterIVD33ISSRTD33

    def cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD33ISSRTD33 *":
        """cast(itkLightObject obj) -> itkImageToImageFilterIVD33ISSRTD33"""
        return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkImageToImageFilterIVD33ISSRTD33

        Create a new object of the class itkImageToImageFilterIVD33ISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToImageFilterIVD33ISSRTD33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageToImageFilterIVD33ISSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageToImageFilterIVD33ISSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageToImageFilterIVD33ISSRTD33.SetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_SetInput, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.GetInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_GetInput, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.PushBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PushBackInput, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.PopBackInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PopBackInput, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.PushFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PushFrontInput, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.PopFrontInput = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_PopFrontInput, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.SetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_SetCoordinateTolerance, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.GetCoordinateTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_GetCoordinateTolerance, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.SetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_SetDirectionTolerance, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33.GetDirectionTolerance = new_instancemethod(_itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_GetDirectionTolerance, None, itkImageToImageFilterIVD33ISSRTD33)
itkImageToImageFilterIVD33ISSRTD33_swigregister = _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_swigregister
itkImageToImageFilterIVD33ISSRTD33_swigregister(itkImageToImageFilterIVD33ISSRTD33)

def itkImageToImageFilterIVD33ISSRTD33_cast(obj: 'itkLightObject') -> "itkImageToImageFilterIVD33ISSRTD33 *":
    """itkImageToImageFilterIVD33ISSRTD33_cast(itkLightObject obj) -> itkImageToImageFilterIVD33ISSRTD33"""
    return _itkStrainImageFilterPython.itkImageToImageFilterIVD33ISSRTD33_cast(obj)

class itkStrainImageFilterIVD22DD(itkImageToImageFilterIVD22ISSRTD22):
    """Proxy of C++ itkStrainImageFilterIVD22DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStrainImageFilterIVD22DD_Pointer":
        """__New_orig__() -> itkStrainImageFilterIVD22DD_Pointer"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStrainImageFilterIVD22DD_Pointer":
        """Clone(itkStrainImageFilterIVD22DD self) -> itkStrainImageFilterIVD22DD_Pointer"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_Clone(self)


    def SetGradientFilter(self, _arg: 'itkImageToImageFilterID2ICVD22') -> "void":
        """SetGradientFilter(itkStrainImageFilterIVD22DD self, itkImageToImageFilterID2ICVD22 _arg)"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_SetGradientFilter(self, _arg)


    def GetGradientFilter(self) -> "itkImageToImageFilterID2ICVD22 const *":
        """GetGradientFilter(itkStrainImageFilterIVD22DD self) -> itkImageToImageFilterID2ICVD22"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GetGradientFilter(self)


    def SetVectorGradientFilter(self, _arg: 'itkImageToImageFilterIVD22ICVD22') -> "void":
        """SetVectorGradientFilter(itkStrainImageFilterIVD22DD self, itkImageToImageFilterIVD22ICVD22 _arg)"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_SetVectorGradientFilter(self, _arg)


    def GetVectorGradientFilter(self) -> "itkImageToImageFilterIVD22ICVD22 const *":
        """GetVectorGradientFilter(itkStrainImageFilterIVD22DD self) -> itkImageToImageFilterIVD22ICVD22"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GetVectorGradientFilter(self)

    INFINITESIMAL = _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_INFINITESIMAL
    GREENLAGRANGIAN = _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GREENLAGRANGIAN
    EULERIANALMANSI = _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_EULERIANALMANSI

    def SetStrainForm(self, _arg: 'itkStrainImageFilterIVD22DD::StrainFormType const') -> "void":
        """SetStrainForm(itkStrainImageFilterIVD22DD self, itkStrainImageFilterIVD22DD::StrainFormType const _arg)"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_SetStrainForm(self, _arg)


    def GetStrainForm(self) -> "itkStrainImageFilterIVD22DD::StrainFormType":
        """GetStrainForm(itkStrainImageFilterIVD22DD self) -> itkStrainImageFilterIVD22DD::StrainFormType"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GetStrainForm(self)

    __swig_destroy__ = _itkStrainImageFilterPython.delete_itkStrainImageFilterIVD22DD

    def cast(obj: 'itkLightObject') -> "itkStrainImageFilterIVD22DD *":
        """cast(itkLightObject obj) -> itkStrainImageFilterIVD22DD"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStrainImageFilterIVD22DD

        Create a new object of the class itkStrainImageFilterIVD22DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStrainImageFilterIVD22DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStrainImageFilterIVD22DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStrainImageFilterIVD22DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStrainImageFilterIVD22DD.Clone = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_Clone, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD.SetGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_SetGradientFilter, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD.GetGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GetGradientFilter, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD.SetVectorGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_SetVectorGradientFilter, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD.GetVectorGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GetVectorGradientFilter, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD.SetStrainForm = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_SetStrainForm, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD.GetStrainForm = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_GetStrainForm, None, itkStrainImageFilterIVD22DD)
itkStrainImageFilterIVD22DD_swigregister = _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_swigregister
itkStrainImageFilterIVD22DD_swigregister(itkStrainImageFilterIVD22DD)

def itkStrainImageFilterIVD22DD___New_orig__() -> "itkStrainImageFilterIVD22DD_Pointer":
    """itkStrainImageFilterIVD22DD___New_orig__() -> itkStrainImageFilterIVD22DD_Pointer"""
    return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD___New_orig__()

def itkStrainImageFilterIVD22DD_cast(obj: 'itkLightObject') -> "itkStrainImageFilterIVD22DD *":
    """itkStrainImageFilterIVD22DD_cast(itkLightObject obj) -> itkStrainImageFilterIVD22DD"""
    return _itkStrainImageFilterPython.itkStrainImageFilterIVD22DD_cast(obj)

class itkStrainImageFilterIVD33DD(itkImageToImageFilterIVD33ISSRTD33):
    """Proxy of C++ itkStrainImageFilterIVD33DD class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkStrainImageFilterIVD33DD_Pointer":
        """__New_orig__() -> itkStrainImageFilterIVD33DD_Pointer"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkStrainImageFilterIVD33DD_Pointer":
        """Clone(itkStrainImageFilterIVD33DD self) -> itkStrainImageFilterIVD33DD_Pointer"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_Clone(self)


    def SetGradientFilter(self, _arg: 'itkImageToImageFilterID3ICVD33') -> "void":
        """SetGradientFilter(itkStrainImageFilterIVD33DD self, itkImageToImageFilterID3ICVD33 _arg)"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_SetGradientFilter(self, _arg)


    def GetGradientFilter(self) -> "itkImageToImageFilterID3ICVD33 const *":
        """GetGradientFilter(itkStrainImageFilterIVD33DD self) -> itkImageToImageFilterID3ICVD33"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GetGradientFilter(self)


    def SetVectorGradientFilter(self, _arg: 'itkImageToImageFilterIVD33ICVD33') -> "void":
        """SetVectorGradientFilter(itkStrainImageFilterIVD33DD self, itkImageToImageFilterIVD33ICVD33 _arg)"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_SetVectorGradientFilter(self, _arg)


    def GetVectorGradientFilter(self) -> "itkImageToImageFilterIVD33ICVD33 const *":
        """GetVectorGradientFilter(itkStrainImageFilterIVD33DD self) -> itkImageToImageFilterIVD33ICVD33"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GetVectorGradientFilter(self)

    INFINITESIMAL = _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_INFINITESIMAL
    GREENLAGRANGIAN = _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GREENLAGRANGIAN
    EULERIANALMANSI = _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_EULERIANALMANSI

    def SetStrainForm(self, _arg: 'itkStrainImageFilterIVD33DD::StrainFormType const') -> "void":
        """SetStrainForm(itkStrainImageFilterIVD33DD self, itkStrainImageFilterIVD33DD::StrainFormType const _arg)"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_SetStrainForm(self, _arg)


    def GetStrainForm(self) -> "itkStrainImageFilterIVD33DD::StrainFormType":
        """GetStrainForm(itkStrainImageFilterIVD33DD self) -> itkStrainImageFilterIVD33DD::StrainFormType"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GetStrainForm(self)

    __swig_destroy__ = _itkStrainImageFilterPython.delete_itkStrainImageFilterIVD33DD

    def cast(obj: 'itkLightObject') -> "itkStrainImageFilterIVD33DD *":
        """cast(itkLightObject obj) -> itkStrainImageFilterIVD33DD"""
        return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkStrainImageFilterIVD33DD

        Create a new object of the class itkStrainImageFilterIVD33DD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStrainImageFilterIVD33DD.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkStrainImageFilterIVD33DD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStrainImageFilterIVD33DD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStrainImageFilterIVD33DD.Clone = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_Clone, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD.SetGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_SetGradientFilter, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD.GetGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GetGradientFilter, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD.SetVectorGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_SetVectorGradientFilter, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD.GetVectorGradientFilter = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GetVectorGradientFilter, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD.SetStrainForm = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_SetStrainForm, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD.GetStrainForm = new_instancemethod(_itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_GetStrainForm, None, itkStrainImageFilterIVD33DD)
itkStrainImageFilterIVD33DD_swigregister = _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_swigregister
itkStrainImageFilterIVD33DD_swigregister(itkStrainImageFilterIVD33DD)

def itkStrainImageFilterIVD33DD___New_orig__() -> "itkStrainImageFilterIVD33DD_Pointer":
    """itkStrainImageFilterIVD33DD___New_orig__() -> itkStrainImageFilterIVD33DD_Pointer"""
    return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD___New_orig__()

def itkStrainImageFilterIVD33DD_cast(obj: 'itkLightObject') -> "itkStrainImageFilterIVD33DD *":
    """itkStrainImageFilterIVD33DD_cast(itkLightObject obj) -> itkStrainImageFilterIVD33DD"""
    return _itkStrainImageFilterPython.itkStrainImageFilterIVD33DD_cast(obj)


def strain_image_filter(*args, **kwargs):
    """Procedural interface for StrainImageFilter"""
    import itk
    instance = itk.StrainImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def strain_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.StrainImageFilter, itkTemplate.itkTemplate):
        strain_image_filter.__doc__ = itk.StrainImageFilter.values()[0].__doc__
    else:
        strain_image_filter.__doc__ = itk.StrainImageFilter.__doc__

def image_to_image_filter(*args, **kwargs):
    """Procedural interface for ImageToImageFilter"""
    import itk
    instance = itk.ImageToImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.ImageToImageFilter, itkTemplate.itkTemplate):
        image_to_image_filter.__doc__ = itk.ImageToImageFilter.values()[0].__doc__
    else:
        image_to_image_filter.__doc__ = itk.ImageToImageFilter.__doc__




